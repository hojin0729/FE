{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport AppHeader from \"./Header.vue\";\nimport AppFooter from \"./Footer.vue\";\nimport axios from \"axios\";\nexport default {\n  name: \"QuizDetailPage\",\n  components: {\n    AppHeader,\n    AppFooter\n  },\n  data() {\n    return {\n      quiz: {\n        quizId: null,\n        memberId: null,\n        quizTitle: \"\",\n        quizCategory: \"\",\n        quizLevel: \"\",\n        quizAnswer: \"\",\n        quizDescription: \"\",\n        nickname: \"\",\n        date: null,\n        count: 0\n      },\n      comments: [],\n      newComment: \"\",\n      selectedAnswer: null,\n      showResult: false,\n      currentUserId: null\n    };\n  },\n  methods: {\n    async fetchQuizDetail() {\n      const token = localStorage.getItem(\"jwtToken\");\n      if (!token) {\n        console.error(\"로그인이 필요합니다.\");\n        this.$router.push(\"/login\");\n        return;\n      }\n      try {\n        const beUrl = process.env.VUE_APP_BE_API_URL;\n        const quizId = this.$route.params.id;\n        const response = await axios.get(`${beUrl}/api/v1/quizs/all`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        console.log('전체 퀴즈 데이터:', response.data);\n        const quizData = response.data.find(quiz => quiz.quizId === parseInt(quizId));\n        console.log('선택된 퀴즈 데이터:', quizData);\n        if (!quizData) {\n          throw new Error('퀴즈를 찾을 수 없습니다.');\n        }\n\n        // memberId로 닉네임 조회\n        let nickname = '알 수 없음';\n        if (quizData.memberId) {\n          try {\n            const nicknameResponse = await axios.get(`${beUrl}/api/v1/members/${quizData.memberId}/nickname`, {\n              headers: {\n                Authorization: `Bearer ${token}`\n              }\n            });\n            nickname = nicknameResponse.data || '알 수 없음';\n          } catch (error) {\n            console.error(\"닉네임 조회 실패:\", error);\n          }\n        }\n\n        // 퀴즈 데이터 설정\n        this.quiz = {\n          quizId: quizData.quizId,\n          memberId: quizData.memberId,\n          quizTitle: quizData.quizTitle,\n          quizCategory: quizData.quizCategory,\n          quizLevel: quizData.quizLevel,\n          quizDescription: quizData.quizDescription,\n          quizAnswer: quizData.quizAnswer,\n          nickname: nickname,\n          date: quizData.createdAt || quizData.date,\n          count: quizData.count || 0\n        };\n        console.log('설정된 퀴즈 데이터:', this.quiz);\n      } catch (error) {\n        console.error(\"퀴즈 상세 정보 조회 실패:\", error);\n        alert(\"퀴즈 정보를 불러오는데 실패했습니다.\");\n        this.$router.push('/quizboard');\n      }\n    },\n    async fetchComments() {\n      const token = localStorage.getItem(\"jwtToken\");\n      if (!token) return;\n      try {\n        const beUrl = process.env.VUE_APP_BE_API_URL;\n        const quizId = this.$route.params.id;\n        const response = await axios.get(`${beUrl}/api/v1/comments/quiz/${quizId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n\n        // 닉네임 조회를 위한 Promise 배열 생성\n        const commentsWithNicknames = await Promise.all(response.data.map(async comment => {\n          try {\n            const nicknameResponse = await axios.get(`${beUrl}/api/v1/members/${comment.memberId}/nickname`, {\n              headers: {\n                Authorization: `Bearer ${token}`\n              }\n            });\n            return {\n              ...comment,\n              nickname: nicknameResponse.data || '알 수 없음'\n            };\n          } catch (error) {\n            console.error(\"닉네임 조회 실패:\", error);\n            return {\n              ...comment,\n              nickname: '알 수 없음'\n            };\n          }\n        }));\n        this.comments = commentsWithNicknames;\n      } catch (error) {\n        console.error(\"댓글 조회 실패:\", error);\n      }\n    },\n    isCurrentUserComment(commentMemberId) {\n      return this.currentUserId === commentMemberId;\n    },\n    async submitComment() {\n      if (!this.newComment.trim()) {\n        alert(\"댓글 내용을 입력해주세요.\");\n        return;\n      }\n      const token = localStorage.getItem(\"jwtToken\");\n      if (!token || !this.currentUserId) {\n        alert(\"로그인이 필요합니다.\");\n        this.$router.push(\"/login\");\n        return;\n      }\n      try {\n        const beUrl = process.env.VUE_APP_BE_API_URL;\n        const quizId = this.$route.params.id;\n        await axios.post(`${beUrl}/api/v1/comments/quiz/${quizId}`, {\n          memberId: this.currentUserId,\n          quizCommentContent: this.newComment\n        }, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        this.newComment = \"\";\n        await this.fetchComments();\n      } catch (error) {\n        console.error(\"댓글 작성 실패:\", error);\n        alert(\"댓글 작성에 실패했습니다.\");\n      }\n    },\n    async deleteComment(commentId) {\n      if (!confirm(\"댓글을 삭제하시겠습니까?\")) return;\n      const token = localStorage.getItem(\"jwtToken\");\n      if (!token) return;\n      try {\n        const beUrl = process.env.VUE_APP_BE_API_URL;\n        await axios.delete(`${beUrl}/api/v1/comments/${commentId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        await this.fetchComments();\n      } catch (error) {\n        console.error(\"댓글 삭제 실패:\", error);\n        alert(\"댓글 삭제에 실패했습니다.\");\n      }\n    },\n    selectAnswer(answer) {\n      this.selectedAnswer = answer;\n    },\n    submitAnswer() {\n      this.showResult = true;\n    },\n    formatDate(date) {\n      if (!date) return '';\n      try {\n        // Array 형식인 경우 (댓글 날짜)\n        if (Array.isArray(date)) {\n          const year = date[0];\n          const month = String(date[1]).padStart(2, '0');\n          const day = String(date[2]).padStart(2, '0');\n          const hours = String(date[3]).padStart(2, '0');\n          const minutes = String(date[4]).padStart(2, '0');\n          return `${year}-${month}-${day} ${hours}:${minutes}`;\n        }\n        // ISO 문자열 형식인 경우 (퀴즈 성 날짜)\n        else {\n          const dateObj = new Date(date);\n          const year = dateObj.getFullYear();\n          const month = String(dateObj.getMonth() + 1).padStart(2, '0');\n          const day = String(dateObj.getDate()).padStart(2, '0');\n          const hours = String(dateObj.getHours()).padStart(2, '0');\n          const minutes = String(dateObj.getMinutes()).padStart(2, '0');\n          return `${year}-${month}-${day} ${hours}:${minutes}`;\n        }\n      } catch (error) {\n        console.error('날짜 변환 에러:', error, date);\n        return '';\n      }\n    },\n    startEditing(comment) {\n      comment.isEditing = true;\n      comment.editContent = comment.quizCommentContent;\n    },\n    async saveEdit(comment) {\n      if (!comment.editContent.trim()) {\n        alert(\"댓글 내용을 입력해주세요.\");\n        return;\n      }\n      const token = localStorage.getItem(\"jwtToken\");\n      if (!token) return;\n      try {\n        const beUrl = process.env.VUE_APP_BE_API_URL;\n        await axios.put(`${beUrl}/api/v1/comments/${comment.quizCommentId}`, {\n          quizCommentContent: comment.editContent\n        }, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        comment.isEditing = false;\n        await this.fetchComments(); // 댓글 목록 새로고침\n      } catch (error) {\n        console.error(\"댓글 수정 실패:\", error);\n        alert(\"댓글 수정에 실패했습니다.\");\n      }\n    },\n    cancelEdit(comment) {\n      comment.isEditing = false;\n      comment.editContent = comment.quizCommentContent;\n    }\n  },\n  async mounted() {\n    const memberId = localStorage.getItem(\"memberId\");\n    this.currentUserId = memberId ? parseInt(memberId) : null;\n    await this.fetchQuizDetail();\n    await this.fetchComments();\n  }\n};","map":{"version":3,"names":["AppHeader","AppFooter","axios","name","components","data","quiz","quizId","memberId","quizTitle","quizCategory","quizLevel","quizAnswer","quizDescription","nickname","date","count","comments","newComment","selectedAnswer","showResult","currentUserId","methods","fetchQuizDetail","token","localStorage","getItem","console","error","$router","push","beUrl","process","env","VUE_APP_BE_API_URL","$route","params","id","response","get","headers","Authorization","log","quizData","find","parseInt","Error","nicknameResponse","createdAt","alert","fetchComments","commentsWithNicknames","Promise","all","map","comment","isCurrentUserComment","commentMemberId","submitComment","trim","post","quizCommentContent","deleteComment","commentId","confirm","delete","selectAnswer","answer","submitAnswer","formatDate","Array","isArray","year","month","String","padStart","day","hours","minutes","dateObj","Date","getFullYear","getMonth","getDate","getHours","getMinutes","startEditing","isEditing","editContent","saveEdit","put","quizCommentId","cancelEdit","mounted"],"sources":["/home/runner/work/FE/FE/src/components/QuizDetailPage.vue"],"sourcesContent":["<template>\n  <div class=\"quiz-detail-page\">\n    <AppHeader />\n    <div class=\"content\">\n      <div class=\"quiz-detail\">\n        <!-- 퀴즈 정보 섹션 -->\n        <div class=\"quiz-info\">\n          <div class=\"quiz-header\">\n            <h2>{{ quiz.quizTitle }}</h2>\n            <div class=\"quiz-meta\">\n              <span class=\"category-badge\">{{ quiz.quizCategory }}</span>\n              <span class=\"level-badge\">{{ quiz.quizLevel }}</span>\n              <span class=\"author\">작성자: {{ quiz.nickname }}</span>\n              <span class=\"date\">작성일: {{ formatDate(quiz.date) }}</span>\n            </div>\n          </div>\n          \n          <!-- 퀴즈 내용 -->\n          <div class=\"quiz-content\">\n            <div class=\"quiz-description\">\n              <h3>문제 내용</h3>\n              <p>{{ quiz.quizDescription }}</p>\n            </div>\n            <div class=\"quiz-answer\">\n              <h3>정답</h3>\n              <p>{{ quiz.quizAnswer }}</p>\n            </div>\n          </div>\n        </div>\n\n        <!-- 댓글 섹션 -->\n        <div class=\"comments-section\">\n          <h3>댓글</h3>\n          <div class=\"comment-form\">\n            <textarea \n              v-model=\"newComment\" \n              placeholder=\"댓글을 작성해주세요\"\n              rows=\"3\"\n              maxlength=\"500\"\n            ></textarea>\n            <div class=\"comment-form-footer\">\n              <span class=\"char-count\">{{ newComment.length }}/500자</span>\n              <button @click=\"submitComment\" class=\"comment-submit\">댓글 작성</button>\n            </div>\n          </div>\n          \n          <div class=\"comments-list\">\n            <div v-for=\"comment in comments\" :key=\"comment.quizCommentId\" class=\"comment\">\n              <div class=\"comment-header\">\n                <div class=\"comment-left\">\n                  <span class=\"comment-author\">{{ comment.nickname }}</span>\n                  <span class=\"comment-date\">{{ formatDate(comment.quizCommentCreatedAt) }}</span>\n                </div>\n                <div class=\"comment-actions\" v-if=\"isCurrentUserComment(comment.memberId)\">\n                  <button \n                    v-if=\"!comment.isEditing\" \n                    @click=\"startEditing(comment)\" \n                    class=\"edit-btn\"\n                  >\n                    수정\n                  </button>\n                  <button \n                    @click=\"deleteComment(comment.quizCommentId)\" \n                    class=\"delete-btn\"\n                  >\n                    삭제\n                  </button>\n                </div>\n              </div>\n              <div v-if=\"comment.isEditing\" class=\"edit-form\">\n                <textarea \n                  v-model=\"comment.editContent\" \n                  rows=\"3\"\n                  maxlength=\"500\"\n                ></textarea>\n                <div class=\"edit-form-footer\">\n                  <span class=\"char-count\">{{ comment.editContent.length }}/500자</span>\n                  <div class=\"edit-buttons\">\n                    <button @click=\"saveEdit(comment)\" class=\"save-btn\">저장</button>\n                    <button @click=\"cancelEdit(comment)\" class=\"cancel-btn\">취소</button>\n                  </div>\n                </div>\n              </div>\n              <p v-else class=\"comment-content\">{{ comment.quizCommentContent }}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <AppFooter />\n  </div>\n</template>\n\n<script>\nimport AppHeader from \"./Header.vue\";\nimport AppFooter from \"./Footer.vue\";\nimport axios from \"axios\";\n\nexport default {\n  name: \"QuizDetailPage\",\n  components: {\n    AppHeader,\n    AppFooter,\n  },\n  data() {\n    return {\n      quiz: {\n        quizId: null,\n        memberId: null,\n        quizTitle: \"\",\n        quizCategory: \"\",\n        quizLevel: \"\",\n        quizAnswer: \"\",\n        quizDescription: \"\",\n        nickname: \"\",\n        date: null,\n        count: 0\n      },\n      comments: [],\n      newComment: \"\",\n      selectedAnswer: null,\n      showResult: false,\n      currentUserId: null,\n    };\n  },\n  methods: {\n    async fetchQuizDetail() {\n      const token = localStorage.getItem(\"jwtToken\");\n      if (!token) {\n        console.error(\"로그인이 필요합니다.\");\n        this.$router.push(\"/login\");\n        return;\n      }\n\n      try {\n        const beUrl = process.env.VUE_APP_BE_API_URL;\n        const quizId = this.$route.params.id;\n        \n        const response = await axios.get(`${beUrl}/api/v1/quizs/all`, {\n          headers: { Authorization: `Bearer ${token}` }\n        });\n        \n        console.log('전체 퀴즈 데이터:', response.data);\n        \n        const quizData = response.data.find(quiz => quiz.quizId === parseInt(quizId));\n        console.log('선택된 퀴즈 데이터:', quizData);\n        \n        if (!quizData) {\n          throw new Error('퀴즈를 찾을 수 없습니다.');\n        }\n\n        // memberId로 닉네임 조회\n        let nickname = '알 수 없음';\n        if (quizData.memberId) {\n          try {\n            const nicknameResponse = await axios.get(\n              `${beUrl}/api/v1/members/${quizData.memberId}/nickname`,\n              {\n                headers: {\n                  Authorization: `Bearer ${token}`,\n                },\n              }\n            );\n            nickname = nicknameResponse.data || '알 수 없음';\n          } catch (error) {\n            console.error(\"닉네임 조회 실패:\", error);\n          }\n        }\n\n        // 퀴즈 데이터 설정\n        this.quiz = {\n          quizId: quizData.quizId,\n          memberId: quizData.memberId,\n          quizTitle: quizData.quizTitle,\n          quizCategory: quizData.quizCategory,\n          quizLevel: quizData.quizLevel,\n          quizDescription: quizData.quizDescription,\n          quizAnswer: quizData.quizAnswer,\n          nickname: nickname,\n          date: quizData.createdAt || quizData.date,\n          count: quizData.count || 0\n        };\n\n        console.log('설정된 퀴즈 데이터:', this.quiz);\n\n      } catch (error) {\n        console.error(\"퀴즈 상세 정보 조회 실패:\", error);\n        alert(\"퀴즈 정보를 불러오는데 실패했습니다.\");\n        this.$router.push('/quizboard');\n      }\n    },\n    async fetchComments() {\n      const token = localStorage.getItem(\"jwtToken\");\n      if (!token) return;\n\n      try {\n        const beUrl = process.env.VUE_APP_BE_API_URL;\n        const quizId = this.$route.params.id;\n        \n        const response = await axios.get(`${beUrl}/api/v1/comments/quiz/${quizId}`, {\n          headers: { Authorization: `Bearer ${token}` }\n        });\n        \n        // 닉네임 조회를 위한 Promise 배열 생성\n        const commentsWithNicknames = await Promise.all(\n          response.data.map(async (comment) => {\n            try {\n              const nicknameResponse = await axios.get(\n                `${beUrl}/api/v1/members/${comment.memberId}/nickname`,\n                { headers: { Authorization: `Bearer ${token}` }}\n              );\n              return {\n                ...comment,\n                nickname: nicknameResponse.data || '알 수 없음'\n              };\n            } catch (error) {\n              console.error(\"닉네임 조회 실패:\", error);\n              return {\n                ...comment,\n                nickname: '알 수 없음'\n              };\n            }\n          })\n        );\n        \n        this.comments = commentsWithNicknames;\n      } catch (error) {\n        console.error(\"댓글 조회 실패:\", error);\n      }\n    },\n    isCurrentUserComment(commentMemberId) {\n      return this.currentUserId === commentMemberId;\n    },\n    async submitComment() {\n      if (!this.newComment.trim()) {\n        alert(\"댓글 내용을 입력해주세요.\");\n        return;\n      }\n\n      const token = localStorage.getItem(\"jwtToken\");\n      if (!token || !this.currentUserId) {\n        alert(\"로그인이 필요합니다.\");\n        this.$router.push(\"/login\");\n        return;\n      }\n\n      try {\n        const beUrl = process.env.VUE_APP_BE_API_URL;\n        const quizId = this.$route.params.id;\n        \n        await axios.post(\n          `${beUrl}/api/v1/comments/quiz/${quizId}`,\n          {\n            memberId: this.currentUserId,\n            quizCommentContent: this.newComment\n          },\n          { headers: { Authorization: `Bearer ${token}` }}\n        );\n\n        this.newComment = \"\";\n        await this.fetchComments();\n      } catch (error) {\n        console.error(\"댓글 작성 실패:\", error);\n        alert(\"댓글 작성에 실패했습니다.\");\n      }\n    },\n    async deleteComment(commentId) {\n      if (!confirm(\"댓글을 삭제하시겠습니까?\")) return;\n\n      const token = localStorage.getItem(\"jwtToken\");\n      if (!token) return;\n\n      try {\n        const beUrl = process.env.VUE_APP_BE_API_URL;\n        \n        await axios.delete(`${beUrl}/api/v1/comments/${commentId}`, {\n          headers: { Authorization: `Bearer ${token}` }\n        });\n\n        await this.fetchComments();\n      } catch (error) {\n        console.error(\"댓글 삭제 실패:\", error);\n        alert(\"댓글 삭제에 실패했습니다.\");\n      }\n    },\n    selectAnswer(answer) {\n      this.selectedAnswer = answer;\n    },\n    submitAnswer() {\n      this.showResult = true;\n    },\n    formatDate(date) {\n      if (!date) return '';\n      \n      try {\n        // Array 형식인 경우 (댓글 날짜)\n        if (Array.isArray(date)) {\n          const year = date[0];\n          const month = String(date[1]).padStart(2, '0');\n          const day = String(date[2]).padStart(2, '0');\n          const hours = String(date[3]).padStart(2, '0');\n          const minutes = String(date[4]).padStart(2, '0');\n          \n          return `${year}-${month}-${day} ${hours}:${minutes}`;\n        } \n        // ISO 문자열 형식인 경우 (퀴즈 성 날짜)\n        else {\n          const dateObj = new Date(date);\n          const year = dateObj.getFullYear();\n          const month = String(dateObj.getMonth() + 1).padStart(2, '0');\n          const day = String(dateObj.getDate()).padStart(2, '0');\n          const hours = String(dateObj.getHours()).padStart(2, '0');\n          const minutes = String(dateObj.getMinutes()).padStart(2, '0');\n          \n          return `${year}-${month}-${day} ${hours}:${minutes}`;\n        }\n      } catch (error) {\n        console.error('날짜 변환 에러:', error, date);\n        return '';\n      }\n    },\n    startEditing(comment) {\n      comment.isEditing = true;\n      comment.editContent = comment.quizCommentContent;\n    },\n    async saveEdit(comment) {\n      if (!comment.editContent.trim()) {\n        alert(\"댓글 내용을 입력해주세요.\");\n        return;\n      }\n\n      const token = localStorage.getItem(\"jwtToken\");\n      if (!token) return;\n\n      try {\n        const beUrl = process.env.VUE_APP_BE_API_URL;\n        \n        await axios.put(\n          `${beUrl}/api/v1/comments/${comment.quizCommentId}`,\n          {\n            quizCommentContent: comment.editContent\n          },\n          { headers: { Authorization: `Bearer ${token}` }}\n        );\n\n        comment.isEditing = false;\n        await this.fetchComments(); // 댓글 목록 새로고침\n      } catch (error) {\n        console.error(\"댓글 수정 실패:\", error);\n        alert(\"댓글 수정에 실패했습니다.\");\n      }\n    },\n    cancelEdit(comment) {\n      comment.isEditing = false;\n      comment.editContent = comment.quizCommentContent;\n    }\n  },\n  async mounted() {\n    const memberId = localStorage.getItem(\"memberId\");\n    this.currentUserId = memberId ? parseInt(memberId) : null;\n    \n    await this.fetchQuizDetail();\n    await this.fetchComments();\n  }\n};\n</script>\n\n<style scoped>\n.quiz-detail-page {\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  overflow-y: scroll;\n  max-height: 100vh;\n  scrollbar-width: none;\n  -ms-overflow-style: none;\n}\n\n.content {\n  flex: 1;\n  padding: 20px;\n  max-width: 1200px;\n  margin: 0 auto;\n  width: 100%;\n  padding-top: 80px;\n  padding-bottom: 40px;\n  overflow-y: scroll;\n  scrollbar-width: none;\n  -ms-overflow-style: none;\n}\n\n.content::-webkit-scrollbar {\n  display: none;\n}\n\n.quiz-detail {\n  background-color: white;\n  border-radius: 8px;\n  padding: 20px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  margin-bottom: 20px;\n}\n\n.quiz-header {\n  text-align: left;\n  margin-bottom: 20px;\n}\n\n.quiz-header h2 {\n  font-size: 24px;\n  margin: 0 0 15px 0;\n  padding: 0;\n  color: #333;\n}\n\n.quiz-meta {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 8px;\n  align-items: center;\n  color: #666;\n  font-size: 14px;\n}\n\n.quiz-info {\n  background-color: white;\n  border-radius: 8px;\n  padding: 20px;\n  margin-bottom: 20px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.quiz-content {\n  margin-top: 30px;\n}\n\n.quiz-description h3,\n.quiz-answer h3 {\n  font-size: 18px;\n  color: #333;\n  margin-bottom: 10px;\n  text-align: left;\n}\n\n.quiz-description p,\n.quiz-answer p {\n  line-height: 1.6;\n  color: #444;\n  text-align: left;\n}\n\n.category-badge,\n.level-badge {\n  display: inline-block;\n  padding: 2px 8px;\n  border-radius: 12px;\n  font-size: 12px;\n  background-color: #e9ecef;\n  color: #495057;\n}\n\n.answer-section {\n  display: flex;\n  justify-content: center;\n  gap: 20px;\n  margin: 20px 0;\n}\n\n.answer-button {\n  width: 100px;\n  height: 100px;\n  border: 2px solid #ddd;\n  border-radius: 50%;\n  background-color: white;\n  font-size: 24px;\n  cursor: pointer;\n  transition: all 0.2s;\n}\n\n.answer-button:hover {\n  border-color: rgba(0, 0, 0, 0.865);\n}\n\n.answer-button.selected {\n  background-color: rgba(0, 0, 0, 0.865);\n  color: white;\n  border-color: rgba(0, 0, 0, 0.865);\n}\n\n.answer-button.correct {\n  background-color: #28a745;\n  color: white;\n  border-color: #28a745;\n}\n\n.answer-button.wrong {\n  background-color: #dc3545;\n  color: white;\n  border-color: #dc3545;\n}\n\n.submit-button {\n  display: block;\n  margin: 20px auto;\n  padding: 10px 20px;\n  background-color: rgba(0, 0, 0, 0.865);\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.quiz-explanation {\n  margin-top: 30px;\n  padding: 20px;\n  background-color: #f8f9fa;\n  border-radius: 4px;\n}\n\n.comments-section {\n  margin-top: 40px;\n  max-height: calc(100vh - 200px);\n  overflow-y: scroll;\n  scrollbar-width: none;\n  -ms-overflow-style: none;\n}\n\n.comments-section::-webkit-scrollbar {\n  display: none;\n}\n\n.comment-form {\n  margin-bottom: 20px;\n}\n\n.comment-form textarea {\n  width: 98%;\n  padding: 10px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  resize: vertical;\n  margin-bottom: 10px;\n}\n\n.comment-submit {\n  padding: 8px 16px;\n  background-color: rgba(0, 0, 0, 0.865);\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.comment {\n  padding: 15px;\n  border-bottom: 1px solid #ddd;\n}\n\n.comment-header {\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 8px;\n  font-size: 14px;\n}\n\n.comment-left {\n  display: flex;\n  align-items: center;\n  gap: 16px;\n}\n\n.comment-author {\n  font-weight: bold;\n  color: #333;\n}\n\n.comment-date {\n  color: #666;\n  font-size: 0.9em;\n}\n\n.view-count {\n  color: #666;\n  font-size: 0.9em;\n}\n\n.quiz-meta > span {\n  display: inline-flex;\n  align-items: center;\n}\n\n.quiz-meta > span:not(:last-child)::after {\n  content: \"•\";\n  margin: 0 8px;\n  color: #ddd;\n}\n\n.comment-form-footer {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: 8px;\n}\n\n.char-count {\n  font-size: 12px;\n  color: #666;\n}\n\n.delete-btn {\n  background: none;\n  border: none;\n  color: #dc3545;\n  cursor: pointer;\n  font-size: 12px;\n  margin-left: 10px;\n}\n\n.delete-btn:hover {\n  text-decoration: underline;\n}\n\n.comment-actions {\n  display: flex;\n  align-items: center;\n}\n\n.edit-btn {\n  background: none;\n  border: none;\n  color: #666;\n  cursor: pointer;\n  font-size: 12px;\n  margin-right: 10px;\n}\n\n.edit-btn:hover {\n  text-decoration: underline;\n}\n\n.edit-form {\n  margin-top: 10px;\n}\n\n.edit-form textarea {\n  width: 100%;\n  padding: 8px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  resize: vertical;\n}\n\n.edit-form-footer {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: 8px;\n}\n\n.edit-buttons {\n  display: flex;\n  gap: 8px;\n}\n\n.save-btn,\n.cancel-btn {\n  padding: 4px 12px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 12px;\n}\n\n.save-btn {\n  background-color: rgba(0, 0, 0, 0.865);\n  color: white;\n}\n\n.cancel-btn {\n  background-color: #e9ecef;\n  color: #666;\n}\n\n.save-btn:hover {\n  background-color: #000;\n}\n\n.cancel-btn:hover {\n  background-color: #dee2e6;\n}\n\n@media (max-width: 768px) {\n  .content {\n    padding: 10px;\n  }\n  \n  .quiz-meta {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 8px;\n  }\n  \n  .answer-section {\n    flex-direction: column;\n    align-items: center;\n  }\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}