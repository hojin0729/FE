{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport AppHeader from \"./Header.vue\";\nimport AppFooter from \"./Footer.vue\";\nimport axios from 'axios';\nexport default {\n  name: 'MyPage',\n  components: {\n    AppHeader,\n    AppFooter\n  },\n  data() {\n    return {\n      games: [],\n      quizList: [],\n      showQuizModal: false,\n      currentGameId: null,\n      searchType: 'all',\n      searchKeyword: '',\n      selectedQuizzes: [],\n      showQuizListModalFlag: false,\n      currentGameQuizzes: [],\n      selectedCurrentQuizzes: [],\n      currentGame: null,\n      quizListSearchType: 'all',\n      quizListSearchKeyword: '',\n      currentPage: 1,\n      itemsPerPage: 10,\n      totalItems: 0,\n      // 총 퀴즈 수\n      quizListCurrentPage: 1,\n      quizListItemsPerPage: 10,\n      showGameModal: false,\n      newGame: {\n        gameName: '',\n        gamePassword: ''\n      },\n      quizAddSearchType: 'all',\n      quizAddSearchKeyword: '',\n      quizAddCurrentPage: 1,\n      quizAddItemsPerPage: 10,\n      quizAddTotalItems: 0\n    };\n  },\n  computed: {\n    filteredQuizzes() {\n      if (!this.quizList) return [];\n      if (!this.searchKeyword) return this.quizList;\n      const keyword = this.searchKeyword.toLowerCase();\n      return this.quizList.filter(quiz => {\n        if (!quiz) return false;\n        switch (this.searchType) {\n          case 'title':\n            return quiz.quizTitle?.toLowerCase().includes(keyword);\n          case 'category':\n            return quiz.quizCategory?.toLowerCase().includes(keyword);\n          case 'level':\n            return quiz.quizLevel?.toLowerCase().includes(keyword);\n          case 'all':\n            return quiz.quizTitle?.toLowerCase().includes(keyword) || quiz.quizCategory?.toLowerCase().includes(keyword) || quiz.quizLevel?.toLowerCase().includes(keyword);\n          default:\n            return true;\n        }\n      });\n    },\n    selectAll: {\n      get() {\n        return this.quizList.length > 0 && this.selectedQuizzes.length === this.quizList.length;\n      },\n      set(value) {\n        this.selectedQuizzes = value ? [...this.quizList] : [];\n      }\n    },\n    selectAllCurrentQuizzes: {\n      get() {\n        return this.currentGameQuizzes.length === this.selectedCurrentQuizzes.length;\n      },\n      set(value) {\n        this.selectedCurrentQuizzes = value ? [...this.currentGameQuizzes] : [];\n      }\n    },\n    filteredCurrentGameQuizzes() {\n      if (!this.currentGameQuizzes) return [];\n      if (!this.quizListSearchKeyword) return this.currentGameQuizzes;\n      const keyword = this.quizListSearchKeyword.toLowerCase();\n      return this.currentGameQuizzes.filter(quiz => {\n        if (!quiz) return false;\n        switch (this.quizListSearchType) {\n          case 'title':\n            return quiz.quizTitle?.toLowerCase().includes(keyword);\n          case 'category':\n            return quiz.quizCategory?.toLowerCase().includes(keyword);\n          case 'level':\n            return quiz.quizLevel?.toLowerCase().includes(keyword);\n          case 'all':\n            return quiz.quizTitle?.toLowerCase().includes(keyword) || quiz.quizCategory?.toLowerCase().includes(keyword) || quiz.quizLevel?.toLowerCase().includes(keyword);\n          default:\n            return true;\n        }\n      });\n    },\n    paginatedQuizzes() {\n      return this.quizList;\n    },\n    totalPages() {\n      return Math.ceil(this.totalItems / this.itemsPerPage);\n    },\n    paginatedCurrentGameQuizzes() {\n      if (!this.filteredCurrentGameQuizzes) return [];\n      const start = (this.quizListCurrentPage - 1) * this.quizListItemsPerPage;\n      const end = start + this.quizListItemsPerPage;\n      return this.filteredCurrentGameQuizzes.slice(start, end);\n    },\n    quizListTotalPages() {\n      return Math.ceil(this.filteredCurrentGameQuizzes.length / this.quizListItemsPerPage);\n    },\n    pageDisplay() {\n      return `${this.currentPage}/${this.totalPages}`;\n    },\n    isValidGame() {\n      return this.newGame.gameName && this.newGame.gamePassword;\n    },\n    quizAddTotalPages() {\n      return Math.ceil(this.quizAddTotalItems / this.quizAddItemsPerPage);\n    },\n    filteredAddQuizzes() {\n      if (!this.quizList) return [];\n      if (!this.quizAddSearchKeyword) return this.quizList;\n      const keyword = this.quizAddSearchKeyword.toLowerCase();\n      return this.quizList.filter(quiz => {\n        if (!quiz) return false;\n        switch (this.quizAddSearchType) {\n          case 'title':\n            return quiz.quizTitle?.toLowerCase().includes(keyword);\n          case 'category':\n            return quiz.quizCategory?.toLowerCase().includes(keyword);\n          case 'level':\n            return quiz.quizLevel?.toLowerCase().includes(keyword);\n          case 'all':\n            return quiz.quizTitle?.toLowerCase().includes(keyword) || quiz.quizCategory?.toLowerCase().includes(keyword) || quiz.quizLevel?.toLowerCase().includes(keyword);\n          default:\n            return true;\n        }\n      });\n    },\n    paginatedAddQuizzes() {\n      const start = (this.quizAddCurrentPage - 1) * this.quizAddItemsPerPage;\n      const end = start + this.quizAddItemsPerPage;\n      return this.filteredAddQuizzes.slice(start, end);\n    }\n  },\n  methods: {\n    // 내 게임 목록 조회\n    async fetchMyGames() {\n      const token = localStorage.getItem(\"jwtToken\");\n      const memberId = localStorage.getItem(\"memberId\");\n      if (!token || !memberId) {\n        console.error(\"로그인이 필요합니다.\");\n        this.$router.push(\"/login\");\n        return;\n      }\n      try {\n        // /api/v1/games/member/{memberId} 엔드포인트로 변경\n        const response = await axios.get(`${process.env.VUE_APP_BE_API_URL}/api/v1/games/member/${memberId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        this.games = response.data;\n      } catch (error) {\n        console.error(\"게임 목록 조회 실패:\", error);\n        alert(\"게임 목록을 오는데 실패했습니다.\");\n      }\n    },\n    // 전체 퀴즈 목록 조회\n    async fetchQuizList(page = this.currentPage - 1, size = this.itemsPerPage) {\n      const token = localStorage.getItem(\"jwtToken\");\n      const beUrl = process.env.VUE_APP_BE_API_URL;\n      try {\n        // 현재 게임의 퀴즈 목록 가져오기\n        const currentGameResponse = await axios.get(`${beUrl}/api/v1/teacher-quizzes/game/${this.currentGameId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const existingQuizIds = currentGameResponse.data.map(quiz => quiz.quizId);\n\n        // 전체 퀴즈 목록을 한 번에 가져오기\n        const response = await axios.get(`${beUrl}/api/v1/quizs/all`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          params: {\n            page: 0,\n            size: 9999\n          }\n        });\n\n        // 이미 추가된 퀴즈를 제외한 전체 퀴즈\n        const availableQuizzes = response.data.content.filter(quiz => !existingQuizIds.includes(quiz.quizId));\n\n        // 현재 페이지의 시작과 끝 인덱스 계산\n        const startIndex = page * size;\n        const endIndex = startIndex + size;\n\n        // 현재 페이지에 표시할 퀴즈\n        this.quizList = availableQuizzes.slice(startIndex, endIndex).map(quiz => ({\n          quizId: quiz.quizId,\n          memberNickname: quiz.memberNickname || '알 수 없음',\n          quizCategory: quiz.quizCategory,\n          quizTitle: quiz.quizTitle,\n          quizLevel: quiz.quizLevel,\n          quizAnswer: quiz.quizAnswer,\n          quizDescription: quiz.quizDescription,\n          date: quiz.date,\n          count: quiz.count || 0\n        }));\n\n        // 전체 사용 가능한 퀴즈 수\n        const totalAvailableQuizzes = availableQuizzes.length;\n\n        // 페이지네이션 정보 업데이트 (전체 페이지 수는 처음 계산된 값을 유지)\n        if (!this.totalPages) {\n          this.totalPages = Math.ceil(totalAvailableQuizzes / this.itemsPerPage);\n        }\n        this.totalItems = totalAvailableQuizzes;\n      } catch (error) {\n        console.error(\"퀴즈 목록 조회 실패:\", error);\n        alert(\"퀴즈 목록을 불러오는 데 실패했습니다.\");\n      }\n    },\n    // 퀴즈  모달 표시\n    async showAddQuizModal(game) {\n      this.currentGameId = game.gameId;\n      this.currentGame = game;\n      this.currentPage = 1;\n      this.selectedQuizzes = [];\n      this.totalPages = null; // 모달이 열릴 때 totalPages 초기화\n      await this.fetchCurrentGameQuizzes();\n      await this.fetchQuizList(0);\n      this.showQuizModal = true;\n    },\n    async handleSearch() {\n      this.currentPage = 1;\n      await this.fetchQuizList();\n    },\n    // 퀴즈 선택 및 게임에 추가\n    async selectQuiz(quiz) {\n      if (!confirm(`\"${quiz.quizTitle}\" 퀴즈를 게임에 추가하시겠습니까?`)) return;\n      const token = localStorage.getItem(\"jwtToken\");\n      const memberId = Number(localStorage.getItem(\"memberId\"));\n      try {\n        const teacherQuizRequest = {\n          quizId: quiz.quizId,\n          gameId: this.currentGameId,\n          isStopped: 0\n        };\n        const teacherQuizResponse = await axios.post(`${process.env.VUE_APP_BE_API_URL}/api/v1/teacher-quizzes/member/${memberId}`, teacherQuizRequest, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (teacherQuizResponse.data) {\n          console.log('퀴즈 성으로 저장되었습니다:', teacherQuizResponse.data);\n          await this.fetchMyGames();\n          this.closeQuizModal();\n        }\n      } catch (error) {\n        console.error(\"퀴즈 추가 실패:\", error);\n        alert(\"퀴즈 추가에 실패습니다.\");\n      }\n    },\n    // 게임에서 퀴즈 제거\n    async removeQuizFromGame(gameId, quizId) {\n      if (!confirm('이 퀴즈를 게임에서 제거하시겠습니까?')) return;\n      const token = localStorage.getItem(\"jwtToken\");\n      try {\n        await axios.delete(`${process.env.VUE_APP_BE_API_URL}/api/v1/games/${gameId}/quizzes/${quizId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        await this.fetchMyGames();\n        alert(\"퀴즈가 제거되었습니다.\");\n      } catch (error) {\n        console.error(\"퀴즈 제거 실패:\", error);\n        alert(\"퀴즈 제거 실패했습니다.\");\n      }\n    },\n    toggleSelectAll() {\n      this.selectAll = !this.selectAll;\n    },\n    async addSelectedQuizzes() {\n      if (!this.selectedQuizzes.length) {\n        alert('선택 퀴즈가 없습니다.');\n        return;\n      }\n      if (!confirm(`선택한 ${this.selectedQuizzes.length}개의 퀴즈를 추가하시겠습니까?`)) return;\n      const token = localStorage.getItem(\"jwtToken\");\n      const memberId = Number(localStorage.getItem(\"memberId\"));\n      try {\n        for (const quiz of this.selectedQuizzes) {\n          const teacherQuizRequest = {\n            quizId: quiz.quizId,\n            gameId: this.currentGameId,\n            isStopped: 0\n          };\n          await axios.post(`${process.env.VUE_APP_BE_API_URL}/api/v1/teacher-quizzes/member/${memberId}`, teacherQuizRequest, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n        }\n        await this.fetchMyGames();\n        this.closeQuizModal();\n        alert('선택한 퀴즈가 성공적로 추가되었습니다.');\n      } catch (error) {\n        console.error(\"퀴즈 추가 실패:\", error);\n        alert(\"퀴즈 추가에 실패했습니다.\");\n      }\n    },\n    closeQuizModal() {\n      this.showQuizModal = false;\n      this.searchKeyword = '';\n      this.selectedQuizzes = []; // 모달 닫 때 선택 기화\n    },\n    toggleQuizSelection(quiz) {\n      const index = this.selectedQuizzes.findIndex(q => q.quizId === quiz.quizId);\n      if (index === -1) {\n        this.selectedQuizzes.push(quiz);\n      } else {\n        this.selectedQuizzes.splice(index, 1);\n      }\n    },\n    async showQuizListModal(game) {\n      const token = localStorage.getItem(\"jwtToken\");\n      const beUrl = process.env.VUE_APP_BE_API_URL;\n      try {\n        // TeacherQuiz 목록을 가져옴 (이미 memberNickname이 함되어 있음)\n        const teacherQuizResponse = await axios.get(`${beUrl}/api/v1/teacher-quizzes/game/${game.gameId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        console.log('TeacherQuiz 응답:', teacherQuizResponse.data);\n        const quizzesWithDetails = await Promise.all(teacherQuizResponse.data.map(async teacherQuiz => {\n          try {\n            // 1. quizId로 퀴즈 정보 조회\n            const quizResponse = await axios.get(`${beUrl}/api/v1/quizs/${teacherQuiz.quizId}`, {\n              headers: {\n                Authorization: `Bearer ${token}`\n              }\n            });\n            const quiz = quizResponse.data;\n            console.log('퀴즈 정보:', quiz);\n            return {\n              teacherQuizId: teacherQuiz.teacherQuizId,\n              quizId: teacherQuiz.quizId,\n              gameId: teacherQuiz.gameId,\n              isStopped: teacherQuiz.isStopped,\n              quizTitle: quiz.quiz,\n              quizCategory: quiz.category,\n              quizLevel: quiz.level,\n              quizType: quiz.type,\n              quizAnswer: quiz.answer,\n              quizDescription: quiz.desc,\n              nickname: teacherQuiz.memberNickname,\n              // 백엔드에서 받은 memberNickname 사용\n              createdAt: quiz.createdAt || new Date().toISOString()\n            };\n          } catch (error) {\n            console.error(`퀴즈 정보 조회 실패 (ID: ${teacherQuiz.quizId}):`, error);\n            return null;\n          }\n        }));\n        this.currentGameQuizzes = quizzesWithDetails.filter(quiz => quiz !== null);\n        this.currentGame = game;\n        this.showQuizListModalFlag = true;\n      } catch (error) {\n        console.error(\"퀴즈 목록 조회 실패:\", error);\n        alert(\"퀴즈 목록을 불러오는데 실패했습니다.\");\n      }\n    },\n    closeQuizListModal() {\n      this.showQuizListModalFlag = false;\n      this.selectedCurrentQuizzes = [];\n      this.currentGame = null;\n      this.quizListSearchType = 'all';\n      this.quizListSearchKeyword = '';\n    },\n    toggleCurrentQuizSelection(quiz) {\n      const index = this.selectedCurrentQuizzes.findIndex(q => q.quizId === quiz.quizId);\n      if (index === -1) {\n        this.selectedCurrentQuizzes.push(quiz);\n      } else {\n        this.selectedCurrentQuizzes.splice(index, 1);\n      }\n    },\n    toggleSelectAllCurrentQuizzes() {\n      this.selectAllCurrentQuizzes = !this.selectAllCurrentQuizzes;\n    },\n    async removeSelectedQuizzes() {\n      if (!this.selectedCurrentQuizzes.length) {\n        alert('선된 퀴즈가 없습니다.');\n        return;\n      }\n      if (!confirm(`선택한 ${this.selectedCurrentQuizzes.length}개의 퀴즈를 삭제하시겠습니까?`)) return;\n      const token = localStorage.getItem(\"jwtToken\");\n      try {\n        for (const quiz of this.selectedCurrentQuizzes) {\n          await axios.delete(`${process.env.VUE_APP_BE_API_URL}/api/v1/teacher-quizzes/quiz/${quiz.teacherQuizId}`, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n        }\n\n        // 현재 게임의 퀴즈 목록을 다시 불러옴\n        await this.showQuizListModal(this.currentGame);\n        this.selectedCurrentQuizzes = [];\n        alert('선택한 퀴즈가 성공적으로 삭제되었습니다.');\n      } catch (error) {\n        console.error(\"퀴즈 삭제 실패:\", error);\n        alert(\"퀴즈 삭제에 실패했습니다.\");\n      }\n    },\n    handleQuizListSearch() {\n      // 퀴즈 목록 보기 검색 처리\n    },\n    async nextPage() {\n      if (this.currentPage < this.totalPages) {\n        this.currentPage++;\n        await this.fetchQuizList();\n      }\n    },\n    async prevPage() {\n      if (this.currentPage > 1) {\n        this.currentPage--;\n        await this.fetchQuizList();\n      }\n    },\n    prevQuizListPage() {\n      if (this.quizListCurrentPage > 1) {\n        this.quizListCurrentPage--;\n      }\n    },\n    nextQuizListPage() {\n      if (this.quizListCurrentPage < this.quizListTotalPages) {\n        this.quizListCurrentPage++;\n      }\n    },\n    async fetchAvailableQuizzes(memberId, gameId) {\n      try {\n        const response = await axios.get(`/api/v1/teacher-quizzes/member/${memberId}/game/${gameId}`);\n        this.availableQuizzes = response.data;\n      } catch (error) {\n        console.error(\"퀴즈 목록 조회 실패:\", error);\n      }\n    },\n    async fetchCurrentGameQuizzes() {\n      const token = localStorage.getItem(\"jwtToken\");\n      const beUrl = process.env.VUE_APP_BE_API_URL;\n      try {\n        const response = await axios.get(`${beUrl}/api/v1/teacher-quizzes/game/${this.currentGameId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        this.currentGameQuizzes = response.data;\n      } catch (error) {\n        console.error(\"현재 게임의 퀴즈 목록 조회 실패:\", error);\n      }\n    },\n    showAddGameModal() {\n      this.showGameModal = true;\n      this.newGame = {\n        gameName: '',\n        gamePassword: ''\n      };\n    },\n    closeGameModal() {\n      this.showGameModal = false;\n    },\n    async createGame() {\n      const token = localStorage.getItem(\"jwtToken\");\n      const memberId = localStorage.getItem(\"memberId\");\n      try {\n        const response = await axios.post(`${process.env.VUE_APP_BE_API_URL}/api/v1/games`, {\n          memberId: Number(memberId),\n          gameName: this.newGame.gameName,\n          gamePassword: this.newGame.gamePassword\n        }, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (response.data) {\n          await this.fetchMyGames();\n          this.closeGameModal();\n          alert('게임이 성공적으로 생성되었습니다.');\n        }\n      } catch (error) {\n        console.error(\"게임 생성 실패:\", error);\n        alert(\"게임 생성에 실패했습니다.\");\n      }\n    },\n    handleAddQuizSearch() {\n      this.quizAddCurrentPage = 1;\n    },\n    prevAddQuizPage() {\n      if (this.quizAddCurrentPage > 1) {\n        this.quizAddCurrentPage--;\n      }\n    },\n    nextAddQuizPage() {\n      if (this.quizAddCurrentPage < this.quizAddTotalPages) {\n        this.quizAddCurrentPage++;\n      }\n    }\n  },\n  mounted() {\n    this.fetchMyGames();\n  }\n};","map":{"version":3,"names":["AppHeader","AppFooter","axios","name","components","data","games","quizList","showQuizModal","currentGameId","searchType","searchKeyword","selectedQuizzes","showQuizListModalFlag","currentGameQuizzes","selectedCurrentQuizzes","currentGame","quizListSearchType","quizListSearchKeyword","currentPage","itemsPerPage","totalItems","quizListCurrentPage","quizListItemsPerPage","showGameModal","newGame","gameName","gamePassword","quizAddSearchType","quizAddSearchKeyword","quizAddCurrentPage","quizAddItemsPerPage","quizAddTotalItems","computed","filteredQuizzes","keyword","toLowerCase","filter","quiz","quizTitle","includes","quizCategory","quizLevel","selectAll","get","length","set","value","selectAllCurrentQuizzes","filteredCurrentGameQuizzes","paginatedQuizzes","totalPages","Math","ceil","paginatedCurrentGameQuizzes","start","end","slice","quizListTotalPages","pageDisplay","isValidGame","quizAddTotalPages","filteredAddQuizzes","paginatedAddQuizzes","methods","fetchMyGames","token","localStorage","getItem","memberId","console","error","$router","push","response","process","env","VUE_APP_BE_API_URL","headers","Authorization","alert","fetchQuizList","page","size","beUrl","currentGameResponse","existingQuizIds","map","quizId","params","availableQuizzes","content","startIndex","endIndex","memberNickname","quizAnswer","quizDescription","date","count","totalAvailableQuizzes","showAddQuizModal","game","gameId","fetchCurrentGameQuizzes","handleSearch","selectQuiz","confirm","Number","teacherQuizRequest","isStopped","teacherQuizResponse","post","log","closeQuizModal","removeQuizFromGame","delete","toggleSelectAll","addSelectedQuizzes","toggleQuizSelection","index","findIndex","q","splice","showQuizListModal","quizzesWithDetails","Promise","all","teacherQuiz","quizResponse","teacherQuizId","category","level","quizType","type","answer","desc","nickname","createdAt","Date","toISOString","closeQuizListModal","toggleCurrentQuizSelection","toggleSelectAllCurrentQuizzes","removeSelectedQuizzes","handleQuizListSearch","nextPage","prevPage","prevQuizListPage","nextQuizListPage","fetchAvailableQuizzes","showAddGameModal","closeGameModal","createGame","handleAddQuizSearch","prevAddQuizPage","nextAddQuizPage","mounted"],"sources":["/home/runner/work/FE/FE/src/components/MyPage.vue"],"sourcesContent":["<template>\n  <div class=\"my-page\">\n    <AppHeader />\n    <div class=\"content\">\n      <div class=\"games-section\">\n        <div class=\"games-header\">\n          <h2>내 게임 목록</h2>\n          <button @click=\"showAddGameModal\" class=\"add-game-btn\">\n            새 게임 만들기\n          </button>\n        </div>\n\n        <!-- 게임 목록 -->\n        <div class=\"games-list\">\n          <div v-for=\"game in games\" :key=\"game.gameId\" class=\"game-card\">\n            <div class=\"game-header\">\n              <h3 class=\"game-title\">{{ game.gameName }}</h3>\n            </div>\n            \n            <!-- 게임에 포함된 퀴즈 목록 -->\n            <div class=\"quiz-list\">\n              <div v-for=\"quiz in game.quizzes\" :key=\"quiz.quizId\" class=\"quiz-item\">\n                <div class=\"quiz-info\">\n                  <span class=\"quiz-title\">{{ quiz.quizTitle }}</span>\n                  <div class=\"quiz-badges\">\n                    <span class=\"category-badge\">{{ quiz.quizCategory }}</span>\n                    <span class=\"level-badge\">{{ quiz.quizLevel }}</span>\n                  </div>\n                </div>\n                <button @click=\"removeQuizFromGame(game.gameId, quiz.quizId)\" class=\"remove-btn\">\n                  제\n                </button>\n              </div>\n            </div>\n\n            <!-- 버튼을 아래로 이동 -->\n            <div class=\"game-footer\">\n              <div class=\"game-buttons\">\n                <button @click=\"showQuizListModal(game)\" class=\"view-quiz-btn\">\n                  퀴즈 목록 보기\n                </button>\n                <button @click=\"showAddQuizModal(game)\" class=\"add-quiz-btn\">\n                  퀴즈 추가\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <!-- 퀴즈 추가 모달 -->\n        <div v-if=\"showQuizModal\" class=\"modal\">\n          <div class=\"modal-content\">\n            <h3>퀴즈 추가</h3>\n            <div class=\"search-area\">\n              <div class=\"search-container\">\n                <select v-model=\"quizAddSearchType\" class=\"search-select\">\n                  <option value=\"all\">전체</option>\n                  <option value=\"title\">제목</option>\n                  <option value=\"category\">카테고리</option>\n                  <option value=\"level\">난이도</option>\n                </select>\n                <input \n                  type=\"text\" \n                  v-model=\"quizAddSearchKeyword\" \n                  class=\"search-input\" \n                  placeholder=\"검색어를 입력하세요\"\n                >\n              </div>\n            </div>\n\n            <div class=\"quiz-table\">\n              <table>\n                <thead>\n                  <tr>\n                    <th><input type=\"checkbox\" v-model=\"selectAll\"></th>\n                    <th>제목</th>\n                    <th>카테고리</th>\n                    <th>난이도</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr v-for=\"quiz in filteredAddQuizzes\" :key=\"quiz.quizId\">\n                    <td>\n                      <input \n                        type=\"checkbox\" \n                        :value=\"quiz\" \n                        v-model=\"selectedQuizzes\"\n                      >\n                    </td>\n                    <td>{{ quiz.quizTitle }}</td>\n                    <td>{{ quiz.quizCategory }}</td>\n                    <td>{{ quiz.quizLevel }}</td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n\n            <div class=\"modal-buttons\">\n              <button @click=\"addSelectedQuizzes\" class=\"add-selected-btn\" :disabled=\"!selectedQuizzes.length\">\n                선택한 퀴즈 추가 ({{ selectedQuizzes.length }}개)\n              </button>\n              <div class=\"pagination-buttons\">\n                <button class=\"nav-btn prev\" @click=\"prevPage\" :disabled=\"currentPage === 1\">\n                  이전\n                </button>\n                <span class=\"page-info\">{{ currentPage }} / {{ totalPages }}</span>\n                <button class=\"nav-btn next\" @click=\"nextPage\" :disabled=\"currentPage >= totalPages\">\n                  다음\n                </button>\n              </div>\n              <button @click=\"closeQuizModal\" class=\"cancel-btn\">닫기</button>\n            </div>\n          </div>\n        </div>\n\n        <!-- 퀴즈 목록 모달 수정 -->\n        <div v-if=\"showQuizListModalFlag\" class=\"modal\">\n          <div class=\"modal-content\">\n            <h3>현재 게임의 퀴즈 목록</h3>\n            <div class=\"search-area\">\n              <div class=\"search-container\">\n                <select v-model=\"quizListSearchType\" class=\"search-select\">\n                  <option value=\"all\">전체</option>\n                  <option value=\"title\">제목</option>\n                  <option value=\"category\">카테고리</option>\n                  <option value=\"level\">난이도</option>\n                </select>\n                <input \n                  v-model=\"quizListSearchKeyword\" \n                  type=\"text\" \n                  placeholder=\"퀴즈 검색\"\n                  class=\"search-input\"\n                  @keyup.enter=\"handleQuizListSearch\"\n                >\n                <button @click=\"handleQuizListSearch\" class=\"search-button\">검색</button>\n              </div>\n            </div>\n            <div class=\"quiz-table\">\n              <table>\n                <thead>\n                  <tr>\n                    <th>\n                      <input \n                        type=\"checkbox\" \n                        :checked=\"selectAllCurrentQuizzes\" \n                        @change=\"toggleSelectAllCurrentQuizzes\"\n                      >\n                    </th>\n                    <th>제목</th>\n                    <th>카테고리</th>\n                    <th>난이도</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr v-for=\"quiz in paginatedCurrentGameQuizzes\" \n                      :key=\"quiz.teacherQuizId\" \n                      class=\"quiz-row\"\n                      @click=\"toggleCurrentQuizSelection(quiz)\">\n                    <td @click.stop>\n                      <input \n                        type=\"checkbox\"\n                        v-model=\"selectedCurrentQuizzes\"\n                        :value=\"quiz\"\n                      >\n                    </td>\n                    <td>{{ quiz.quizTitle }}</td>\n                    <td>{{ quiz.quizCategory }}</td>\n                    <td>{{ quiz.quizLevel }}</td>\n                  </tr>\n                </tbody>\n              </table>\n              \n            </div>\n            <div class=\"modal-buttons\">\n              <button \n                @click=\"removeSelectedQuizzes\" \n                class=\"remove-selected-btn\" \n                :disabled=\"!selectedCurrentQuizzes.length\">\n                선택한 퀴즈 삭제 ({{ selectedCurrentQuizzes.length }}개)\n              </button>\n              <div class=\"pagination-buttons\">\n                <button class=\"nav-btn prev\" @click=\"prevQuizListPage\" :disabled=\"quizListCurrentPage === 1\">\n                  이전\n                </button>\n                <span class=\"page-info\">{{ quizListCurrentPage }} / {{ quizListTotalPages }}</span>\n                <button class=\"nav-btn next\" @click=\"nextQuizListPage\" :disabled=\"quizListCurrentPage >= quizListTotalPages\">\n                  다음\n                </button>\n              </div>\n              <button @click=\"closeQuizListModal\" class=\"cancel-btn\">닫기</button>\n            </div>\n          </div>\n        </div>\n\n        <!-- 게임 추가 모달 -->\n        <div v-if=\"showGameModal\" class=\"modal\">\n          <div class=\"modal-content\">\n            <h3>새 게임 만들기</h3>\n            <div class=\"game-form\">\n              <div class=\"form-group\">\n                <label>게임 이름</label>\n                <input \n                  v-model=\"newGame.gameName\" \n                  type=\"text\" \n                  placeholder=\"게임 이름을 입력하세요\"\n                  class=\"form-input\"\n                >\n              </div>\n              <div class=\"form-group\">\n                <label>비밀번호</label>\n                <input \n                  v-model=\"newGame.gamePassword\" \n                  type=\"password\" \n                  placeholder=\"비밀번호를 입력하세요\"\n                  class=\"form-input\"\n                >\n              </div>\n            </div>\n            <div class=\"modal-buttons\">\n              <button @click=\"createGame\" class=\"create-btn\" :disabled=\"!isValidGame\">\n                게임 만들기\n              </button>\n              <button @click=\"closeGameModal\" class=\"cancel-btn\">\n                취소\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <AppFooter />\n  </div>\n</template>\n\n<script>\nimport AppHeader from \"./Header.vue\";\nimport AppFooter from \"./Footer.vue\";\nimport axios from 'axios';\n\nexport default {\n  name: 'MyPage',\n  components: {\n    AppHeader,\n    AppFooter\n  },\n  data() {\n    return {\n      games: [],\n      quizList: [],\n      showQuizModal: false,\n      currentGameId: null,\n      searchType: 'all',\n      searchKeyword: '',\n      selectedQuizzes: [],\n      showQuizListModalFlag: false,\n      currentGameQuizzes: [],\n      selectedCurrentQuizzes: [],\n      currentGame: null,\n      quizListSearchType: 'all',\n      quizListSearchKeyword: '',\n      currentPage: 1,\n      itemsPerPage: 10,\n      totalItems: 0, // 총 퀴즈 수\n      quizListCurrentPage: 1,\n      quizListItemsPerPage: 10,\n      showGameModal: false,\n      newGame: {\n        gameName: '',\n        gamePassword: ''\n      },\n      quizAddSearchType: 'all',\n      quizAddSearchKeyword: '',\n      quizAddCurrentPage: 1,\n      quizAddItemsPerPage: 10,\n      quizAddTotalItems: 0,\n    }\n  },\n  computed: {\n    filteredQuizzes() {\n      if (!this.quizList) return [];\n      if (!this.searchKeyword) return this.quizList;\n      \n      const keyword = this.searchKeyword.toLowerCase();\n      return this.quizList.filter(quiz => {\n        if (!quiz) return false;\n        \n        switch (this.searchType) {\n          case 'title':\n            return quiz.quizTitle?.toLowerCase().includes(keyword);\n          case 'category':\n            return quiz.quizCategory?.toLowerCase().includes(keyword);\n          case 'level':\n            return quiz.quizLevel?.toLowerCase().includes(keyword);\n          case 'all':\n            return (quiz.quizTitle?.toLowerCase().includes(keyword) ||\n                   quiz.quizCategory?.toLowerCase().includes(keyword) ||\n                   quiz.quizLevel?.toLowerCase().includes(keyword));\n          default:\n            return true;\n        }\n      });\n    },\n\n    selectAll: {\n      get() {\n        return this.quizList.length > 0 && this.selectedQuizzes.length === this.quizList.length;\n      },\n      set(value) {\n        this.selectedQuizzes = value ? [...this.quizList] : [];\n      }\n    },\n\n    selectAllCurrentQuizzes: {\n      get() {\n        return this.currentGameQuizzes.length === this.selectedCurrentQuizzes.length;\n      },\n      set(value) {\n        this.selectedCurrentQuizzes = value ? [...this.currentGameQuizzes] : [];\n      }\n    },\n\n    filteredCurrentGameQuizzes() {\n      if (!this.currentGameQuizzes) return [];\n      if (!this.quizListSearchKeyword) return this.currentGameQuizzes;\n      \n      const keyword = this.quizListSearchKeyword.toLowerCase();\n      return this.currentGameQuizzes.filter(quiz => {\n        if (!quiz) return false;\n        \n        switch (this.quizListSearchType) {\n          case 'title':\n            return quiz.quizTitle?.toLowerCase().includes(keyword);\n          case 'category':\n            return quiz.quizCategory?.toLowerCase().includes(keyword);\n          case 'level':\n            return quiz.quizLevel?.toLowerCase().includes(keyword);\n          case 'all':\n            return (quiz.quizTitle?.toLowerCase().includes(keyword) ||\n                   quiz.quizCategory?.toLowerCase().includes(keyword) ||\n                   quiz.quizLevel?.toLowerCase().includes(keyword));\n          default:\n            return true;\n        }\n      });\n    },\n\n    paginatedQuizzes() {\n      return this.quizList;\n    },\n\n    totalPages() {\n      return Math.ceil(this.totalItems / this.itemsPerPage);\n    },\n\n    paginatedCurrentGameQuizzes() {\n      if (!this.filteredCurrentGameQuizzes) return [];\n      \n      const start = (this.quizListCurrentPage - 1) * this.quizListItemsPerPage;\n      const end = start + this.quizListItemsPerPage;\n      return this.filteredCurrentGameQuizzes.slice(start, end);\n    },\n\n    quizListTotalPages() {\n      return Math.ceil(this.filteredCurrentGameQuizzes.length / this.quizListItemsPerPage);\n    },\n\n    pageDisplay() {\n      return `${this.currentPage}/${this.totalPages}`;\n    },\n\n    isValidGame() {\n      return this.newGame.gameName && this.newGame.gamePassword;\n    },\n\n    quizAddTotalPages() {\n      return Math.ceil(this.quizAddTotalItems / this.quizAddItemsPerPage);\n    },\n\n    filteredAddQuizzes() {\n      if (!this.quizList) return [];\n      if (!this.quizAddSearchKeyword) return this.quizList;\n      \n      const keyword = this.quizAddSearchKeyword.toLowerCase();\n      return this.quizList.filter(quiz => {\n        if (!quiz) return false;\n        \n        switch (this.quizAddSearchType) {\n          case 'title':\n            return quiz.quizTitle?.toLowerCase().includes(keyword);\n          case 'category':\n            return quiz.quizCategory?.toLowerCase().includes(keyword);\n          case 'level':\n            return quiz.quizLevel?.toLowerCase().includes(keyword);\n          case 'all':\n            return (quiz.quizTitle?.toLowerCase().includes(keyword) ||\n                   quiz.quizCategory?.toLowerCase().includes(keyword) ||\n                   quiz.quizLevel?.toLowerCase().includes(keyword));\n          default:\n            return true;\n        }\n      });\n    },\n\n    paginatedAddQuizzes() {\n      const start = (this.quizAddCurrentPage - 1) * this.quizAddItemsPerPage;\n      const end = start + this.quizAddItemsPerPage;\n      return this.filteredAddQuizzes.slice(start, end);\n    }\n  },\n  methods: {\n    // 내 게임 목록 조회\n    async fetchMyGames() {\n      const token = localStorage.getItem(\"jwtToken\");\n      const memberId = localStorage.getItem(\"memberId\");\n      \n      if (!token || !memberId) {\n        console.error(\"로그인이 필요합니다.\");\n        this.$router.push(\"/login\");\n        return;\n      }\n\n      try {\n        // /api/v1/games/member/{memberId} 엔드포인트로 변경\n        const response = await axios.get(\n          `${process.env.VUE_APP_BE_API_URL}/api/v1/games/member/${memberId}`, \n          {\n            headers: { Authorization: `Bearer ${token}` }\n          }\n        );\n\n        this.games = response.data;\n      } catch (error) {\n        console.error(\"게임 목록 조회 실패:\", error);\n        alert(\"게임 목록을 오는데 실패했습니다.\");\n      }\n    },\n\n    // 전체 퀴즈 목록 조회\n    async fetchQuizList(page = this.currentPage - 1, size = this.itemsPerPage) {\n      const token = localStorage.getItem(\"jwtToken\");\n      const beUrl = process.env.VUE_APP_BE_API_URL;\n      \n      try {\n        // 현재 게임의 퀴즈 목록 가져오기\n        const currentGameResponse = await axios.get(\n          `${beUrl}/api/v1/teacher-quizzes/game/${this.currentGameId}`,\n          { headers: { Authorization: `Bearer ${token}` }}\n        );\n        \n        const existingQuizIds = currentGameResponse.data.map(quiz => quiz.quizId);\n\n        // 전체 퀴즈 목록을 한 번에 가져오기\n        const response = await axios.get(`${beUrl}/api/v1/quizs/all`, {\n          headers: { Authorization: `Bearer ${token}` },\n          params: { \n            page: 0,\n            size: 9999\n          }\n        });\n\n        // 이미 추가된 퀴즈를 제외한 전체 퀴즈\n        const availableQuizzes = response.data.content.filter(\n          quiz => !existingQuizIds.includes(quiz.quizId)\n        );\n\n        // 현재 페이지의 시작과 끝 인덱스 계산\n        const startIndex = page * size;\n        const endIndex = startIndex + size;\n\n        // 현재 페이지에 표시할 퀴즈\n        this.quizList = availableQuizzes.slice(startIndex, endIndex).map(quiz => ({\n          quizId: quiz.quizId,\n          memberNickname: quiz.memberNickname || '알 수 없음',\n          quizCategory: quiz.quizCategory,\n          quizTitle: quiz.quizTitle,\n          quizLevel: quiz.quizLevel,\n          quizAnswer: quiz.quizAnswer,\n          quizDescription: quiz.quizDescription,\n          date: quiz.date,\n          count: quiz.count || 0\n        }));\n\n        // 전체 사용 가능한 퀴즈 수\n        const totalAvailableQuizzes = availableQuizzes.length;\n        \n        // 페이지네이션 정보 업데이트 (전체 페이지 수는 처음 계산된 값을 유지)\n        if (!this.totalPages) {\n          this.totalPages = Math.ceil(totalAvailableQuizzes / this.itemsPerPage);\n        }\n        this.totalItems = totalAvailableQuizzes;\n\n      } catch (error) {\n        console.error(\"퀴즈 목록 조회 실패:\", error);\n        alert(\"퀴즈 목록을 불러오는 데 실패했습니다.\");\n      }\n    },\n\n    // 퀴즈  모달 표시\n    async showAddQuizModal(game) {\n      this.currentGameId = game.gameId;\n      this.currentGame = game;\n      this.currentPage = 1;\n      this.selectedQuizzes = [];\n      this.totalPages = null; // 모달이 열릴 때 totalPages 초기화\n      await this.fetchCurrentGameQuizzes();\n      await this.fetchQuizList(0);\n      this.showQuizModal = true;\n    },\n\n    async handleSearch() {\n      this.currentPage = 1;\n      await this.fetchQuizList();\n    },\n\n    // 퀴즈 선택 및 게임에 추가\n    async selectQuiz(quiz) {\n      if (!confirm(`\"${quiz.quizTitle}\" 퀴즈를 게임에 추가하시겠습니까?`)) return;\n\n      const token = localStorage.getItem(\"jwtToken\");\n      const memberId = Number(localStorage.getItem(\"memberId\"));\n\n      try {\n        const teacherQuizRequest = {\n          quizId: quiz.quizId,\n          gameId: this.currentGameId,\n          isStopped: 0\n        };\n\n        const teacherQuizResponse = await axios.post(\n          `${process.env.VUE_APP_BE_API_URL}/api/v1/teacher-quizzes/member/${memberId}`,\n          teacherQuizRequest,\n          { headers: { Authorization: `Bearer ${token}` }}\n        );\n\n        if (teacherQuizResponse.data) {\n          console.log('퀴즈 성으로 저장되었습니다:', teacherQuizResponse.data);\n          await this.fetchMyGames();\n          this.closeQuizModal();\n        }\n      } catch (error) {\n        console.error(\"퀴즈 추가 실패:\", error);\n        alert(\"퀴즈 추가에 실패습니다.\");\n      }\n    },\n\n    // 게임에서 퀴즈 제거\n    async removeQuizFromGame(gameId, quizId) {\n      if (!confirm('이 퀴즈를 게임에서 제거하시겠습니까?')) return;\n\n      const token = localStorage.getItem(\"jwtToken\");\n      try {\n        await axios.delete(\n          `${process.env.VUE_APP_BE_API_URL}/api/v1/games/${gameId}/quizzes/${quizId}`,\n          { headers: { Authorization: `Bearer ${token}` }}\n        );\n        \n        await this.fetchMyGames();\n        alert(\"퀴즈가 제거되었습니다.\");\n      } catch (error) {\n        console.error(\"퀴즈 제거 실패:\", error);\n        alert(\"퀴즈 제거 실패했습니다.\");\n      }\n    },\n\n    toggleSelectAll() {\n      this.selectAll = !this.selectAll;\n    },\n\n    async addSelectedQuizzes() {\n      if (!this.selectedQuizzes.length) {\n        alert('선택 퀴즈가 없습니다.');\n        return;\n      }\n\n      if (!confirm(`선택한 ${this.selectedQuizzes.length}개의 퀴즈를 추가하시겠습니까?`)) return;\n\n      const token = localStorage.getItem(\"jwtToken\");\n      const memberId = Number(localStorage.getItem(\"memberId\"));\n\n      try {\n        for (const quiz of this.selectedQuizzes) {\n          const teacherQuizRequest = {\n            quizId: quiz.quizId,\n            gameId: this.currentGameId,\n            isStopped: 0\n          };\n\n          await axios.post(\n            `${process.env.VUE_APP_BE_API_URL}/api/v1/teacher-quizzes/member/${memberId}`,\n            teacherQuizRequest,\n            { headers: { Authorization: `Bearer ${token}` }}\n          );\n        }\n\n        await this.fetchMyGames();\n        this.closeQuizModal();\n        alert('선택한 퀴즈가 성공적로 추가되었습니다.');\n      } catch (error) {\n        console.error(\"퀴즈 추가 실패:\", error);\n        alert(\"퀴즈 추가에 실패했습니다.\");\n      }\n    },\n\n    closeQuizModal() {\n      this.showQuizModal = false;\n      this.searchKeyword = '';\n      this.selectedQuizzes = []; // 모달 닫 때 선택 기화\n    },\n\n    toggleQuizSelection(quiz) {\n      const index = this.selectedQuizzes.findIndex(q => q.quizId === quiz.quizId);\n      if (index === -1) {\n        this.selectedQuizzes.push(quiz);\n      } else {\n        this.selectedQuizzes.splice(index, 1);\n      }\n    },\n\n    async showQuizListModal(game) {\n      const token = localStorage.getItem(\"jwtToken\");\n      const beUrl = process.env.VUE_APP_BE_API_URL;\n      \n      try {\n        // TeacherQuiz 목록을 가져옴 (이미 memberNickname이 함되어 있음)\n        const teacherQuizResponse = await axios.get(\n          `${beUrl}/api/v1/teacher-quizzes/game/${game.gameId}`,\n          { headers: { Authorization: `Bearer ${token}` }}\n        );\n        \n        console.log('TeacherQuiz 응답:', teacherQuizResponse.data);\n\n        const quizzesWithDetails = await Promise.all(\n          teacherQuizResponse.data.map(async (teacherQuiz) => {\n            try {\n              // 1. quizId로 퀴즈 정보 조회\n              const quizResponse = await axios.get(\n                `${beUrl}/api/v1/quizs/${teacherQuiz.quizId}`,\n                { headers: { Authorization: `Bearer ${token}` }}\n              );\n              \n              const quiz = quizResponse.data;\n              console.log('퀴즈 정보:', quiz);\n\n              return {\n                teacherQuizId: teacherQuiz.teacherQuizId,\n                quizId: teacherQuiz.quizId,\n                gameId: teacherQuiz.gameId,\n                isStopped: teacherQuiz.isStopped,\n                quizTitle: quiz.quiz,\n                quizCategory: quiz.category,\n                quizLevel: quiz.level,\n                quizType: quiz.type,\n                quizAnswer: quiz.answer,\n                quizDescription: quiz.desc,\n                nickname: teacherQuiz.memberNickname,  // 백엔드에서 받은 memberNickname 사용\n                createdAt: quiz.createdAt || new Date().toISOString()\n              };\n            } catch (error) {\n              console.error(`퀴즈 정보 조회 실패 (ID: ${teacherQuiz.quizId}):`, error);\n              return null;\n            }\n          })\n        );\n\n        this.currentGameQuizzes = quizzesWithDetails.filter(quiz => quiz !== null);\n        this.currentGame = game;\n        this.showQuizListModalFlag = true;\n      } catch (error) {\n        console.error(\"퀴즈 목록 조회 실패:\", error);\n        alert(\"퀴즈 목록을 불러오는데 실패했습니다.\");\n      }\n    },\n\n    closeQuizListModal() {\n      this.showQuizListModalFlag = false;\n      this.selectedCurrentQuizzes = [];\n      this.currentGame = null;\n      this.quizListSearchType = 'all';\n      this.quizListSearchKeyword = '';\n    },\n\n    toggleCurrentQuizSelection(quiz) {\n      const index = this.selectedCurrentQuizzes.findIndex(q => q.quizId === quiz.quizId);\n      if (index === -1) {\n        this.selectedCurrentQuizzes.push(quiz);\n      } else {\n        this.selectedCurrentQuizzes.splice(index, 1);\n      }\n    },\n\n    toggleSelectAllCurrentQuizzes() {\n      this.selectAllCurrentQuizzes = !this.selectAllCurrentQuizzes;\n    },\n\n    async removeSelectedQuizzes() {\n      if (!this.selectedCurrentQuizzes.length) {\n        alert('선된 퀴즈가 없습니다.');\n        return;\n      }\n\n      if (!confirm(`선택한 ${this.selectedCurrentQuizzes.length}개의 퀴즈를 삭제하시겠습니까?`)) return;\n\n      const token = localStorage.getItem(\"jwtToken\");\n\n      try {\n        for (const quiz of this.selectedCurrentQuizzes) {\n          await axios.delete(\n            `${process.env.VUE_APP_BE_API_URL}/api/v1/teacher-quizzes/quiz/${quiz.teacherQuizId}`,\n            { headers: { Authorization: `Bearer ${token}` }}\n          );\n        }\n\n        // 현재 게임의 퀴즈 목록을 다시 불러옴\n        await this.showQuizListModal(this.currentGame);\n        this.selectedCurrentQuizzes = [];\n        alert('선택한 퀴즈가 성공적으로 삭제되었습니다.');\n      } catch (error) {\n        console.error(\"퀴즈 삭제 실패:\", error);\n        alert(\"퀴즈 삭제에 실패했습니다.\");\n      }\n    },\n\n    handleQuizListSearch() {\n      // 퀴즈 목록 보기 검색 처리\n    },\n\n    async nextPage() {\n      if (this.currentPage < this.totalPages) {\n        this.currentPage++;\n        await this.fetchQuizList();\n      }\n    },\n\n    async prevPage() {\n      if (this.currentPage > 1) {\n        this.currentPage--;\n        await this.fetchQuizList();\n      }\n    },\n\n    prevQuizListPage() {\n      if (this.quizListCurrentPage > 1) {\n        this.quizListCurrentPage--;\n      }\n    },\n\n    nextQuizListPage() {\n      if (this.quizListCurrentPage < this.quizListTotalPages) {\n        this.quizListCurrentPage++;\n      }\n    },\n\n    async fetchAvailableQuizzes(memberId, gameId) {\n      try {\n        const response = await axios.get(`/api/v1/teacher-quizzes/member/${memberId}/game/${gameId}`);\n        this.availableQuizzes = response.data;\n      } catch (error) {\n        console.error(\"퀴즈 목록 조회 실패:\", error);\n      }\n    },\n\n    async fetchCurrentGameQuizzes() {\n      const token = localStorage.getItem(\"jwtToken\");\n      const beUrl = process.env.VUE_APP_BE_API_URL;\n\n      try {\n        const response = await axios.get(`${beUrl}/api/v1/teacher-quizzes/game/${this.currentGameId}`, {\n          headers: { Authorization: `Bearer ${token}` }\n        });\n\n        this.currentGameQuizzes = response.data;\n      } catch (error) {\n        console.error(\"현재 게임의 퀴즈 목록 조회 실패:\", error);\n      }\n    },\n\n    showAddGameModal() {\n      this.showGameModal = true;\n      this.newGame = {\n        gameName: '',\n        gamePassword: ''\n      };\n    },\n\n    closeGameModal() {\n      this.showGameModal = false;\n    },\n\n    async createGame() {\n      const token = localStorage.getItem(\"jwtToken\");\n      const memberId = localStorage.getItem(\"memberId\");\n\n      try {\n        const response = await axios.post(\n          `${process.env.VUE_APP_BE_API_URL}/api/v1/games`,\n          {\n            memberId: Number(memberId),\n            gameName: this.newGame.gameName,\n            gamePassword: this.newGame.gamePassword\n          },\n          {\n            headers: { Authorization: `Bearer ${token}` }\n          }\n        );\n\n        if (response.data) {\n          await this.fetchMyGames();\n          this.closeGameModal();\n          alert('게임이 성공적으로 생성되었습니다.');\n        }\n      } catch (error) {\n        console.error(\"게임 생성 실패:\", error);\n        alert(\"게임 생성에 실패했습니다.\");\n      }\n    },\n\n    handleAddQuizSearch() {\n      this.quizAddCurrentPage = 1;\n    },\n\n    prevAddQuizPage() {\n      if (this.quizAddCurrentPage > 1) {\n        this.quizAddCurrentPage--;\n      }\n    },\n\n    nextAddQuizPage() {\n      if (this.quizAddCurrentPage < this.quizAddTotalPages) {\n        this.quizAddCurrentPage++;\n      }\n    }\n  },\n  mounted() {\n    this.fetchMyGames();\n  }\n}\n</script>\n\n<style scoped>\n.my-page {\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n  background-color: #fff;\n  overflow: hidden; /* 전체 페이지 스크롤 방지 */\n}\n\n.content {\n  flex: 1;\n  padding: 20px;\n  max-width: 1200px;\n  margin: 0 auto;\n  width: 100%;\n  padding-top: 80px;\n  padding-bottom: 40px;\n  overflow-y: auto; /* 로 스크롤 활성화 */\n  height: calc(100vh - 120px); /* 헤더와 푸터를 제외한 높이 */\n}\n\n.games-section {\n  background-color: white;\n  border-radius: 8px;\n  padding: 20px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  overflow-y: auto; /* 세로 스크롤 활성화 */\n  max-height: calc(100vh - 160px); /* 헤더와 푸터를 제외한 높이 */\n}\n\n/* 스크롤바 숨기기 */\n.games-section::-webkit-scrollbar {\n  display: none; /* 웹킷 기반 브라우저에서 스크롤바 숨기기 */\n}\n\n.games-section {\n  -ms-overflow-style: none;  /* IE 및 Edge에서 스크롤바 숨기기 */\n  scrollbar-width: none;  /* Firefox에서 스크롤바 숨기기 */\n}\n\n.games-list {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  gap: 30px;\n  margin-top: 20px;\n  padding: 10px;\n}\n\n.game-card {\n  border: 1px solid #ddd;\n  border-radius: 8px;\n  padding: 20px;\n  background: white;\n  display: flex;\n  flex-direction: column;\n  min-height: 200px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.game-header {\n  margin-bottom: 15px;\n  text-align: left;  /* 제목 왼쪽 정렬 */\n}\n\n.game-title {\n  font-size: 1.5rem;\n  margin: 0;\n  color: #333;\n}\n\n.quiz-list {\n  flex: 1;  /* 남은 공간 채우기 */\n  overflow-y: auto;  /* 내용이 많으면 스크롤 */\n  margin-bottom: 15px;  /* 버튼과의 간격 */\n}\n\n.game-footer {\n  margin-top: auto;  /* 하단에 고정 */\n  padding-top: 15px;\n  border-top: 1px solid #eee;\n}\n\n.game-buttons {\n  display: flex;\n  gap: 10px;\n  justify-content: center;  /* 버튼 중앙 정렬 */\n}\n\n.view-quiz-btn, .add-quiz-btn {\n  min-width: 120px;\n  height: 36px;\n  padding: 0 16px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 14px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  white-space: nowrap;\n}\n\n.view-quiz-btn {\n  background-color: #000000d6;\n  color: white;\n}\n\n.add-quiz-btn {\n  background-color: rgba(0, 0, 0, 0.865);\n  color: white;\n}\n\n/* 호버 효과 */\n.view-quiz-btn:hover, .add-quiz-btn:hover {\n  opacity: 0.9;\n}\n\n.remove-btn {\n  background-color: #f44336;\n  color: white;\n  border: none;\n  padding: 4px 8px;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.modal {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.modal-content {\n  background: white;\n  padding: 30px;\n  border-radius: 8px;\n  width: 90%;\n  max-width: 800px;\n  max-height: 80vh;\n  overflow-y: auto;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n}\n\n.search-area {\n  margin: 20px 0;\n}\n\n.search-container {\n  display: flex;\n  gap: 10px;\n  align-items: center;\n}\n\n.search-select {\n  padding: 8px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  min-width: 120px;\n}\n\n.search-input {\n  flex: 1;\n  padding: 8px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n}\n\n.search-button {\n  padding: 8px 16px;\n  background-color: rgba(0, 0, 0, 0.865);\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.quiz-table {\n  flex: 1;\n  overflow-y: auto;\n  border: 1px solid #eee;\n  border-radius: 4px;\n}\n\n.quiz-table table {\n  width: 100%;\n  border-collapse: collapse;\n}\n\n.quiz-table th,\n.quiz-table td {\n  padding: 12px;\n  text-align: left;\n  border-bottom: 1px solid #eee;\n}\n\n.quiz-table th {\n  background-color: #f8f9fa;\n  position: sticky;\n  top: 0;\n  z-index: 1;\n}\n\n/* 각 열의 너비 조정 */\n.quiz-table td:nth-child(1) { width: 5%; }  /* 체크박스 */\n.quiz-table td:nth-child(2) { width: 40%; } /* 제목 */\n.quiz-table td:nth-child(3) { width: 20%; } /* 카테고리 */\n.quiz-table td:nth-child(4) { width: 15%; } /* 난이도 */\n.quiz-table td:nth-child(5) { width: 20%; } /* 작성자 */\n\n.modal-buttons {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  gap: 10px;\n  padding-top: 20px;\n  margin-top: auto;\n}\n\n.pagination-buttons {\n  display: flex;\n  align-items: center;\n  gap: 15px;\n}\n\n.nav-btn {\n  min-width: 80px;\n  height: 36px;\n  padding: 0 16px;\n  border: 1px solid #e0e0e0;\n  background-color: white;\n  border-radius: 4px;\n  cursor: pointer;\n  font-weight: 500;\n  color: #333;\n  transition: all 0.2s;\n}\n\n.nav-btn:hover:not(:disabled) {\n  background-color: #f8f9fa;\n  border-color: #dee2e6;\n}\n\n.nav-btn:disabled {\n  background-color: #f5f5f5;\n  color: #aaa;\n  cursor: not-allowed;\n}\n\n.page-info {\n  min-width: 80px;\n  text-align: center;\n  font-weight: 500;\n  color: #666;\n}\n\n\n.add-selected-btn, .remove-selected-btn, .cancel-btn {\n  padding: 10px 20px;\n  border-radius: 4px;\n  border: none;\n  cursor: pointer;\n  font-weight: 500;\n}\n\n.add-selected-btn {\n  background-color: rgba(0, 0, 0, 0.865);\n  color: white;\n}\n\n.remove-selected-btn {\n  background-color: red;\n  color: white;\n}\n\n.add-selected-btn:disabled {\n  background-color: #cccccc;\n  cursor: not-allowed;\n}\n.remove-selected-btn:disabled {\n  background-color: #cccccc;\n  cursor: not-allowed;\n}\n\n.game-buttons button {\n  transition: opacity 0.2s;\n}\n\n.game-buttons button:hover {\n  opacity: 0.9;\n}\n\n/* 스크롤바 스타일링 */\n.content::-webkit-scrollbar {\n  width: 8px;\n}\n\n.content::-webkit-scrollbar-track {\n  background: #f1f1f1;\n  border-radius: 4px;\n}\n\n.content::-webkit-scrollbar-thumb {\n  background: #888;\n  border-radius: 4px;\n}\n\n.content::-webkit-scrollbar-thumb:hover {\n  background: #555;\n}\n\n/* 반응형 처리 */\n@media (max-height: 900px) {\n  .games-section {\n    height: auto;\n    margin-bottom: 20px;\n  }\n}\n\n/* 스크롤바 스타일링 */\n.games-section::-webkit-scrollbar {\n  width: 8px;\n}\n\n.games-section::-webkit-scrollbar-track {\n  background: #f1f1f1;\n  border-radius: 4px;\n}\n\n.games-section::-webkit-scrollbar-thumb {\n  background: #888;\n  border-radius: 4px;\n}\n\n.games-section::-webkit-scrollbar-thumb:hover {\n  background: #555;\n}\n\n.pagination {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  justify-content: center;\n  margin: 20px 0;\n}\n\n.pagination span {\n  min-width: 60px;\n  text-align: center;\n  font-size: 14px;\n}\n\n.pagination button {\n  padding: 5px 10px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  background-color: white;\n  cursor: pointer;\n}\n\n.pagination button:disabled {\n  background-color: #f5f5f5;\n  cursor: not-allowed;\n}\n\n.games-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n}\n\n.add-game-btn {\n  background-color: #000000;\n  color: white;\n  padding: 10px 20px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 14px;\n}\n\n.game-form {\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  margin: 20px 0;\n}\n\n.form-group {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n}\n\n.form-group label {\n  font-weight: 500;\n  color: #333;\n}\n\n.form-input {\n  padding: 8px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  font-size: 14px;\n}\n\n.create-btn {\n  background-color: #000000;\n  color: white;\n  padding: 10px 20px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.create-btn:disabled {\n  background-color: #cccccc;\n  cursor: not-allowed;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}