{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, withModifiers as _withModifiers, normalizeClass as _normalizeClass, vModelText as _vModelText, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nimport _imports_0 from '@/assets/Icon.png';\nconst _hoisted_1 = {\n  class: \"quiz-detail-page\"\n};\nconst _hoisted_2 = {\n  class: \"content\"\n};\nconst _hoisted_3 = {\n  class: \"quiz-detail\"\n};\nconst _hoisted_4 = {\n  class: \"quiz-info\"\n};\nconst _hoisted_5 = {\n  class: \"quiz-header\"\n};\nconst _hoisted_6 = {\n  class: \"quiz-meta\"\n};\nconst _hoisted_7 = {\n  class: \"category-badge\"\n};\nconst _hoisted_8 = {\n  class: \"level-badge\"\n};\nconst _hoisted_9 = {\n  class: \"author\"\n};\nconst _hoisted_10 = {\n  class: \"date\"\n};\nconst _hoisted_11 = {\n  class: \"title-wrapper\"\n};\nconst _hoisted_12 = {\n  class: \"quiz-content\"\n};\nconst _hoisted_13 = {\n  class: \"quiz-description\"\n};\nconst _hoisted_14 = {\n  class: \"quiz-answer\"\n};\nconst _hoisted_15 = {\n  class: \"comments-section\"\n};\nconst _hoisted_16 = {\n  class: \"comment-form\"\n};\nconst _hoisted_17 = {\n  class: \"comment-form-footer\"\n};\nconst _hoisted_18 = {\n  class: \"char-count\"\n};\nconst _hoisted_19 = {\n  class: \"comments-list\"\n};\nconst _hoisted_20 = {\n  class: \"comment-header\"\n};\nconst _hoisted_21 = {\n  class: \"comment-left\"\n};\nconst _hoisted_22 = {\n  class: \"comment-author\"\n};\nconst _hoisted_23 = {\n  class: \"comment-date\"\n};\nconst _hoisted_24 = {\n  key: 0,\n  class: \"comment-actions\"\n};\nconst _hoisted_25 = [\"onClick\"];\nconst _hoisted_26 = [\"onClick\"];\nconst _hoisted_27 = {\n  key: 0,\n  class: \"edit-form\"\n};\nconst _hoisted_28 = [\"onUpdate:modelValue\"];\nconst _hoisted_29 = {\n  class: \"edit-form-footer\"\n};\nconst _hoisted_30 = {\n  class: \"char-count\"\n};\nconst _hoisted_31 = {\n  class: \"edit-buttons\"\n};\nconst _hoisted_32 = [\"onClick\"];\nconst _hoisted_33 = [\"onClick\"];\nconst _hoisted_34 = {\n  key: 1,\n  class: \"comment-content\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_AppHeader = _resolveComponent(\"AppHeader\");\n  const _component_AppFooter = _resolveComponent(\"AppFooter\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_AppHeader), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"span\", _hoisted_7, _toDisplayString($data.quiz.quizCategory), 1), _createElementVNode(\"span\", _hoisted_8, _toDisplayString($data.quiz.quizLevel), 1), _createElementVNode(\"span\", _hoisted_9, \"작성자: \" + _toDisplayString($data.quiz.memberNickname), 1), _createElementVNode(\"span\", _hoisted_10, \"작성일: \" + _toDisplayString($options.formatDate($data.quiz.date)), 1), _createElementVNode(\"img\", {\n    src: _imports_0,\n    class: _normalizeClass([\"bookmark-icon\", {\n      'bookmarked': $options.isBookmarked($data.quiz.quizId)\n    }]),\n    onClick: _cache[0] || (_cache[0] = _withModifiers($event => $options.toggleBookmark($data.quiz.quizId), [\"stop\"])),\n    alt: \"bookmark\"\n  }, null, 2)]), _createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"h2\", null, _toDisplayString($data.quiz.quizTitle), 1)])]), _createElementVNode(\"div\", _hoisted_12, [_createElementVNode(\"div\", _hoisted_13, [_cache[3] || (_cache[3] = _createElementVNode(\"h3\", null, \"문제 내용\", -1)), _createElementVNode(\"p\", null, _toDisplayString($data.quiz.quizDescription), 1)]), _createElementVNode(\"div\", _hoisted_14, [_cache[4] || (_cache[4] = _createElementVNode(\"h3\", null, \"정답\", -1)), _createElementVNode(\"p\", null, _toDisplayString($data.quiz.quizAnswer), 1)])])]), _createElementVNode(\"div\", _hoisted_15, [_cache[5] || (_cache[5] = _createElementVNode(\"h3\", null, \"댓글\", -1)), _createElementVNode(\"div\", _hoisted_16, [_withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.newComment = $event),\n    placeholder: \"댓글을 작성해주세요\",\n    rows: \"3\",\n    maxlength: \"500\"\n  }, null, 512), [[_vModelText, $data.newComment]]), _createElementVNode(\"div\", _hoisted_17, [_createElementVNode(\"span\", _hoisted_18, _toDisplayString($data.newComment.length) + \"/500자\", 1), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.submitComment && $options.submitComment(...args)),\n    class: \"comment-submit\"\n  }, \"댓글 작성\")])]), _createElementVNode(\"div\", _hoisted_19, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.comments, comment => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: comment.quizCommentId,\n      class: \"comment\"\n    }, [_createElementVNode(\"div\", _hoisted_20, [_createElementVNode(\"div\", _hoisted_21, [_createElementVNode(\"span\", _hoisted_22, _toDisplayString(comment.memberNickname), 1), _createElementVNode(\"span\", _hoisted_23, _toDisplayString($options.formatDate(comment.quizCommentCreatedAt)), 1)]), comment.memberNickname === $data.memberNickname ? (_openBlock(), _createElementBlock(\"div\", _hoisted_24, [!comment.isEditing ? (_openBlock(), _createElementBlock(\"button\", {\n      key: 0,\n      onClick: $event => $options.startEditing(comment),\n      class: \"edit-btn\"\n    }, \" 수정 \", 8, _hoisted_25)) : _createCommentVNode(\"\", true), _createElementVNode(\"button\", {\n      onClick: $event => $options.deleteComment(comment.quizCommentId),\n      class: \"delete-btn\"\n    }, \" 삭제 \", 8, _hoisted_26)])) : _createCommentVNode(\"\", true)]), comment.isEditing ? (_openBlock(), _createElementBlock(\"div\", _hoisted_27, [_withDirectives(_createElementVNode(\"textarea\", {\n      \"onUpdate:modelValue\": $event => comment.editContent = $event,\n      rows: \"3\",\n      maxlength: \"500\"\n    }, null, 8, _hoisted_28), [[_vModelText, comment.editContent]]), _createElementVNode(\"div\", _hoisted_29, [_createElementVNode(\"span\", _hoisted_30, _toDisplayString(comment.editContent.length) + \"/500자\", 1), _createElementVNode(\"div\", _hoisted_31, [_createElementVNode(\"button\", {\n      onClick: $event => $options.saveEdit(comment),\n      class: \"save-btn\"\n    }, \"저장\", 8, _hoisted_32), _createElementVNode(\"button\", {\n      onClick: $event => $options.cancelEdit(comment),\n      class: \"cancel-btn\"\n    }, \"취소\", 8, _hoisted_33)])])])) : (_openBlock(), _createElementBlock(\"p\", _hoisted_34, _toDisplayString(comment.quizCommentContent), 1))]);\n  }), 128))])])])]), _createVNode(_component_AppFooter)]);\n}","map":{"version":3,"names":["_imports_0","class","key","_createElementBlock","_hoisted_1","_createVNode","_component_AppHeader","_createElementVNode","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_toDisplayString","$data","quiz","quizCategory","_hoisted_8","quizLevel","_hoisted_9","memberNickname","_hoisted_10","$options","formatDate","date","src","_normalizeClass","isBookmarked","quizId","onClick","_cache","_withModifiers","$event","toggleBookmark","alt","_hoisted_11","quizTitle","_hoisted_12","_hoisted_13","quizDescription","_hoisted_14","quizAnswer","_hoisted_15","_hoisted_16","newComment","placeholder","rows","maxlength","_hoisted_17","_hoisted_18","length","args","submitComment","_hoisted_19","_Fragment","_renderList","comments","comment","quizCommentId","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","quizCommentCreatedAt","_hoisted_24","isEditing","startEditing","_hoisted_25","_createCommentVNode","deleteComment","_hoisted_26","_hoisted_27","editContent","_hoisted_28","_hoisted_29","_hoisted_30","_hoisted_31","saveEdit","_hoisted_32","cancelEdit","_hoisted_33","_hoisted_34","quizCommentContent","_component_AppFooter"],"sources":["/home/runner/work/FE/FE/src/components/QuizDetailPage.vue"],"sourcesContent":["<template>\n  <div class=\"quiz-detail-page\">\n    <AppHeader />\n    <div class=\"content\">\n      <div class=\"quiz-detail\">\n        <!-- 퀴즈 정보 섹션 -->\n        <div class=\"quiz-info\">\n          <div class=\"quiz-header\">\n            <!-- 메타 정보를 먼저 배치 -->\n            <div class=\"quiz-meta\">\n              <span class=\"category-badge\">{{ quiz.quizCategory }}</span>\n              <span class=\"level-badge\">{{ quiz.quizLevel }}</span>\n              <span class=\"author\">작성자: {{ quiz.memberNickname }}</span>\n              <span class=\"date\">작성일: {{ formatDate(quiz.date) }}</span>\n              <img \n                src=\"@/assets/Icon.png\" \n                class=\"bookmark-icon\" \n                :class=\"{ 'bookmarked': isBookmarked(quiz.quizId) }\"\n                @click.stop=\"toggleBookmark(quiz.quizId)\"\n                alt=\"bookmark\"\n              />\n            </div>\n            <!-- 제목을 메타 정보 아래에 배치 -->\n            <div class=\"title-wrapper\">\n              <h2>{{ quiz.quizTitle }}</h2>\n            </div>\n          </div>\n          \n          <!-- 퀴즈 내용 -->\n          <div class=\"quiz-content\">\n            <div class=\"quiz-description\">\n              <h3>문제 내용</h3>\n              <p>{{ quiz.quizDescription }}</p>\n            </div>\n            <div class=\"quiz-answer\">\n              <h3>정답</h3>\n              <p>{{ quiz.quizAnswer }}</p>\n            </div>\n          </div>\n        </div>\n\n        <!-- 댓글 섹션 -->\n        <div class=\"comments-section\">\n          <h3>댓글</h3>\n          <div class=\"comment-form\">\n            <textarea \n              v-model=\"newComment\" \n              placeholder=\"댓글을 작성해주세요\"\n              rows=\"3\"\n              maxlength=\"500\"\n            ></textarea>\n            <div class=\"comment-form-footer\">\n              <span class=\"char-count\">{{ newComment.length }}/500자</span>\n              <button @click=\"submitComment\" class=\"comment-submit\">댓글 작성</button>\n            </div>\n          </div>\n          \n          <div class=\"comments-list\">\n            <div v-for=\"comment in comments\" :key=\"comment.quizCommentId\" class=\"comment\">\n              <div class=\"comment-header\">\n                <div class=\"comment-left\">\n                  <span class=\"comment-author\">{{ comment.memberNickname }}</span>\n                  <span class=\"comment-date\">{{ formatDate(comment.quizCommentCreatedAt) }}</span>\n                </div>\n                <div class=\"comment-actions\" v-if=\"comment.memberNickname === memberNickname\">\n                  <button \n                    v-if=\"!comment.isEditing\" \n                    @click=\"startEditing(comment)\" \n                    class=\"edit-btn\"\n                  >\n                    수정\n                  </button>\n                  <button \n                    @click=\"deleteComment(comment.quizCommentId)\" \n                    class=\"delete-btn\"\n                  >\n                    삭제\n                  </button>\n                </div>\n              </div>\n              <div v-if=\"comment.isEditing\" class=\"edit-form\">\n                <textarea \n                  v-model=\"comment.editContent\" \n                  rows=\"3\"\n                  maxlength=\"500\"\n                ></textarea>\n                <div class=\"edit-form-footer\">\n                  <span class=\"char-count\">{{ comment.editContent.length }}/500자</span>\n                  <div class=\"edit-buttons\">\n                    <button @click=\"saveEdit(comment)\" class=\"save-btn\">저장</button>\n                    <button @click=\"cancelEdit(comment)\" class=\"cancel-btn\">취소</button>\n                  </div>\n                </div>\n              </div>\n              <p v-else class=\"comment-content\">{{ comment.quizCommentContent }}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <AppFooter />\n  </div>\n</template>\n\n<script>\nimport AppHeader from \"./Header.vue\";\nimport AppFooter from \"./Footer.vue\";\nimport axios from \"axios\";\n\nexport default {\n  name: \"QuizDetailPage\",\n  components: {\n    AppHeader,\n    AppFooter,\n  },\n  data() {\n    return {\n      quiz: {\n        quizId: null,\n        memberId: null,\n        quizTitle: \"\",\n        quizCategory: \"\",\n        quizLevel: \"\",\n        quizAnswer: \"\",\n        quizDescription: \"\",\n        memberNickname: \"\",\n        date: null,\n        count: 0\n      },\n      comments: [],\n      newComment: \"\",\n      selectedAnswer: null,\n      showResult: false,\n      currentUserId: null,\n      memberNickname: localStorage.getItem(\"memberNickname\") || \"\",\n      memberId: localStorage.getItem(\"memberId\") || \"\",\n      bookmarks: [],\n    };\n  },\n  methods: {\n    async fetchQuizDetail() {\n      const token = localStorage.getItem(\"jwtToken\");\n      if (!token) {\n        console.error(\"로그인이 필요합니다.\");\n        this.$router.push(\"/login\");\n        return;\n      }\n\n      try {\n        const beUrl = process.env.VUE_APP_BE_API_URL;\n        const quizId = this.$route.params.id;\n        \n        const response = await axios.get(`${beUrl}/api/v1/quizs/quiz/${quizId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        });\n\n        console.log('백엔드 응답 데이터:', response.data);\n\n        this.quiz = {\n          quizId: response.data.quizId,\n          quizTitle: response.data.quizTitle,\n          quizCategory: response.data.quizCategory,\n          quizLevel: response.data.quizLevel,\n          quizAnswer: response.data.quizAnswer,\n          quizDescription: response.data.quizDescription,\n          memberNickname: response.data.memberNickname,\n          date: response.data.date,\n          count: response.data.count || 0\n        };\n\n        console.log('매핑된 퀴즈 데이터:', {\n          제목: this.quiz.quizTitle,\n          카테고리: this.quiz.quizCategory,\n          난이도: this.quiz.quizLevel,\n          작성자: this.quiz.memberNickname,\n          작성일: this.quiz.date,\n          원본데이터: response.data\n        });\n\n      } catch (error) {\n        console.error(\"퀴즈 상세 정보 조회 실패:\", error);\n        console.error('에러 응답:', error.response?.data);\n        alert(\"퀴즈 정보를 불러오는 데 실패했습니다.\");\n      }\n    },\n    async fetchComments() {\n      const token = localStorage.getItem(\"jwtToken\");\n      if (!token) return;\n\n      try {\n        const beUrl = process.env.VUE_APP_BE_API_URL;\n        const quizId = this.$route.params.id;\n        \n        const response = await axios.get(`${beUrl}/api/v1/comments/quiz/${quizId}`, {\n          headers: { Authorization: `Bearer ${token}` }\n        });\n        \n        this.comments = response.data.map(comment => ({\n          ...comment,\n          isEditing: false,\n          editContent: comment.quizCommentContent\n        }));\n        \n      } catch (error) {\n        console.error(\"댓글 조회 실패:\", error);\n      }\n    },\n    isCurrentUserComment(commentMemberId) {\n      return commentMemberId === this.memberId;\n    },\n    async submitComment() {\n      if (!this.newComment.trim()) {\n        alert(\"댓글 내용을 입력해주세요.\");\n        return;\n      }\n\n      const token = localStorage.getItem(\"jwtToken\");\n      if (!token) {\n        alert(\"로그인이 필요합니다.\");\n        this.$router.push(\"/login\");\n        return;\n      }\n\n      try {\n        const beUrl = process.env.VUE_APP_BE_API_URL;\n        const quizId = this.$route.params.id;\n        \n        await axios.post(\n          `${beUrl}/api/v1/comments/quiz/${quizId}`,\n          {\n            memberId: this.memberId,\n            quizCommentContent: this.newComment\n          },\n          { headers: { Authorization: `Bearer ${token}` }}\n        );\n\n        this.newComment = \"\";\n        await this.fetchComments();\n      } catch (error) {\n        console.error(\"댓글 작성 실패:\", error);\n        alert(\"댓글 작성에 실패했습니다.\");\n      }\n    },\n    async deleteComment(commentId) {\n      if (!confirm(\"댓글을 삭제하시겠습니까?\")) return;\n\n      const token = localStorage.getItem(\"jwtToken\");\n      if (!token) return;\n\n      try {\n        const beUrl = process.env.VUE_APP_BE_API_URL;\n        \n        await axios.delete(`${beUrl}/api/v1/comments/${commentId}`, {\n          headers: { Authorization: `Bearer ${token}` }\n        });\n\n        await this.fetchComments();\n      } catch (error) {\n        console.error(\"댓글 삭제 실패:\", error);\n        alert(\"댓글 삭제에 실패했습니다.\");\n      }\n    },\n    selectAnswer(answer) {\n      this.selectedAnswer = answer;\n    },\n    submitAnswer() {\n      this.showResult = true;\n    },\n    formatDate(date) {\n      if (!date) return '';\n      \n      try {\n        // Array 형식인 경우 (댓글 날짜)\n        if (Array.isArray(date)) {\n          const year = date[0];\n          const month = String(date[1]).padStart(2, '0');\n          const day = String(date[2]).padStart(2, '0');\n          const hours = String(date[3]).padStart(2, '0');\n          const minutes = String(date[4]).padStart(2, '0');\n          \n          return `${year}-${month}-${day} ${hours}:${minutes}`;\n        } \n        // ISO 문자열 형식인 경우 (퀴즈 성 날짜)\n        else {\n          const dateObj = new Date(date);\n          const year = dateObj.getFullYear();\n          const month = String(dateObj.getMonth() + 1).padStart(2, '0');\n          const day = String(dateObj.getDate()).padStart(2, '0');\n          const hours = String(dateObj.getHours()).padStart(2, '0');\n          const minutes = String(dateObj.getMinutes()).padStart(2, '0');\n          \n          return `${year}-${month}-${day} ${hours}:${minutes}`;\n        }\n      } catch (error) {\n        console.error('날짜 변환 에러:', error, date);\n        return '';\n      }\n    },\n    startEditing(comment) {\n      comment.isEditing = true;\n      comment.editContent = comment.quizCommentContent;\n    },\n    async saveEdit(comment) {\n      if (!comment.editContent.trim()) {\n        alert(\"댓글 내용을 입력해주세요.\");\n        return;\n      }\n\n      const token = localStorage.getItem(\"jwtToken\");\n      if (!token) return;\n\n      try {\n        const beUrl = process.env.VUE_APP_BE_API_URL;\n        \n        await axios.put(\n          `${beUrl}/api/v1/comments/${comment.quizCommentId}`,\n          {\n            memberId: this.memberId,\n            quizCommentContent: comment.editContent\n          },\n          { headers: { Authorization: `Bearer ${token}` }}\n        );\n\n        comment.isEditing = false;\n        await this.fetchComments();\n      } catch (error) {\n        console.error(\"댓글 수정 실패:\", error);\n        alert(\"댓글 수정에 실패했습니다.\");\n      }\n    },\n    cancelEdit(comment) {\n      comment.isEditing = false;\n      comment.editContent = comment.quizCommentContent;\n    },\n    isBookmarked(quizId) {\n      return this.bookmarks.some(bookmark => bookmark.quizId === quizId) || \n             localStorage.getItem(`bookmark_${quizId}`) === 'true';\n    },\n    async toggleBookmark(quizId) {\n      const token = localStorage.getItem(\"jwtToken\");\n      const memberId = localStorage.getItem(\"memberId\");\n      \n      if (!token || !memberId) {\n        alert(\"로그인이 필요한 서비스입니다.\");\n        return;\n      }\n\n      try {\n        const beUrl = process.env.VUE_APP_BE_API_URL;\n        const bookmark = this.bookmarks.find(b => b.quizId === quizId);\n        \n        if (bookmark) {\n          // ���마크 삭제\n          await axios.delete(`${beUrl}/api/v1/bookmarks/${bookmark.bookmarkId}`, {\n            headers: { Authorization: `Bearer ${token}` }\n          });\n          this.bookmarks = this.bookmarks.filter(b => b.bookmarkId !== bookmark.bookmarkId);\n          // localStorage에서 북마크 상태 제거\n          localStorage.removeItem(`bookmark_${quizId}`);\n        } else {\n          // 북마크 추가\n          const response = await axios.post(\n            `${beUrl}/api/v1/bookmarks`,\n            {\n              memberId: Number(memberId),\n              quizId: Number(quizId)\n            },\n            { headers: { Authorization: `Bearer ${token}` }}\n          );\n          \n          if (response.data) {\n            this.bookmarks.push(response.data);\n            // localStorage에 북마크 상태 저장\n            localStorage.setItem(`bookmark_${quizId}`, 'true');\n          }\n        }\n      } catch (error) {\n        console.error(\"북마크 처리 실패:\", error);\n        alert(\"북마크 처리에 실패했습니다.\");\n      }\n    },\n    async fetchBookmarks() {\n      const token = localStorage.getItem(\"jwtToken\");\n      const memberId = localStorage.getItem(\"memberId\");\n      \n      if (!token || !memberId) return;\n\n      try {\n        const beUrl = process.env.VUE_APP_BE_API_URL;\n        const response = await axios.get(`${beUrl}/api/v1/bookmarks/member/${memberId}`, {\n          headers: { Authorization: `Bearer ${token}` }\n        });\n        this.bookmarks = response.data;\n        \n        // localStorage 초기화 및 업데이트\n        // 먼저 기존의 모든 북마크 관련 localStorage 항목을 제거\n        for (let i = 0; i < localStorage.length; i++) {\n          const key = localStorage.key(i);\n          if (key && key.startsWith('bookmark_')) {\n            localStorage.removeItem(key);\n          }\n        }\n        \n        // 현재 북마크 상태로 다시 설정\n        this.bookmarks.forEach(bookmark => {\n          localStorage.setItem(`bookmark_${bookmark.quizId}`, 'true');\n        });\n      } catch (error) {\n        console.error(\"북마크 목록 조회 실패:\", error);\n      }\n    },\n  },\n  async mounted() {\n    const memberId = localStorage.getItem(\"memberId\");\n    this.currentUserId = memberId ? parseInt(memberId) : null;\n    \n    await this.fetchQuizDetail();\n    await this.fetchComments();\n    await this.fetchBookmarks();\n  }\n};\n</script>\n\n<style scoped>\n.quiz-detail-page {\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  overflow-y: scroll;\n  max-height: 100vh;\n  scrollbar-width: none;\n  -ms-overflow-style: none;\n}\n\n.content {\n  flex: 1;\n  padding: 20px;\n  max-width: 1200px;\n  margin: 0 auto;\n  width: 100%;\n  padding-top: 80px;\n  padding-bottom: 40px;\n  overflow-y: scroll;\n  scrollbar-width: none;\n  -ms-overflow-style: none;\n}\n\n.content::-webkit-scrollbar {\n  display: none;\n}\n\n.quiz-detail {\n  background-color: white;\n  border-radius: 8px;\n  padding: 20px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  margin-bottom: 20px;\n}\n\n.quiz-header {\n  text-align: left;\n  margin-bottom: 20px;\n}\n\n.quiz-header h2 {\n  font-size: 24px;\n  margin: 0 0 15px 0;\n  padding: 0;\n  color: #333;\n}\n\n.quiz-meta {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 8px;\n  align-items: center;\n  color: #666;\n  font-size: 14px;\n  margin-bottom: 20px;\n}\n\n.quiz-info {\n  background-color: white;\n  border-radius: 8px;\n  padding: 20px;\n  margin-bottom: 20px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.quiz-content {\n  margin-top: 30px;\n}\n\n.quiz-description h3,\n.quiz-answer h3 {\n  font-size: 18px;\n  color: #333;\n  margin-bottom: 10px;\n  text-align: left;\n}\n\n.quiz-description p,\n.quiz-answer p {\n  line-height: 1.6;\n  color: #444;\n  text-align: left;\n}\n\n.category-badge,\n.level-badge {\n  display: inline-block;\n  padding: 2px 8px;\n  border-radius: 12px;\n  font-size: 12px;\n  background-color: #e9ecef;\n  color: #495057;\n}\n\n.answer-section {\n  display: flex;\n  justify-content: center;\n  gap: 20px;\n  margin: 20px 0;\n}\n\n.answer-button {\n  width: 100px;\n  height: 100px;\n  border: 2px solid #ddd;\n  border-radius: 50%;\n  background-color: white;\n  font-size: 24px;\n  cursor: pointer;\n  transition: all 0.2s;\n}\n\n.answer-button:hover {\n  border-color: rgba(0, 0, 0, 0.865);\n}\n\n.answer-button.selected {\n  background-color: rgba(0, 0, 0, 0.865);\n  color: white;\n  border-color: rgba(0, 0, 0, 0.865);\n}\n\n.answer-button.correct {\n  background-color: #28a745;\n  color: white;\n  border-color: #28a745;\n}\n\n.answer-button.wrong {\n  background-color: #dc3545;\n  color: white;\n  border-color: #dc3545;\n}\n\n.submit-button {\n  display: block;\n  margin: 20px auto;\n  padding: 10px 20px;\n  background-color: rgba(0, 0, 0, 0.865);\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.quiz-explanation {\n  margin-top: 30px;\n  padding: 20px;\n  background-color: #f8f9fa;\n  border-radius: 4px;\n}\n\n.comments-section {\n  margin-top: 40px;\n  max-height: calc(100vh - 200px);\n  overflow-y: scroll;\n  scrollbar-width: none;\n  -ms-overflow-style: none;\n}\n\n.comments-section::-webkit-scrollbar {\n  display: none;\n}\n\n.comment-form {\n  margin-bottom: 20px;\n}\n\n.comment-form textarea {\n  width: 98%;\n  padding: 10px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  resize: vertical;\n  margin-bottom: 10px;\n}\n\n.comment-submit {\n  padding: 8px 16px;\n  background-color: rgba(0, 0, 0, 0.865);\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.comment {\n  padding: 15px;\n  border-bottom: 1px solid #ddd;\n}\n\n.comment-header {\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 8px;\n  font-size: 14px;\n}\n\n.comment-left {\n  display: flex;\n  align-items: center;\n  gap: 16px;\n}\n\n.comment-author {\n  font-weight: bold;\n  color: #333;\n}\n\n.comment-date {\n  color: #666;\n  font-size: 0.9em;\n}\n\n.view-count {\n  color: #666;\n  font-size: 0.9em;\n}\n\n.quiz-meta > span {\n  display: inline-flex;\n  align-items: center;\n}\n\n.quiz-meta > span:not(:last-child)::after {\n  content: \"•\";\n  margin: 0 8px;\n  color: #ddd;\n}\n\n.comment-form-footer {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: 8px;\n}\n\n.char-count {\n  font-size: 12px;\n  color: #666;\n}\n\n.delete-btn {\n  background: none;\n  border: none;\n  color: #dc3545;\n  cursor: pointer;\n  font-size: 12px;\n  margin-left: 10px;\n}\n\n.delete-btn:hover {\n  text-decoration: underline;\n}\n\n.comment-actions {\n  display: flex;\n  align-items: center;\n}\n\n.edit-btn {\n  background: none;\n  border: none;\n  color: #666;\n  cursor: pointer;\n  font-size: 12px;\n  margin-right: 10px;\n}\n\n.edit-btn:hover {\n  text-decoration: underline;\n}\n\n.edit-form {\n  margin-top: 10px;\n}\n\n.edit-form textarea {\n  width: 100%;\n  padding: 8px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  resize: vertical;\n}\n\n.edit-form-footer {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: 8px;\n}\n\n.edit-buttons {\n  display: flex;\n  gap: 8px;\n}\n\n.save-btn,\n.cancel-btn {\n  padding: 4px 12px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 12px;\n}\n\n.save-btn {\n  background-color: rgba(0, 0, 0, 0.865);\n  color: white;\n}\n\n.cancel-btn {\n  background-color: #e9ecef;\n  color: #666;\n}\n\n.save-btn:hover {\n  background-color: #000;\n}\n\n.cancel-btn:hover {\n  background-color: #dee2e6;\n}\n\n.bookmark-icon {\n  width: 20px;\n  height: 20px;\n  cursor: pointer;\n}\n\n.bookmark-icon:hover {\n  opacity: 0.5;\n}\n\n.bookmark-icon.bookmarked {\n  opacity: 1;\n  filter: invert(28%) sepia(67%) saturate(669%) hue-rotate(346deg) brightness(89%) contrast(83%);\n}\n\n@media (max-width: 768px) {\n  .content {\n    padding: 10px;\n  }\n  \n  .quiz-meta {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 8px;\n  }\n  \n  .answer-section {\n    flex-direction: column;\n    align-items: center;\n  }\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}