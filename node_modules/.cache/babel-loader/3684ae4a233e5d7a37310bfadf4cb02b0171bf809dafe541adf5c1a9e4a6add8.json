{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.find.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport \"core-js/modules/esnext.iterator.some.js\";\nimport AppHeader from \"./Header.vue\";\nimport AppFooter from \"./Footer.vue\";\nimport axios from 'axios';\nexport default {\n  name: 'MyPage',\n  components: {\n    AppHeader,\n    AppFooter\n  },\n  data() {\n    return {\n      games: [],\n      quizList: [],\n      showQuizModal: false,\n      currentGameId: null,\n      searchType: 'all',\n      searchKeyword: '',\n      selectedQuizzes: [],\n      showQuizListModalFlag: false,\n      currentGameQuizzes: [],\n      selectedCurrentQuizzes: [],\n      currentGame: null,\n      quizListSearchType: 'all',\n      quizListSearchKeyword: '',\n      currentPage: 1,\n      itemsPerPage: 10,\n      totalItems: 0,\n      // 총 퀴즈 수\n      quizListCurrentPage: 1,\n      quizListItemsPerPage: 10,\n      showGameModal: false,\n      newGame: {\n        gameName: '',\n        gamePassword: ''\n      },\n      quizAddSearchType: 'all',\n      quizAddSearchKeyword: '',\n      quizAddCurrentPage: 1,\n      quizAddItemsPerPage: 10,\n      quizAddTotalItems: 0,\n      bookmarks: [],\n      selectedQuiz: null,\n      comments: [],\n      memberNickname: localStorage.getItem(\"memberNickname\") || \"\",\n      showCommentsModal: false\n    };\n  },\n  computed: {\n    filteredQuizzes() {\n      if (!this.quizList) return [];\n      if (!this.searchKeyword) return this.quizList;\n      const keyword = this.searchKeyword.toLowerCase();\n      return this.quizList.filter(quiz => {\n        if (!quiz) return false;\n        switch (this.searchType) {\n          case 'title':\n            return quiz.quizTitle?.toLowerCase().includes(keyword);\n          case 'category':\n            return quiz.quizCategory?.toLowerCase().includes(keyword);\n          case 'level':\n            return quiz.quizLevel?.toLowerCase().includes(keyword);\n          case 'all':\n            return quiz.quizTitle?.toLowerCase().includes(keyword) || quiz.quizCategory?.toLowerCase().includes(keyword) || quiz.quizLevel?.toLowerCase().includes(keyword);\n          default:\n            return true;\n        }\n      });\n    },\n    selectAll: {\n      get() {\n        return this.quizList.length > 0 && this.selectedQuizzes.length === this.quizList.length;\n      },\n      set(value) {\n        this.selectedQuizzes = value ? [...this.quizList] : [];\n      }\n    },\n    selectAllCurrentQuizzes: {\n      get() {\n        return this.currentGameQuizzes.length === this.selectedCurrentQuizzes.length;\n      },\n      set(value) {\n        this.selectedCurrentQuizzes = value ? [...this.currentGameQuizzes] : [];\n      }\n    },\n    filteredCurrentGameQuizzes() {\n      if (!this.currentGameQuizzes) return [];\n      if (!this.quizListSearchKeyword) return this.currentGameQuizzes;\n      const keyword = this.quizListSearchKeyword.toLowerCase();\n      return this.currentGameQuizzes.filter(quiz => {\n        if (!quiz) return false;\n        switch (this.quizListSearchType) {\n          case 'title':\n            return quiz.quizTitle?.toLowerCase().includes(keyword);\n          case 'category':\n            return quiz.quizCategory?.toLowerCase().includes(keyword);\n          case 'level':\n            return quiz.quizLevel?.toLowerCase().includes(keyword);\n          case 'all':\n            return quiz.quizTitle?.toLowerCase().includes(keyword) || quiz.quizCategory?.toLowerCase().includes(keyword) || quiz.quizLevel?.toLowerCase().includes(keyword);\n          default:\n            return true;\n        }\n      });\n    },\n    paginatedQuizzes() {\n      return this.quizList;\n    },\n    totalPages() {\n      return Math.ceil(this.totalItems / this.itemsPerPage);\n    },\n    paginatedCurrentGameQuizzes() {\n      if (!this.filteredCurrentGameQuizzes) return [];\n      const start = (this.quizListCurrentPage - 1) * this.quizListItemsPerPage;\n      const end = start + this.quizListItemsPerPage;\n      return this.filteredCurrentGameQuizzes.slice(start, end);\n    },\n    quizListTotalPages() {\n      return Math.ceil(this.filteredCurrentGameQuizzes.length / this.quizListItemsPerPage);\n    },\n    pageDisplay() {\n      return `${this.currentPage}/${this.totalPages}`;\n    },\n    isValidGame() {\n      return this.newGame.gameName && this.newGame.gamePassword;\n    },\n    quizAddTotalPages() {\n      return Math.ceil(this.quizAddTotalItems / this.quizAddItemsPerPage);\n    },\n    filteredAddQuizzes() {\n      if (!this.quizList) return [];\n      if (!this.quizAddSearchKeyword) return this.quizList;\n      const keyword = this.quizAddSearchKeyword.toLowerCase();\n      return this.quizList.filter(quiz => {\n        if (!quiz) return false;\n        switch (this.quizAddSearchType) {\n          case 'title':\n            return quiz.quizTitle?.toLowerCase().includes(keyword);\n          case 'category':\n            return quiz.quizCategory?.toLowerCase().includes(keyword);\n          case 'level':\n            return quiz.quizLevel?.toLowerCase().includes(keyword);\n          case 'all':\n            return quiz.quizTitle?.toLowerCase().includes(keyword) || quiz.quizCategory?.toLowerCase().includes(keyword) || quiz.quizLevel?.toLowerCase().includes(keyword);\n          default:\n            return true;\n        }\n      });\n    },\n    paginatedAddQuizzes() {\n      const start = (this.quizAddCurrentPage - 1) * this.quizAddItemsPerPage;\n      const end = start + this.quizAddItemsPerPage;\n      return this.filteredAddQuizzes.slice(start, end);\n    }\n  },\n  methods: {\n    // 내 게임 목록 조회\n    async fetchMyGames() {\n      const token = localStorage.getItem(\"jwtToken\");\n      const memberId = localStorage.getItem(\"memberId\");\n      if (!token || !memberId) {\n        console.error(\"로그인이 필요합니다.\");\n        this.$router.push(\"/login\");\n        return;\n      }\n      try {\n        // /api/v1/games/member/{memberId} 엔드포인트로 변경\n        const response = await axios.get(`${process.env.VUE_APP_BE_API_URL}/api/v1/games/member/${memberId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        this.games = response.data;\n      } catch (error) {\n        console.error(\"게임 록 조회 실패:\", error);\n        alert(\"게임 목록을 오는데 실패했습니다.\");\n      }\n    },\n    // 전체 퀴즈 목록 조회\n    async fetchQuizList(page = this.currentPage - 1, size = this.itemsPerPage) {\n      const token = localStorage.getItem(\"jwtToken\");\n      const beUrl = process.env.VUE_APP_BE_API_URL;\n      try {\n        // 현재 게임의 퀴즈 목록 가져오기\n        const currentGameResponse = await axios.get(`${beUrl}/api/v1/teacher-quizzes/game/${this.currentGameId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const existingQuizIds = currentGameResponse.data.map(quiz => quiz.quizId);\n\n        // 전체 퀴즈 목록을 한 번에 가져오기\n        const response = await axios.get(`${beUrl}/api/v1/quizs/all`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          params: {\n            page: 0,\n            size: 9999\n          }\n        });\n\n        // 이미 추가된 퀴즈를 제외한 전체 퀴즈\n        const availableQuizzes = response.data.content.filter(quiz => !existingQuizIds.includes(quiz.quizId));\n\n        // 현재 페이지의 시작과 끝 인덱스 계산\n        const startIndex = page * size;\n        const endIndex = startIndex + size;\n\n        // 현재 페이지에 표시할 퀴즈\n        this.quizList = availableQuizzes.slice(startIndex, endIndex).map(quiz => ({\n          quizId: quiz.quizId,\n          memberNickname: quiz.memberNickname || '알 수 없음',\n          quizCategory: quiz.quizCategory,\n          quizTitle: quiz.quizTitle,\n          quizLevel: quiz.quizLevel,\n          quizAnswer: quiz.quizAnswer,\n          quizDescription: quiz.quizDescription,\n          date: quiz.date,\n          count: quiz.count || 0\n        }));\n\n        // 전체 사용 가능한 퀴즈 수\n        const totalAvailableQuizzes = availableQuizzes.length;\n\n        // 페이지네이션 정보 업데이트 (전체 페이지 수는 처음 계산된 값을 유지)\n        if (!this.totalPages) {\n          this.totalPages = Math.ceil(totalAvailableQuizzes / this.itemsPerPage);\n        }\n        this.totalItems = totalAvailableQuizzes;\n      } catch (error) {\n        console.error(\"퀴즈 목록 조회 실패:\", error);\n        alert(\"퀴즈 목록을 불러오는 데 실패했습니다.\");\n      }\n    },\n    // 퀴즈  모달 표시\n    async showAddQuizModal(game) {\n      this.currentGameId = game.gameId;\n      this.currentGame = game;\n      this.currentPage = 1;\n      this.selectedQuizzes = [];\n      this.totalPages = null; // 모달이 열릴 때 totalPages 초기화\n      await this.fetchCurrentGameQuizzes();\n      await this.fetchQuizList(0);\n      this.showQuizModal = true;\n    },\n    async handleSearch() {\n      this.currentPage = 1;\n      await this.fetchQuizList();\n    },\n    // 퀴즈 선택 및 게임에 추가\n    async selectQuiz(quiz) {\n      if (!confirm(`\"${quiz.quizTitle}\" 퀴즈를 게임에 추가하시겠습니까?`)) return;\n      const token = localStorage.getItem(\"jwtToken\");\n      const memberId = Number(localStorage.getItem(\"memberId\"));\n      try {\n        const teacherQuizRequest = {\n          quizId: quiz.quizId,\n          gameId: this.currentGameId,\n          isStopped: 0\n        };\n        const teacherQuizResponse = await axios.post(`${process.env.VUE_APP_BE_API_URL}/api/v1/teacher-quizzes/member/${memberId}`, teacherQuizRequest, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (teacherQuizResponse.data) {\n          console.log('퀴즈 성으로 저장되었습니다:', teacherQuizResponse.data);\n          await this.fetchMyGames();\n          this.closeQuizModal();\n        }\n      } catch (error) {\n        console.error(\"퀴즈 추가 실패:\", error);\n        alert(\"퀴즈 추가에 실패습니다.\");\n      }\n    },\n    // 게임에서 퀴즈 제거\n    async removeQuizFromGame(gameId, quizId) {\n      if (!confirm('이 퀴즈를 게임에서 제거하시습니까?')) return;\n      const token = localStorage.getItem(\"jwtToken\");\n      try {\n        await axios.delete(`${process.env.VUE_APP_BE_API_URL}/api/v1/games/${gameId}/quizzes/${quizId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        await this.fetchMyGames();\n        alert(\"퀴즈가 제거되었습니다.\");\n      } catch (error) {\n        console.error(\"퀴즈 제거 실패:\", error);\n        alert(\"퀴즈 제거 실패했습니다.\");\n      }\n    },\n    toggleSelectAll() {\n      this.selectAll = !this.selectAll;\n    },\n    async addSelectedQuizzes() {\n      if (!this.selectedQuizzes.length) {\n        alert('선택 퀴즈가 없습니다.');\n        return;\n      }\n      if (!confirm(`선택한 ${this.selectedQuizzes.length}개의 퀴즈를 추가하시겠습니까?`)) return;\n      const token = localStorage.getItem(\"jwtToken\");\n      const memberId = Number(localStorage.getItem(\"memberId\"));\n      try {\n        for (const quiz of this.selectedQuizzes) {\n          const teacherQuizRequest = {\n            quizId: quiz.quizId,\n            gameId: this.currentGameId,\n            isStopped: 0\n          };\n          await axios.post(`${process.env.VUE_APP_BE_API_URL}/api/v1/teacher-quizzes/member/${memberId}`, teacherQuizRequest, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n        }\n        await this.fetchMyGames();\n        this.closeQuizModal();\n        alert('선택한 퀴즈가 성공적로 추가되었습니다.');\n      } catch (error) {\n        console.error(\"퀴즈 추가 실패:\", error);\n        alert(\"퀴즈 추가에 실패했습니다.\");\n      }\n    },\n    closeQuizModal() {\n      this.showQuizModal = false;\n      this.showCommentsModal = false;\n      this.selectedQuiz = null;\n      this.comments = [];\n      this.selectedQuizzes = [];\n      this.searchKeyword = '';\n    },\n    toggleQuizSelection(quiz) {\n      const index = this.selectedQuizzes.findIndex(q => q.quizId === quiz.quizId);\n      if (index === -1) {\n        this.selectedQuizzes.push(quiz);\n      } else {\n        this.selectedQuizzes.splice(index, 1);\n      }\n    },\n    async showQuizListModal(game) {\n      const token = localStorage.getItem(\"jwtToken\");\n      const beUrl = process.env.VUE_APP_BE_API_URL;\n      try {\n        // TeacherQuiz 목록을 가져옴 (이미 memberNickname이 함되어 있음)\n        const teacherQuizResponse = await axios.get(`${beUrl}/api/v1/teacher-quizzes/game/${game.gameId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        console.log('TeacherQuiz 응답:', teacherQuizResponse.data);\n        const quizzesWithDetails = await Promise.all(teacherQuizResponse.data.map(async teacherQuiz => {\n          try {\n            // 1. quizId로 퀴즈 정보 조회\n            const quizResponse = await axios.get(`${beUrl}/api/v1/quizs/${teacherQuiz.quizId}`, {\n              headers: {\n                Authorization: `Bearer ${token}`\n              }\n            });\n            const quiz = quizResponse.data;\n            console.log('퀴즈 정보:', quiz);\n            return {\n              teacherQuizId: teacherQuiz.teacherQuizId,\n              quizId: teacherQuiz.quizId,\n              gameId: teacherQuiz.gameId,\n              isStopped: teacherQuiz.isStopped,\n              quizTitle: quiz.quiz,\n              quizCategory: quiz.category,\n              quizLevel: quiz.level,\n              quizType: quiz.type,\n              quizAnswer: quiz.answer,\n              quizDescription: quiz.desc,\n              nickname: teacherQuiz.memberNickname,\n              // 백엔드에서 받은 memberNickname 사용\n              createdAt: quiz.createdAt || new Date().toISOString()\n            };\n          } catch (error) {\n            console.error(`퀴즈 정보 조회 실패 (ID: ${teacherQuiz.quizId}):`, error);\n            return null;\n          }\n        }));\n        this.currentGameQuizzes = quizzesWithDetails.filter(quiz => quiz !== null);\n        this.currentGame = game;\n        this.showQuizListModalFlag = true;\n      } catch (error) {\n        console.error(\"퀴즈 목록 조회 실패:\", error);\n        alert(\"퀴즈 목록을 불러오는데 실패했습니다.\");\n      }\n    },\n    closeQuizListModal() {\n      this.showQuizListModalFlag = false;\n      this.showCommentsModal = false;\n      this.selectedQuiz = null;\n      this.comments = [];\n      this.selectedCurrentQuizzes = [];\n      this.currentGame = null;\n      this.quizListSearchType = 'all';\n      this.quizListSearchKeyword = '';\n    },\n    toggleCurrentQuizSelection(quiz) {\n      const index = this.selectedCurrentQuizzes.findIndex(q => q.quizId === quiz.quizId);\n      if (index === -1) {\n        this.selectedCurrentQuizzes.push(quiz);\n      } else {\n        this.selectedCurrentQuizzes.splice(index, 1);\n      }\n    },\n    toggleSelectAllCurrentQuizzes() {\n      this.selectAllCurrentQuizzes = !this.selectAllCurrentQuizzes;\n    },\n    async removeSelectedQuizzes() {\n      if (!this.selectedCurrentQuizzes.length) {\n        alert('선된 퀴즈가 없습니다.');\n        return;\n      }\n      if (!confirm(`선택한 ${this.selectedCurrentQuizzes.length}개의 퀴즈를 삭제하시겠습니까?`)) return;\n      const token = localStorage.getItem(\"jwtToken\");\n      try {\n        for (const quiz of this.selectedCurrentQuizzes) {\n          await axios.delete(`${process.env.VUE_APP_BE_API_URL}/api/v1/teacher-quizzes/quiz/${quiz.teacherQuizId}`, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n        }\n\n        // 현재 게임의 퀴 목록을 다시 불러옴\n        await this.showQuizListModal(this.currentGame);\n        this.selectedCurrentQuizzes = [];\n        alert('선택한 퀴즈가 성공적으로 삭제되었습니다.');\n      } catch (error) {\n        console.error(\"퀴즈 삭제 실패:\", error);\n        alert(\"퀴즈 삭제에 실패했습니다.\");\n      }\n    },\n    handleQuizListSearch() {\n      // 퀴즈 목록 보기 검색 처리\n    },\n    async nextPage() {\n      if (this.currentPage < this.totalPages) {\n        this.currentPage++;\n        await this.fetchQuizList();\n      }\n    },\n    async prevPage() {\n      if (this.currentPage > 1) {\n        this.currentPage--;\n        await this.fetchQuizList();\n      }\n    },\n    prevQuizListPage() {\n      if (this.quizListCurrentPage > 1) {\n        this.quizListCurrentPage--;\n      }\n    },\n    nextQuizListPage() {\n      if (this.quizListCurrentPage < this.quizListTotalPages) {\n        this.quizListCurrentPage++;\n      }\n    },\n    async fetchAvailableQuizzes(memberId, gameId) {\n      try {\n        const response = await axios.get(`/api/v1/teacher-quizzes/member/${memberId}/game/${gameId}`);\n        this.availableQuizzes = response.data;\n      } catch (error) {\n        console.error(\"퀴즈 목록 조회 실패:\", error);\n      }\n    },\n    async fetchCurrentGameQuizzes() {\n      const token = localStorage.getItem(\"jwtToken\");\n      const beUrl = process.env.VUE_APP_BE_API_URL;\n      try {\n        const response = await axios.get(`${beUrl}/api/v1/teacher-quizzes/game/${this.currentGameId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        this.currentGameQuizzes = response.data;\n      } catch (error) {\n        console.error(\"현재 게임의 퀴즈 목록 조회 실패:\", error);\n      }\n    },\n    showAddGameModal() {\n      this.showGameModal = true;\n      this.newGame = {\n        gameName: '',\n        gamePassword: ''\n      };\n    },\n    closeGameModal() {\n      this.showGameModal = false;\n    },\n    async createGame() {\n      const token = localStorage.getItem(\"jwtToken\");\n      const memberId = localStorage.getItem(\"memberId\");\n      try {\n        const response = await axios.post(`${process.env.VUE_APP_BE_API_URL}/api/v1/games`, {\n          memberId: Number(memberId),\n          gameName: this.newGame.gameName,\n          gamePassword: this.newGame.gamePassword\n        }, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (response.data) {\n          await this.fetchMyGames();\n          this.closeGameModal();\n          alert('게임이 성공적으로 생성되었습니다.');\n        }\n      } catch (error) {\n        console.error(\"게임 생성 실패:\", error);\n        alert(\"게임 생성에 실패했습니다.\");\n      }\n    },\n    handleAddQuizSearch() {\n      this.quizAddCurrentPage = 1;\n    },\n    prevAddQuizPage() {\n      if (this.quizAddCurrentPage > 1) {\n        this.quizAddCurrentPage--;\n      }\n    },\n    nextAddQuizPage() {\n      if (this.quizAddCurrentPage < this.quizAddTotalPages) {\n        this.quizAddCurrentPage++;\n      }\n    },\n    // 북마크 상태 확인\n    isBookmarked(quizId) {\n      return this.bookmarks.some(bookmark => bookmark.quizId === quizId) || localStorage.getItem(`bookmark_${quizId}`) === 'true';\n    },\n    // 북크 토글\n    async toggleBookmark(quizId) {\n      const token = localStorage.getItem(\"jwtToken\");\n      const memberId = localStorage.getItem(\"memberId\");\n      if (!token || !memberId) return;\n      try {\n        const beUrl = process.env.VUE_APP_BE_API_URL;\n        const existingBookmark = this.bookmarks.find(b => b.quizId === quizId);\n        if (existingBookmark) {\n          await axios.delete(`${beUrl}/api/v1/bookmarks/${existingBookmark.bookmarkId}`, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          this.bookmarks = this.bookmarks.filter(b => b.quizId !== quizId);\n          localStorage.removeItem(`bookmark_${quizId}`);\n        } else {\n          const response = await axios.post(`${beUrl}/api/v1/bookmarks`, {\n            memberId: Number(memberId),\n            quizId: Number(quizId)\n          }, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          if (response.data) {\n            this.bookmarks.push(response.data);\n            localStorage.setItem(`bookmark_${quizId}`, 'true');\n          }\n        }\n      } catch (error) {\n        console.error(\"북마크 처리 실패:\", error);\n        alert(\"북마크 처리에 실패했습니다.\");\n      }\n    },\n    // 북마크 목록 조회\n    async fetchBookmarks() {\n      const token = localStorage.getItem(\"jwtToken\");\n      const memberId = localStorage.getItem(\"memberId\");\n      if (!token || !memberId) return;\n      try {\n        const beUrl = process.env.VUE_APP_BE_API_URL;\n        const response = await axios.get(`${beUrl}/api/v1/bookmarks/member/${memberId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        this.bookmarks = response.data;\n      } catch (error) {\n        console.error(\"북마크 목록 조회 실패:\", error);\n      }\n    },\n    async selectQuizForComments(quiz) {\n      this.selectedQuiz = quiz;\n      await this.fetchComments(quiz.quizId);\n      this.showCommentsModal = true;\n    },\n    closeCommentsModal() {\n      this.showCommentsModal = false;\n      this.selectedQuiz = null;\n      this.comments = [];\n    },\n    async fetchComments(quizId) {\n      const token = localStorage.getItem(\"jwtToken\");\n      if (!token) return;\n      try {\n        const beUrl = process.env.VUE_APP_BE_API_URL;\n        const response = await axios.get(`${beUrl}/api/v1/comments/quiz/${quizId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        this.comments = response.data.map(comment => ({\n          ...comment,\n          isEditing: false,\n          editContent: comment.quizCommentContent\n        }));\n      } catch (error) {\n        console.error(\"댓글 조회 실패:\", error);\n      }\n    },\n    formatDate(date) {\n      if (!date) return '';\n      try {\n        // Array 형식인 경우 (댓글 날짜)\n        if (Array.isArray(date)) {\n          const year = date[0];\n          const month = String(date[1]).padStart(2, '0');\n          const day = String(date[2]).padStart(2, '0');\n          const hours = String(date[3]).padStart(2, '0');\n          const minutes = String(date[4]).padStart(2, '0');\n          return `${year}-${month}-${day} ${hours}:${minutes}`;\n        }\n        // ISO 문자열 형식인 경우\n        else {\n          const dateObj = new Date(date);\n          const year = dateObj.getFullYear();\n          const month = String(dateObj.getMonth() + 1).padStart(2, '0');\n          const day = String(dateObj.getDate()).padStart(2, '0');\n          const hours = String(dateObj.getHours()).padStart(2, '0');\n          const minutes = String(dateObj.getMinutes()).padStart(2, '0');\n          return `${year}-${month}-${day} ${hours}:${minutes}`;\n        }\n      } catch (error) {\n        console.error('날짜 변환 에러:', error, date);\n        return '';\n      }\n    }\n  },\n  mounted() {\n    this.fetchMyGames();\n    this.fetchBookmarks(); // 북마크 목록 초기 로딩\n  }\n};","map":{"version":3,"names":["AppHeader","AppFooter","axios","name","components","data","games","quizList","showQuizModal","currentGameId","searchType","searchKeyword","selectedQuizzes","showQuizListModalFlag","currentGameQuizzes","selectedCurrentQuizzes","currentGame","quizListSearchType","quizListSearchKeyword","currentPage","itemsPerPage","totalItems","quizListCurrentPage","quizListItemsPerPage","showGameModal","newGame","gameName","gamePassword","quizAddSearchType","quizAddSearchKeyword","quizAddCurrentPage","quizAddItemsPerPage","quizAddTotalItems","bookmarks","selectedQuiz","comments","memberNickname","localStorage","getItem","showCommentsModal","computed","filteredQuizzes","keyword","toLowerCase","filter","quiz","quizTitle","includes","quizCategory","quizLevel","selectAll","get","length","set","value","selectAllCurrentQuizzes","filteredCurrentGameQuizzes","paginatedQuizzes","totalPages","Math","ceil","paginatedCurrentGameQuizzes","start","end","slice","quizListTotalPages","pageDisplay","isValidGame","quizAddTotalPages","filteredAddQuizzes","paginatedAddQuizzes","methods","fetchMyGames","token","memberId","console","error","$router","push","response","process","env","VUE_APP_BE_API_URL","headers","Authorization","alert","fetchQuizList","page","size","beUrl","currentGameResponse","existingQuizIds","map","quizId","params","availableQuizzes","content","startIndex","endIndex","quizAnswer","quizDescription","date","count","totalAvailableQuizzes","showAddQuizModal","game","gameId","fetchCurrentGameQuizzes","handleSearch","selectQuiz","confirm","Number","teacherQuizRequest","isStopped","teacherQuizResponse","post","log","closeQuizModal","removeQuizFromGame","delete","toggleSelectAll","addSelectedQuizzes","toggleQuizSelection","index","findIndex","q","splice","showQuizListModal","quizzesWithDetails","Promise","all","teacherQuiz","quizResponse","teacherQuizId","category","level","quizType","type","answer","desc","nickname","createdAt","Date","toISOString","closeQuizListModal","toggleCurrentQuizSelection","toggleSelectAllCurrentQuizzes","removeSelectedQuizzes","handleQuizListSearch","nextPage","prevPage","prevQuizListPage","nextQuizListPage","fetchAvailableQuizzes","showAddGameModal","closeGameModal","createGame","handleAddQuizSearch","prevAddQuizPage","nextAddQuizPage","isBookmarked","some","bookmark","toggleBookmark","existingBookmark","find","b","bookmarkId","removeItem","setItem","fetchBookmarks","selectQuizForComments","fetchComments","closeCommentsModal","comment","isEditing","editContent","quizCommentContent","formatDate","Array","isArray","year","month","String","padStart","day","hours","minutes","dateObj","getFullYear","getMonth","getDate","getHours","getMinutes","mounted"],"sources":["/home/runner/work/FE/FE/src/components/MyPage.vue"],"sourcesContent":["<template>\n  <div class=\"my-page\">\n    <AppHeader />\n    <div class=\"content\">\n      <div class=\"games-section\">\n        <div class=\"games-header\">\n          <h2>내 게임 목록</h2>\n          <button @click=\"showAddGameModal\" class=\"add-game-btn\">\n            새 게임 만들기\n          </button>\n        </div>\n\n        <!-- 게임 목록 -->\n        <div class=\"games-list\">\n          <div v-for=\"game in games\" :key=\"game.gameId\" class=\"game-card\">\n            <div class=\"game-header\">\n              <h3 class=\"game-title\">{{ game.gameName }}</h3>\n            </div>\n            \n            <!-- 게임에 포함된 퀴즈 목록 -->\n            <div class=\"quiz-list\">\n              <div v-for=\"quiz in game.quizzes\" :key=\"quiz.quizId\" class=\"quiz-item\">\n                <div class=\"quiz-info\">\n                  <span class=\"quiz-title\">{{ quiz.quizTitle }}</span>\n                  <div class=\"quiz-badges\">\n                    <span class=\"category-badge\">{{ quiz.quizCategory }}</span>\n                    <span class=\"level-badge\">{{ quiz.quizLevel }}</span>\n                  </div>\n                </div>\n                <button @click=\"removeQuizFromGame(game.gameId, quiz.quizId)\" class=\"remove-btn\">\n                  제\n                </button>\n              </div>\n            </div>\n\n            <!-- 버튼을 아래로 이동 -->\n            <div class=\"game-footer\">\n              <div class=\"game-buttons\">\n                <button @click=\"showQuizListModal(game)\" class=\"view-quiz-btn\">\n                  퀴즈 목록 보기\n                </button>\n                <button @click=\"showAddQuizModal(game)\" class=\"add-quiz-btn\">\n                  퀴즈 추가\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <!-- 퀴즈 추가 모달 -->\n        <div v-if=\"showQuizModal\" class=\"modal\">\n          <div class=\"modal-content\">\n            <h3>퀴즈 추가</h3>\n            <div class=\"search-area\">\n              <div class=\"search-container\">\n                <select v-model=\"quizAddSearchType\" class=\"search-select\">\n                  <option value=\"all\">전체</option>\n                  <option value=\"title\">제목</option>\n                  <option value=\"category\">카테고리</option>\n                  <option value=\"level\">난이도</option>\n                </select>\n                <input \n                  type=\"text\" \n                  v-model=\"quizAddSearchKeyword\" \n                  class=\"search-input\" \n                  placeholder=\"검색어를 입력하세요\"\n                >\n                <button @click=\"handleQuizListSearch\" class=\"search-button\">검색</button>\n              </div>\n            </div>\n\n            <div class=\"quiz-table\">\n              <table>\n                <thead>\n                  <tr>\n                    <th><input type=\"checkbox\" v-model=\"selectAll\"></th>\n                    <th>제목</th>\n                    <th>카테고리</th>\n                    <th>난이도</th>\n                    <th>북마크</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr v-for=\"quiz in filteredAddQuizzes\" \n                      :key=\"quiz.quizId\" \n                      class=\"quiz-row\"\n                      @click=\"selectQuizForComments(quiz)\"\n                      :class=\"{ 'selected': selectedQuiz?.quizId === quiz.quizId }\">\n                    <td @click.stop>\n                      <input type=\"checkbox\" :value=\"quiz\" v-model=\"selectedQuizzes\">\n                    </td>\n                    <td>{{ quiz.quizTitle }}</td>\n                    <td>{{ quiz.quizCategory }}</td>\n                    <td>{{ quiz.quizLevel }}</td>\n                    <td @click.stop>\n                      <img \n                        src=\"@/assets/Icon.png\" \n                        class=\"bookmark-icon\" \n                        :class=\"{ 'bookmarked': isBookmarked(quiz.quizId) }\"\n                        @click=\"toggleBookmark(quiz.quizId)\"\n                        alt=\"bookmark\"\n                      />\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n\n            <div class=\"modal-buttons\">\n              <button @click=\"addSelectedQuizzes\" class=\"add-selected-btn\" :disabled=\"!selectedQuizzes.length\">\n                선택한 퀴즈 추가 ({{ selectedQuizzes.length }}개)\n              </button>\n              <div class=\"pagination-buttons\">\n                <button class=\"nav-btn prev\" @click=\"prevPage\" :disabled=\"currentPage === 1\">\n                  이전\n                </button>\n                <span class=\"page-info\">{{ currentPage }} / {{ totalPages }}</span>\n                <button class=\"nav-btn next\" @click=\"nextPage\" :disabled=\"currentPage >= totalPages\">\n                  다음\n                </button>\n              </div>\n              <button @click=\"closeQuizModal\" class=\"cancel-btn\">닫기</button>\n            </div>\n          </div>\n\n          <!-- 댓글 모달 -->\n          <div v-if=\"showCommentsModal\" class=\"comments-modal\">\n            <h3>{{ selectedQuiz?.quizTitle }} 댓글</h3>\n            <div class=\"comments-list\">\n              <div v-for=\"comment in comments\" :key=\"comment.quizCommentId\" class=\"comment\">\n                <div class=\"comment-header\">\n                  <div class=\"comment-left\">\n                    <span class=\"comment-author\">{{ comment.memberNickname }}</span>\n                    <span class=\"comment-date\">{{ formatDate(comment.quizCommentCreatedAt) }}</span>\n                  </div>\n                </div>\n                <p class=\"comment-content\">{{ comment.quizCommentContent }}</p>\n              </div>\n            </div>\n            <button @click=\"closeCommentsModal\" class=\"close-btn\">닫기</button>\n          </div>\n        </div>\n\n        <!-- 퀴즈 목록 모달 -->\n        <div v-if=\"showQuizListModalFlag\" class=\"modal\">\n          <div class=\"modal-content\">\n            <h3>현재 게임의 퀴즈 목록</h3>\n            <div class=\"search-area\">\n              <div class=\"search-container\">\n                <select v-model=\"quizListSearchType\" class=\"search-select\">\n                  <option value=\"all\">전체</option>\n                  <option value=\"title\">제목</option>\n                  <option value=\"category\">카테고리</option>\n                  <option value=\"level\">난이도</option>\n                </select>\n                <input \n                  v-model=\"quizListSearchKeyword\" \n                  type=\"text\" \n                  placeholder=\"퀴즈 검색\"\n                  class=\"search-input\"\n                  @keyup.enter=\"handleQuizListSearch\"\n                >\n                <button @click=\"handleQuizListSearch\" class=\"search-button\">검색</button>\n              </div>\n            </div>\n            <div class=\"quiz-table\">\n              <table>\n                <thead>\n                  <tr>\n                    <th><input type=\"checkbox\" :checked=\"selectAllCurrentQuizzes\" @change=\"toggleSelectAllCurrentQuizzes\"></th>\n                    <th>제목</th>\n                    <th>카테고리</th>\n                    <th>난이도</th>\n                    <th>북마크</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr v-for=\"quiz in paginatedCurrentGameQuizzes\" \n                      :key=\"quiz.teacherQuizId\" \n                      class=\"quiz-row\"\n                      @click=\"selectQuizForComments(quiz)\"\n                      :class=\"{ 'selected': selectedQuiz?.quizId === quiz.quizId }\">\n                    <td @click.stop>\n                      <input type=\"checkbox\" v-model=\"selectedCurrentQuizzes\" :value=\"quiz\">\n                    </td>\n                    <td>{{ quiz.quizTitle }}</td>\n                    <td>{{ quiz.quizCategory }}</td>\n                    <td>{{ quiz.quizLevel }}</td>\n                    <td @click.stop>\n                      <img src=\"@/assets/Icon.png\" \n                           class=\"bookmark-icon\" \n                           :class=\"{ 'bookmarked': isBookmarked(quiz.quizId) }\"\n                           @click=\"toggleBookmark(quiz.quizId)\"\n                           alt=\"bookmark\">\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n\n            <div class=\"modal-buttons\">\n              <button \n                @click=\"removeSelectedQuizzes\" \n                class=\"remove-selected-btn\" \n                :disabled=\"!selectedCurrentQuizzes.length\">\n                선택한 퀴즈 삭제 ({{ selectedCurrentQuizzes.length }}개)\n              </button>\n              <div class=\"pagination-buttons\">\n                <button class=\"nav-btn prev\" @click=\"prevQuizListPage\" :disabled=\"quizListCurrentPage === 1\">\n                  이전\n                </button>\n                <span class=\"page-info\">{{ quizListCurrentPage }} / {{ quizListTotalPages }}</span>\n                <button class=\"nav-btn next\" @click=\"nextQuizListPage\" :disabled=\"quizListCurrentPage >= quizListTotalPages\">\n                  다음\n                </button>\n              </div>\n              <button @click=\"closeQuizListModal\" class=\"cancel-btn\">닫기</button>\n            </div>\n          </div>\n        </div>\n\n        <!-- 게임 추가 모달 -->\n        <div v-if=\"showGameModal\" class=\"modal\">\n          <div class=\"modal-content\">\n            <h3>새 게임 만들기</h3>\n            <div class=\"game-form\">\n              <div class=\"form-group\">\n                <label>게임 이름</label>\n                <input \n                  v-model=\"newGame.gameName\" \n                  type=\"text\" \n                  placeholder=\"게임 이름을 입력하세요\"\n                  class=\"form-input\"\n                >\n              </div>\n              <div class=\"form-group\">\n                <label>비밀번호</label>\n                <input \n                  v-model=\"newGame.gamePassword\" \n                  type=\"password\" \n                  placeholder=\"비밀번호를 입력하세요\"\n                  class=\"form-input\"\n                >\n              </div>\n            </div>\n            <div class=\"modal-buttons\">\n              <button @click=\"createGame\" class=\"create-btn\" :disabled=\"!isValidGame\">\n                게임 만들기\n              </button>\n              <button @click=\"closeGameModal\" class=\"cancel-btn\">\n                취소\n              </button>\n            </div>\n          </div>\n        </div>\n\n        <!-- 기존 퀴즈 목록 모달은 그대로 두고 새로운 댓글 모달 추가 -->\n        <div v-if=\"showCommentsModal\" class=\"comments-modal\">\n          <div class=\"modal-content comments-content\">\n            <h3>{{ selectedQuiz?.quizTitle }} </h3>\n            <div class=\"comments-list\">\n              <div v-for=\"comment in comments\" :key=\"comment.quizCommentId\" class=\"comment\">\n                <div class=\"comment-header\">\n                  <span class=\"comment-author\">{{ comment.memberNickname }}</span>\n                  <span class=\"comment-date\">{{ formatDate(comment.quizCommentCreatedAt) }}</span>\n                </div>\n                <p class=\"comment-content\">{{ comment.quizCommentContent }}</p>\n              </div>\n            </div>\n            <button @click=\"closeCommentsModal\" class=\"close-btn\">닫기</button>\n          </div>\n        </div>\n      </div>\n    </div>\n    <AppFooter />\n  </div>\n</template>\n\n<script>\nimport AppHeader from \"./Header.vue\";\nimport AppFooter from \"./Footer.vue\";\nimport axios from 'axios';\n\nexport default {\n  name: 'MyPage',\n  components: {\n    AppHeader,\n    AppFooter\n  },\n  data() {\n    return {\n      games: [],\n      quizList: [],\n      showQuizModal: false,\n      currentGameId: null,\n      searchType: 'all',\n      searchKeyword: '',\n      selectedQuizzes: [],\n      showQuizListModalFlag: false,\n      currentGameQuizzes: [],\n      selectedCurrentQuizzes: [],\n      currentGame: null,\n      quizListSearchType: 'all',\n      quizListSearchKeyword: '',\n      currentPage: 1,\n      itemsPerPage: 10,\n      totalItems: 0, // 총 퀴즈 수\n      quizListCurrentPage: 1,\n      quizListItemsPerPage: 10,\n      showGameModal: false,\n      newGame: {\n        gameName: '',\n        gamePassword: ''\n      },\n      quizAddSearchType: 'all',\n      quizAddSearchKeyword: '',\n      quizAddCurrentPage: 1,\n      quizAddItemsPerPage: 10,\n      quizAddTotalItems: 0,\n      bookmarks: [],\n      selectedQuiz: null,\n      comments: [],\n      memberNickname: localStorage.getItem(\"memberNickname\") || \"\",\n      showCommentsModal: false,\n    }\n  },\n  computed: {\n    filteredQuizzes() {\n      if (!this.quizList) return [];\n      if (!this.searchKeyword) return this.quizList;\n      \n      const keyword = this.searchKeyword.toLowerCase();\n      return this.quizList.filter(quiz => {\n        if (!quiz) return false;\n        \n        switch (this.searchType) {\n          case 'title':\n            return quiz.quizTitle?.toLowerCase().includes(keyword);\n          case 'category':\n            return quiz.quizCategory?.toLowerCase().includes(keyword);\n          case 'level':\n            return quiz.quizLevel?.toLowerCase().includes(keyword);\n          case 'all':\n            return (quiz.quizTitle?.toLowerCase().includes(keyword) ||\n                   quiz.quizCategory?.toLowerCase().includes(keyword) ||\n                   quiz.quizLevel?.toLowerCase().includes(keyword));\n          default:\n            return true;\n        }\n      });\n    },\n\n    selectAll: {\n      get() {\n        return this.quizList.length > 0 && this.selectedQuizzes.length === this.quizList.length;\n      },\n      set(value) {\n        this.selectedQuizzes = value ? [...this.quizList] : [];\n      }\n    },\n\n    selectAllCurrentQuizzes: {\n      get() {\n        return this.currentGameQuizzes.length === this.selectedCurrentQuizzes.length;\n      },\n      set(value) {\n        this.selectedCurrentQuizzes = value ? [...this.currentGameQuizzes] : [];\n      }\n    },\n\n    filteredCurrentGameQuizzes() {\n      if (!this.currentGameQuizzes) return [];\n      if (!this.quizListSearchKeyword) return this.currentGameQuizzes;\n      \n      const keyword = this.quizListSearchKeyword.toLowerCase();\n      return this.currentGameQuizzes.filter(quiz => {\n        if (!quiz) return false;\n        \n        switch (this.quizListSearchType) {\n          case 'title':\n            return quiz.quizTitle?.toLowerCase().includes(keyword);\n          case 'category':\n            return quiz.quizCategory?.toLowerCase().includes(keyword);\n          case 'level':\n            return quiz.quizLevel?.toLowerCase().includes(keyword);\n          case 'all':\n            return (quiz.quizTitle?.toLowerCase().includes(keyword) ||\n                   quiz.quizCategory?.toLowerCase().includes(keyword) ||\n                   quiz.quizLevel?.toLowerCase().includes(keyword));\n          default:\n            return true;\n        }\n      });\n    },\n\n    paginatedQuizzes() {\n      return this.quizList;\n    },\n\n    totalPages() {\n      return Math.ceil(this.totalItems / this.itemsPerPage);\n    },\n\n    paginatedCurrentGameQuizzes() {\n      if (!this.filteredCurrentGameQuizzes) return [];\n      \n      const start = (this.quizListCurrentPage - 1) * this.quizListItemsPerPage;\n      const end = start + this.quizListItemsPerPage;\n      return this.filteredCurrentGameQuizzes.slice(start, end);\n    },\n\n    quizListTotalPages() {\n      return Math.ceil(this.filteredCurrentGameQuizzes.length / this.quizListItemsPerPage);\n    },\n\n    pageDisplay() {\n      return `${this.currentPage}/${this.totalPages}`;\n    },\n\n    isValidGame() {\n      return this.newGame.gameName && this.newGame.gamePassword;\n    },\n\n    quizAddTotalPages() {\n      return Math.ceil(this.quizAddTotalItems / this.quizAddItemsPerPage);\n    },\n\n    filteredAddQuizzes() {\n      if (!this.quizList) return [];\n      if (!this.quizAddSearchKeyword) return this.quizList;\n      \n      const keyword = this.quizAddSearchKeyword.toLowerCase();\n      return this.quizList.filter(quiz => {\n        if (!quiz) return false;\n        \n        switch (this.quizAddSearchType) {\n          case 'title':\n            return quiz.quizTitle?.toLowerCase().includes(keyword);\n          case 'category':\n            return quiz.quizCategory?.toLowerCase().includes(keyword);\n          case 'level':\n            return quiz.quizLevel?.toLowerCase().includes(keyword);\n          case 'all':\n            return (quiz.quizTitle?.toLowerCase().includes(keyword) ||\n                   quiz.quizCategory?.toLowerCase().includes(keyword) ||\n                   quiz.quizLevel?.toLowerCase().includes(keyword));\n          default:\n            return true;\n        }\n      });\n    },\n\n    paginatedAddQuizzes() {\n      const start = (this.quizAddCurrentPage - 1) * this.quizAddItemsPerPage;\n      const end = start + this.quizAddItemsPerPage;\n      return this.filteredAddQuizzes.slice(start, end);\n    }\n  },\n  methods: {\n    // 내 게임 목록 조회\n    async fetchMyGames() {\n      const token = localStorage.getItem(\"jwtToken\");\n      const memberId = localStorage.getItem(\"memberId\");\n      \n      if (!token || !memberId) {\n        console.error(\"로그인이 필요합니다.\");\n        this.$router.push(\"/login\");\n        return;\n      }\n\n      try {\n        // /api/v1/games/member/{memberId} 엔드포인트로 변경\n        const response = await axios.get(\n          `${process.env.VUE_APP_BE_API_URL}/api/v1/games/member/${memberId}`, \n          {\n            headers: { Authorization: `Bearer ${token}` }\n          }\n        );\n\n        this.games = response.data;\n      } catch (error) {\n        console.error(\"게임 록 조회 실패:\", error);\n        alert(\"게임 목록을 오는데 실패했습니다.\");\n      }\n    },\n\n    // 전체 퀴즈 목록 조회\n    async fetchQuizList(page = this.currentPage - 1, size = this.itemsPerPage) {\n      const token = localStorage.getItem(\"jwtToken\");\n      const beUrl = process.env.VUE_APP_BE_API_URL;\n      \n      try {\n        // 현재 게임의 퀴즈 목록 가져오기\n        const currentGameResponse = await axios.get(\n          `${beUrl}/api/v1/teacher-quizzes/game/${this.currentGameId}`,\n          { headers: { Authorization: `Bearer ${token}` }}\n        );\n        \n        const existingQuizIds = currentGameResponse.data.map(quiz => quiz.quizId);\n\n        // 전체 퀴즈 목록을 한 번에 가져오기\n        const response = await axios.get(`${beUrl}/api/v1/quizs/all`, {\n          headers: { Authorization: `Bearer ${token}` },\n          params: { \n            page: 0,\n            size: 9999\n          }\n        });\n\n        // 이미 추가된 퀴즈를 제외한 전체 퀴즈\n        const availableQuizzes = response.data.content.filter(\n          quiz => !existingQuizIds.includes(quiz.quizId)\n        );\n\n        // 현재 페이지의 시작과 끝 인덱스 계산\n        const startIndex = page * size;\n        const endIndex = startIndex + size;\n\n        // 현재 페이지에 표시할 퀴즈\n        this.quizList = availableQuizzes.slice(startIndex, endIndex).map(quiz => ({\n          quizId: quiz.quizId,\n          memberNickname: quiz.memberNickname || '알 수 없음',\n          quizCategory: quiz.quizCategory,\n          quizTitle: quiz.quizTitle,\n          quizLevel: quiz.quizLevel,\n          quizAnswer: quiz.quizAnswer,\n          quizDescription: quiz.quizDescription,\n          date: quiz.date,\n          count: quiz.count || 0\n        }));\n\n        // 전체 사용 가능한 퀴즈 수\n        const totalAvailableQuizzes = availableQuizzes.length;\n        \n        // 페이지네이션 정보 업데이트 (전체 페이지 수는 처음 계산된 값을 유지)\n        if (!this.totalPages) {\n          this.totalPages = Math.ceil(totalAvailableQuizzes / this.itemsPerPage);\n        }\n        this.totalItems = totalAvailableQuizzes;\n\n      } catch (error) {\n        console.error(\"퀴즈 목록 조회 실패:\", error);\n        alert(\"퀴즈 목록을 불러오는 데 실패했습니다.\");\n      }\n    },\n\n    // 퀴즈  모달 표시\n    async showAddQuizModal(game) {\n      this.currentGameId = game.gameId;\n      this.currentGame = game;\n      this.currentPage = 1;\n      this.selectedQuizzes = [];\n      this.totalPages = null; // 모달이 열릴 때 totalPages 초기화\n      await this.fetchCurrentGameQuizzes();\n      await this.fetchQuizList(0);\n      this.showQuizModal = true;\n    },\n\n    async handleSearch() {\n      this.currentPage = 1;\n      await this.fetchQuizList();\n    },\n\n    // 퀴즈 선택 및 게임에 추가\n    async selectQuiz(quiz) {\n      if (!confirm(`\"${quiz.quizTitle}\" 퀴즈를 게임에 추가하시겠습니까?`)) return;\n\n      const token = localStorage.getItem(\"jwtToken\");\n      const memberId = Number(localStorage.getItem(\"memberId\"));\n\n      try {\n        const teacherQuizRequest = {\n          quizId: quiz.quizId,\n          gameId: this.currentGameId,\n          isStopped: 0\n        };\n\n        const teacherQuizResponse = await axios.post(\n          `${process.env.VUE_APP_BE_API_URL}/api/v1/teacher-quizzes/member/${memberId}`,\n          teacherQuizRequest,\n          { headers: { Authorization: `Bearer ${token}` }}\n        );\n\n        if (teacherQuizResponse.data) {\n          console.log('퀴즈 성으로 저장되었습니다:', teacherQuizResponse.data);\n          await this.fetchMyGames();\n          this.closeQuizModal();\n        }\n      } catch (error) {\n        console.error(\"퀴즈 추가 실패:\", error);\n        alert(\"퀴즈 추가에 실패습니다.\");\n      }\n    },\n\n    // 게임에서 퀴즈 제거\n    async removeQuizFromGame(gameId, quizId) {\n      if (!confirm('이 퀴즈를 게임에서 제거하시습니까?')) return;\n\n      const token = localStorage.getItem(\"jwtToken\");\n      try {\n        await axios.delete(\n          `${process.env.VUE_APP_BE_API_URL}/api/v1/games/${gameId}/quizzes/${quizId}`,\n          { headers: { Authorization: `Bearer ${token}` }}\n        );\n        \n        await this.fetchMyGames();\n        alert(\"퀴즈가 제거되었습니다.\");\n      } catch (error) {\n        console.error(\"퀴즈 제거 실패:\", error);\n        alert(\"퀴즈 제거 실패했습니다.\");\n      }\n    },\n\n    toggleSelectAll() {\n      this.selectAll = !this.selectAll;\n    },\n\n    async addSelectedQuizzes() {\n      if (!this.selectedQuizzes.length) {\n        alert('선택 퀴즈가 없습니다.');\n        return;\n      }\n\n      if (!confirm(`선택한 ${this.selectedQuizzes.length}개의 퀴즈를 추가하시겠습니까?`)) return;\n\n      const token = localStorage.getItem(\"jwtToken\");\n      const memberId = Number(localStorage.getItem(\"memberId\"));\n\n      try {\n        for (const quiz of this.selectedQuizzes) {\n          const teacherQuizRequest = {\n            quizId: quiz.quizId,\n            gameId: this.currentGameId,\n            isStopped: 0\n          };\n\n          await axios.post(\n            `${process.env.VUE_APP_BE_API_URL}/api/v1/teacher-quizzes/member/${memberId}`,\n            teacherQuizRequest,\n            { headers: { Authorization: `Bearer ${token}` }}\n          );\n        }\n\n        await this.fetchMyGames();\n        this.closeQuizModal();\n        alert('선택한 퀴즈가 성공적로 추가되었습니다.');\n      } catch (error) {\n        console.error(\"퀴즈 추가 실패:\", error);\n        alert(\"퀴즈 추가에 실패했습니다.\");\n      }\n    },\n\n    closeQuizModal() {\n      this.showQuizModal = false;\n      this.showCommentsModal = false;\n      this.selectedQuiz = null;\n      this.comments = [];\n      this.selectedQuizzes = [];\n      this.searchKeyword = '';\n    },\n\n    toggleQuizSelection(quiz) {\n      const index = this.selectedQuizzes.findIndex(q => q.quizId === quiz.quizId);\n      if (index === -1) {\n        this.selectedQuizzes.push(quiz);\n      } else {\n        this.selectedQuizzes.splice(index, 1);\n      }\n    },\n\n    async showQuizListModal(game) {\n      const token = localStorage.getItem(\"jwtToken\");\n      const beUrl = process.env.VUE_APP_BE_API_URL;\n      \n      try {\n        // TeacherQuiz 목록을 가져옴 (이미 memberNickname이 함되어 있음)\n        const teacherQuizResponse = await axios.get(\n          `${beUrl}/api/v1/teacher-quizzes/game/${game.gameId}`,\n          { headers: { Authorization: `Bearer ${token}` }}\n        );\n        \n        console.log('TeacherQuiz 응답:', teacherQuizResponse.data);\n\n        const quizzesWithDetails = await Promise.all(\n          teacherQuizResponse.data.map(async (teacherQuiz) => {\n            try {\n              // 1. quizId로 퀴즈 정보 조회\n              const quizResponse = await axios.get(\n                `${beUrl}/api/v1/quizs/${teacherQuiz.quizId}`,\n                { headers: { Authorization: `Bearer ${token}` }}\n              );\n              \n              const quiz = quizResponse.data;\n              console.log('퀴즈 정보:', quiz);\n\n              return {\n                teacherQuizId: teacherQuiz.teacherQuizId,\n                quizId: teacherQuiz.quizId,\n                gameId: teacherQuiz.gameId,\n                isStopped: teacherQuiz.isStopped,\n                quizTitle: quiz.quiz,\n                quizCategory: quiz.category,\n                quizLevel: quiz.level,\n                quizType: quiz.type,\n                quizAnswer: quiz.answer,\n                quizDescription: quiz.desc,\n                nickname: teacherQuiz.memberNickname,  // 백엔드에서 받은 memberNickname 사용\n                createdAt: quiz.createdAt || new Date().toISOString()\n              };\n            } catch (error) {\n              console.error(`퀴즈 정보 조회 실패 (ID: ${teacherQuiz.quizId}):`, error);\n              return null;\n            }\n          })\n        );\n\n        this.currentGameQuizzes = quizzesWithDetails.filter(quiz => quiz !== null);\n        this.currentGame = game;\n        this.showQuizListModalFlag = true;\n      } catch (error) {\n        console.error(\"퀴즈 목록 조회 실패:\", error);\n        alert(\"퀴즈 목록을 불러오는데 실패했습니다.\");\n      }\n    },\n\n    closeQuizListModal() {\n      this.showQuizListModalFlag = false;\n      this.showCommentsModal = false;\n      this.selectedQuiz = null;\n      this.comments = [];\n      this.selectedCurrentQuizzes = [];\n      this.currentGame = null;\n      this.quizListSearchType = 'all';\n      this.quizListSearchKeyword = '';\n    },\n\n    toggleCurrentQuizSelection(quiz) {\n      const index = this.selectedCurrentQuizzes.findIndex(q => q.quizId === quiz.quizId);\n      if (index === -1) {\n        this.selectedCurrentQuizzes.push(quiz);\n      } else {\n        this.selectedCurrentQuizzes.splice(index, 1);\n      }\n    },\n\n    toggleSelectAllCurrentQuizzes() {\n      this.selectAllCurrentQuizzes = !this.selectAllCurrentQuizzes;\n    },\n\n    async removeSelectedQuizzes() {\n      if (!this.selectedCurrentQuizzes.length) {\n        alert('선된 퀴즈가 없습니다.');\n        return;\n      }\n\n      if (!confirm(`선택한 ${this.selectedCurrentQuizzes.length}개의 퀴즈를 삭제하시겠습니까?`)) return;\n\n      const token = localStorage.getItem(\"jwtToken\");\n\n      try {\n        for (const quiz of this.selectedCurrentQuizzes) {\n          await axios.delete(\n            `${process.env.VUE_APP_BE_API_URL}/api/v1/teacher-quizzes/quiz/${quiz.teacherQuizId}`,\n            { headers: { Authorization: `Bearer ${token}` }}\n          );\n        }\n\n        // 현재 게임의 퀴 목록을 다시 불러옴\n        await this.showQuizListModal(this.currentGame);\n        this.selectedCurrentQuizzes = [];\n        alert('선택한 퀴즈가 성공적으로 삭제되었습니다.');\n      } catch (error) {\n        console.error(\"퀴즈 삭제 실패:\", error);\n        alert(\"퀴즈 삭제에 실패했습니다.\");\n      }\n    },\n\n    handleQuizListSearch() {\n      // 퀴즈 목록 보기 검색 처리\n    },\n\n    async nextPage() {\n      if (this.currentPage < this.totalPages) {\n        this.currentPage++;\n        await this.fetchQuizList();\n      }\n    },\n\n    async prevPage() {\n      if (this.currentPage > 1) {\n        this.currentPage--;\n        await this.fetchQuizList();\n      }\n    },\n\n    prevQuizListPage() {\n      if (this.quizListCurrentPage > 1) {\n        this.quizListCurrentPage--;\n      }\n    },\n\n    nextQuizListPage() {\n      if (this.quizListCurrentPage < this.quizListTotalPages) {\n        this.quizListCurrentPage++;\n      }\n    },\n\n    async fetchAvailableQuizzes(memberId, gameId) {\n      try {\n        const response = await axios.get(`/api/v1/teacher-quizzes/member/${memberId}/game/${gameId}`);\n        this.availableQuizzes = response.data;\n      } catch (error) {\n        console.error(\"퀴즈 목록 조회 실패:\", error);\n      }\n    },\n\n    async fetchCurrentGameQuizzes() {\n      const token = localStorage.getItem(\"jwtToken\");\n      const beUrl = process.env.VUE_APP_BE_API_URL;\n\n      try {\n        const response = await axios.get(`${beUrl}/api/v1/teacher-quizzes/game/${this.currentGameId}`, {\n          headers: { Authorization: `Bearer ${token}` }\n        });\n\n        this.currentGameQuizzes = response.data;\n      } catch (error) {\n        console.error(\"현재 게임의 퀴즈 목록 조회 실패:\", error);\n      }\n    },\n\n    showAddGameModal() {\n      this.showGameModal = true;\n      this.newGame = {\n        gameName: '',\n        gamePassword: ''\n      };\n    },\n\n    closeGameModal() {\n      this.showGameModal = false;\n    },\n\n    async createGame() {\n      const token = localStorage.getItem(\"jwtToken\");\n      const memberId = localStorage.getItem(\"memberId\");\n\n      try {\n        const response = await axios.post(\n          `${process.env.VUE_APP_BE_API_URL}/api/v1/games`,\n          {\n            memberId: Number(memberId),\n            gameName: this.newGame.gameName,\n            gamePassword: this.newGame.gamePassword\n          },\n          {\n            headers: { Authorization: `Bearer ${token}` }\n          }\n        );\n\n        if (response.data) {\n          await this.fetchMyGames();\n          this.closeGameModal();\n          alert('게임이 성공적으로 생성되었습니다.');\n        }\n      } catch (error) {\n        console.error(\"게임 생성 실패:\", error);\n        alert(\"게임 생성에 실패했습니다.\");\n      }\n    },\n\n    handleAddQuizSearch() {\n      this.quizAddCurrentPage = 1;\n    },\n\n    prevAddQuizPage() {\n      if (this.quizAddCurrentPage > 1) {\n        this.quizAddCurrentPage--;\n      }\n    },\n\n    nextAddQuizPage() {\n      if (this.quizAddCurrentPage < this.quizAddTotalPages) {\n        this.quizAddCurrentPage++;\n      }\n    },\n\n    // 북마크 상태 확인\n    isBookmarked(quizId) {\n      return this.bookmarks.some(bookmark => bookmark.quizId === quizId) || \n             localStorage.getItem(`bookmark_${quizId}`) === 'true';\n    },\n\n    // 북크 토글\n    async toggleBookmark(quizId) {\n      const token = localStorage.getItem(\"jwtToken\");\n      const memberId = localStorage.getItem(\"memberId\");\n      \n      if (!token || !memberId) return;\n\n      try {\n        const beUrl = process.env.VUE_APP_BE_API_URL;\n        const existingBookmark = this.bookmarks.find(b => b.quizId === quizId);\n\n        if (existingBookmark) {\n          await axios.delete(`${beUrl}/api/v1/bookmarks/${existingBookmark.bookmarkId}`, {\n            headers: { Authorization: `Bearer ${token}` }\n          });\n          this.bookmarks = this.bookmarks.filter(b => b.quizId !== quizId);\n          localStorage.removeItem(`bookmark_${quizId}`);\n        } else {\n          const response = await axios.post(\n            `${beUrl}/api/v1/bookmarks`,\n            {\n              memberId: Number(memberId),\n              quizId: Number(quizId)\n            },\n            { headers: { Authorization: `Bearer ${token}` }}\n          );\n          \n          if (response.data) {\n            this.bookmarks.push(response.data);\n            localStorage.setItem(`bookmark_${quizId}`, 'true');\n          }\n        }\n      } catch (error) {\n        console.error(\"북마크 처리 실패:\", error);\n        alert(\"북마크 처리에 실패했습니다.\");\n      }\n    },\n\n    // 북마크 목록 조회\n    async fetchBookmarks() {\n      const token = localStorage.getItem(\"jwtToken\");\n      const memberId = localStorage.getItem(\"memberId\");\n      \n      if (!token || !memberId) return;\n\n      try {\n        const beUrl = process.env.VUE_APP_BE_API_URL;\n        const response = await axios.get(`${beUrl}/api/v1/bookmarks/member/${memberId}`, {\n          headers: { Authorization: `Bearer ${token}` }\n        });\n        this.bookmarks = response.data;\n      } catch (error) {\n        console.error(\"북마크 목록 조회 실패:\", error);\n      }\n    },\n\n    async selectQuizForComments(quiz) {\n      this.selectedQuiz = quiz;\n      await this.fetchComments(quiz.quizId);\n      this.showCommentsModal = true;\n    },\n\n    closeCommentsModal() {\n      this.showCommentsModal = false;\n      this.selectedQuiz = null;\n      this.comments = [];\n    },\n\n    async fetchComments(quizId) {\n      const token = localStorage.getItem(\"jwtToken\");\n      if (!token) return;\n\n      try {\n        const beUrl = process.env.VUE_APP_BE_API_URL;\n        const response = await axios.get(`${beUrl}/api/v1/comments/quiz/${quizId}`, {\n          headers: { Authorization: `Bearer ${token}` }\n        });\n        \n        this.comments = response.data.map(comment => ({\n          ...comment,\n          isEditing: false,\n          editContent: comment.quizCommentContent\n        }));\n      } catch (error) {\n        console.error(\"댓글 조회 실패:\", error);\n      }\n    },\n\n    formatDate(date) {\n      if (!date) return '';\n      \n      try {\n        // Array 형식인 경우 (댓글 날짜)\n        if (Array.isArray(date)) {\n          const year = date[0];\n          const month = String(date[1]).padStart(2, '0');\n          const day = String(date[2]).padStart(2, '0');\n          const hours = String(date[3]).padStart(2, '0');\n          const minutes = String(date[4]).padStart(2, '0');\n          \n          return `${year}-${month}-${day} ${hours}:${minutes}`;\n        } \n        // ISO 문자열 형식인 경우\n        else {\n          const dateObj = new Date(date);\n          const year = dateObj.getFullYear();\n          const month = String(dateObj.getMonth() + 1).padStart(2, '0');\n          const day = String(dateObj.getDate()).padStart(2, '0');\n          const hours = String(dateObj.getHours()).padStart(2, '0');\n          const minutes = String(dateObj.getMinutes()).padStart(2, '0');\n          \n          return `${year}-${month}-${day} ${hours}:${minutes}`;\n        }\n      } catch (error) {\n        console.error('날짜 변환 에러:', error, date);\n        return '';\n      }\n    }\n  },\n  mounted() {\n    this.fetchMyGames();\n    this.fetchBookmarks(); // 북마크 목록 초기 로딩\n  }\n}\n</script>\n\n<style scoped>\n.my-page {\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n  background-color: #fff;\n  overflow: hidden; /* 전체 페이지 스크롤 방지 */\n}\n\n.content {\n  flex: 1;\n  padding: 20px;\n  max-width: 1200px;\n  margin: 0 auto;\n  width: 100%;\n  padding-top: 80px;\n  padding-bottom: 40px;\n  overflow-y: auto; /* 로 스크롤 활성화 */\n  height: calc(100vh - 120px); /* 헤더와 푸터를 제외한 높이 */\n}\n\n.games-section {\n  background-color: white;\n  border-radius: 8px;\n  padding: 20px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  overflow-y: auto; /* 세로 스크롤 활성화 */\n  max-height: calc(100vh - 160px); /* 헤더와 푸터를 제외한 높이 */\n}\n\n/* 스크롤바 숨기기 */\n.games-section::-webkit-scrollbar {\n  display: none; /* 웹킷 기반 브라우저에서 스크롤바 숨기기 */\n}\n\n.games-section {\n  -ms-overflow-style: none;  /* IE 및 Edge에서 스크롤 숨기기 */\n  scrollbar-width: none;  /* Firefox에서 스크롤바 숨기기 */\n}\n\n.games-list {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  gap: 30px;\n  margin-top: 20px;\n  padding: 10px;\n}\n\n.game-card {\n  border: 1px solid #ddd;\n  border-radius: 8px;\n  padding: 20px;\n  background: white;\n  display: flex;\n  flex-direction: column;\n  min-height: 200px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.game-header {\n  margin-bottom: 15px;\n  text-align: left;  /* 제목 왼쪽 정렬 */\n}\n\n.game-title {\n  font-size: 1.5rem;\n  margin: 0;\n  color: #333;\n}\n\n.quiz-list {\n  flex: 1;  /* 남은 공간 채우기 */\n  overflow-y: auto;  /* 내용이 많으면 스크롤 */\n  margin-bottom: 15px;  /* 버튼과의 간격 */\n}\n\n.game-footer {\n  margin-top: auto;  /* 하단에 고정 */\n  padding-top: 15px;\n  border-top: 1px solid #eee;\n}\n\n.game-buttons {\n  display: flex;\n  gap: 10px;\n  justify-content: center;  /* 버튼 중앙 정렬 */\n}\n\n.view-quiz-btn, .add-quiz-btn {\n  min-width: 120px;\n  height: 36px;\n  padding: 0 16px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 14px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  white-space: nowrap;\n}\n\n.view-quiz-btn {\n  background-color: #000000d6;\n  color: white;\n}\n\n.add-quiz-btn {\n  background-color: rgba(0, 0, 0, 0.865);\n  color: white;\n}\n\n/* 호버 효과 */\n.view-quiz-btn:hover, .add-quiz-btn:hover {\n  opacity: 0.9;\n}\n\n.remove-btn {\n  background-color: #f44336;\n  color: white;\n  border: none;\n  padding: 4px 8px;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.modal {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.modal-content {\n  background: white;\n  padding: 30px;\n  border-radius: 8px;\n  width: 90%;\n  max-width: 800px;\n  max-height: 80vh;\n  overflow-y: auto;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n}\n\n.search-area {\n  margin: 20px 0;\n}\n\n.search-container {\n  display: flex;\n  gap: 10px;\n  align-items: center;\n}\n\n.search-select {\n  padding: 8px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  min-width: 120px;\n}\n\n.search-input {\n  flex: 1;\n  padding: 8px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n}\n\n.search-button {\n  padding: 8px 16px;\n  background-color: rgba(0, 0, 0, 0.865);\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.quiz-table {\n  flex: 1;\n  overflow-y: auto;\n  border: 1px solid #eee;\n  border-radius: 4px;\n}\n\n.quiz-table table {\n  width: 100%;\n  table-layout: fixed;\n}\n\n.quiz-table th,\n.quiz-table td {\n  padding: 12px;\n  text-align: left;\n  border-bottom: 1px solid #eee;\n}\n\n.quiz-table th {\n  background-color: #f8f9fa;\n  position: sticky;\n  top: 0;\n  z-index: 1;\n}\n\n/* 각 열의 너비 조정 */\n.quiz-table th:nth-child(1),\n.quiz-table td:nth-child(1) { \n  width: 5%; \n}\n\n.quiz-table th:nth-child(2),\n.quiz-table td:nth-child(2) { \n  width: 45%; \n}\n\n.quiz-table th:nth-child(3),\n.quiz-table td:nth-child(3) { \n  width: 20%; \n}\n\n.quiz-table th:nth-child(4),\n.quiz-table td:nth-child(4) { \n  width: 20%; \n}\n\n.quiz-table th:nth-child(5),\n.quiz-table td:nth-child(5) { \n  width: 10%; \n  text-align: center;\n  vertical-align: middle;\n}\n\n.modal-buttons {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  gap: 10px;\n  padding-top: 20px;\n  margin-top: auto;\n}\n\n.pagination-buttons {\n  display: flex;\n  align-items: center;\n  gap: 15px;\n}\n\n.nav-btn {\n  min-width: 80px;\n  height: 36px;\n  padding: 0 16px;\n  border: 1px solid #e0e0e0;\n  background-color: white;\n  border-radius: 4px;\n  cursor: pointer;\n  font-weight: 500;\n  color: #333;\n  transition: all 0.2s;\n}\n\n.nav-btn:hover:not(:disabled) {\n  background-color: #f8f9fa;\n  border-color: #dee2e6;\n}\n\n.nav-btn:disabled {\n  background-color: #f5f5f5;\n  color: #aaa;\n  cursor: not-allowed;\n}\n\n.page-info {\n  min-width: 80px;\n  text-align: center;\n  font-weight: 500;\n  color: #666;\n}\n\n\n.add-selected-btn, .remove-selected-btn, .cancel-btn {\n  padding: 10px 20px;\n  border-radius: 4px;\n  border: none;\n  cursor: pointer;\n  font-weight: 500;\n}\n\n.add-selected-btn {\n  background-color: rgba(0, 0, 0, 0.865);\n  color: white;\n}\n\n.remove-selected-btn {\n  background-color: red;\n  color: white;\n}\n\n.add-selected-btn:disabled {\n  background-color: #cccccc;\n  cursor: not-allowed;\n}\n.remove-selected-btn:disabled {\n  background-color: #cccccc;\n  cursor: not-allowed;\n}\n\n.game-buttons button {\n  transition: opacity 0.2s;\n}\n\n.game-buttons button:hover {\n  opacity: 0.9;\n}\n\n/* 스크롤바 스타일링 */\n.content::-webkit-scrollbar {\n  width: 8px;\n}\n\n.content::-webkit-scrollbar-track {\n  background: #f1f1f1;\n  border-radius: 4px;\n}\n\n.content::-webkit-scrollbar-thumb {\n  background: #888;\n  border-radius: 4px;\n}\n\n.content::-webkit-scrollbar-thumb:hover {\n  background: #555;\n}\n\n/* 반응형 처리 */\n@media (max-height: 900px) {\n  .games-section {\n    height: auto;\n    margin-bottom: 20px;\n  }\n}\n\n/* 스크롤바 스타일링 */\n.games-section::-webkit-scrollbar {\n  width: 8px;\n}\n\n.games-section::-webkit-scrollbar-track {\n  background: #f1f1f1;\n  border-radius: 4px;\n}\n\n.games-section::-webkit-scrollbar-thumb {\n  background: #888;\n  border-radius: 4px;\n}\n\n.games-section::-webkit-scrollbar-thumb:hover {\n  background: #555;\n}\n\n.pagination {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  justify-content: center;\n  margin: 20px 0;\n}\n\n.pagination span {\n  min-width: 60px;\n  text-align: center;\n  font-size: 14px;\n}\n\n.pagination button {\n  padding: 5px 10px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  background-color: white;\n  cursor: pointer;\n}\n\n.pagination button:disabled {\n  background-color: #f5f5f5;\n  cursor: not-allowed;\n}\n\n.games-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n}\n\n.add-game-btn {\n  background-color: #000000;\n  color: white;\n  padding: 10px 20px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 14px;\n}\n\n.game-form {\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  margin: 20px 0;\n}\n\n.form-group {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n}\n\n.form-group label {\n  font-weight: 500;\n  color: #333;\n}\n\n.form-input {\n  padding: 8px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  font-size: 14px;\n}\n\n.create-btn {\n  background-color: #000000;\n  color: white;\n  padding: 10px 20px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.create-btn:disabled {\n  background-color: #cccccc;\n  cursor: not-allowed;\n}\n\n.bookmark-icon {\n  width: 18px;\n  height: 18px;\n  cursor: pointer;\n  vertical-align: middle;\n}\n\n.bookmark-icon:hover {\n  opacity: 0.5;\n}\n\n.bookmark-icon.bookmarked {\n  opacity: 1;\n  filter: invert(28%) sepia(67%) saturate(669%) hue-rotate(346deg) brightness(89%) contrast(83%);\n}\n\n/* 북마크 열 너비 조정 */\n.quiz-table td:nth-child(5) { \n  width: 5%; \n  text-align: center;\n}\n\n.quiz-list-container {\n  display: flex;\n  gap: 20px;\n}\n\n.quiz-table-section {\n  flex: 2;  /* 테이블 영역이 더 넓게 */\n}\n\n.comments-section {\n  flex: 1;  /* 댓글 영역은 더 좁게 */\n  padding-left: 20px;\n  border-left: 1px solid #ddd;\n  max-height: 400px;\n  overflow-y: auto;\n}\n\n.quiz-row {\n  cursor: pointer;\n}\n\n.quiz-row:hover {\n  background-color: #f5f5f5;\n}\n\n.quiz-row.selected {\n  background-color: #e9ecef;\n}\n\n.comment {\n  padding: 10px;\n  border-bottom: 1px solid #eee;\n}\n\n.comment-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 8px;\n  font-size: 13px;\n  color: #666;\n}\n\n.comment-author {\n  font-weight: bold;\n}\n\n.comment-date {\n  color: #888;\n}\n\n.comment-content {\n  font-size: 14px;\n  line-height: 1.4;\n  margin-bottom: 5px;\n}\n\n.comments-modal {\n  position: fixed;\n  top: 50%;\n  right: 0;\n  transform: translateY(-50%);\n  width: 380px;\n  height: 600px;\n  background: white;\n  border-radius: 8px 0 0 8px;\n  padding: 20px;\n  box-shadow: -2px 0 10px rgba(0, 0, 0, 0.1);\n  z-index: 1001;\n}\n\n.comments-content {\n  max-height: 500px;\n  overflow-y: auto;\n  padding: 20px;\n}\n\n.close-btn {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  background: none;\n  border: none;\n  cursor: pointer;\n  font-size: 14px;\n  color: #666;\n}\n\n.close-btn:hover {\n  color: #000;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}