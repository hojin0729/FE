{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.find.js\";\nimport \"core-js/modules/esnext.iterator.some.js\";\nimport AppHeader from \"./Header.vue\";\nimport AppFooter from \"./Footer.vue\";\nimport axios from \"axios\";\nexport default {\n  name: \"QuizBoard\",\n  components: {\n    AppHeader,\n    AppFooter\n  },\n  data() {\n    return {\n      quizList: [],\n      currentPage: 1,\n      itemsPerPage: 10,\n      totalItems: 0,\n      searchType: 'all',\n      searchKeyword: '',\n      bookmarks: []\n    };\n  },\n  computed: {\n    paginatedQuizList() {\n      return this.quizList;\n    },\n    totalPages() {\n      return Math.ceil(this.totalItems / this.itemsPerPage);\n    },\n    emptyRows() {\n      const remainingRows = this.itemsPerPage - this.paginatedQuizList.length;\n      return remainingRows > 0 ? remainingRows : 0;\n    }\n  },\n  methods: {\n    async fetchQuizList() {\n      const token = localStorage.getItem(\"jwtToken\");\n      if (!token) {\n        console.error(\"Token is missing\");\n        return;\n      }\n      try {\n        const beUrl = process.env.VUE_APP_BE_API_URL;\n        const params = {\n          page: this.currentPage - 1,\n          size: this.itemsPerPage\n        };\n        if (this.searchKeyword?.trim()) {\n          params.searchType = this.searchType;\n          params.searchKeyword = this.searchKeyword;\n        }\n        const response = await axios.get(`${beUrl}/api/v1/quizs/all`, {\n          params,\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        this.quizList = response.data.content;\n        this.totalItems = response.data.totalElements;\n      } catch (error) {\n        console.error(\"퀴즈 목록 조회 실패:\", error);\n        alert(\"퀴즈 목록을 불러오는 데 실패했습니다.\");\n      }\n    },\n    createQuiz() {\n      this.$router.push('/quizform'); // router/index.js에 정의된 경로로 이동\n    },\n    goToQuizDetail(quizId) {\n      this.$router.push(`/quiz/${quizId}`);\n    },\n    formatDate(date) {\n      if (!date) return '';\n      try {\n        if (date instanceof Date) {\n          return date.toLocaleDateString('ko-KR', {\n            year: 'numeric',\n            month: '2-digit',\n            day: '2-digit'\n          }).replace(/\\. /g, '-').replace('.', '');\n        }\n\n        // date가 배열인 경우\n        if (Array.isArray(date)) {\n          const newDate = new Date(date[0], date[1] - 1, date[2]);\n          return newDate.toLocaleDateString('ko-KR', {\n            year: 'numeric',\n            month: '2-digit',\n            day: '2-digit'\n          }).replace(/\\. /g, '-').replace('.', '');\n        }\n\n        // 문자열인 경우\n        return new Date(date).toLocaleDateString('ko-KR', {\n          year: 'numeric',\n          month: '2-digit',\n          day: '2-digit'\n        }).replace(/\\. /g, '-').replace('.', '');\n      } catch (error) {\n        console.error('날짜 변환 실패:', error, date);\n        return '';\n      }\n    },\n    getDisplayedPages() {\n      const totalPages = this.totalPages;\n      const current = this.currentPage;\n\n      // 항상 5개의 페이지를 보여주되, 위치 고정\n      if (totalPages <= 5) {\n        return Array.from({\n          length: totalPages\n        }, (_, i) => i + 1);\n      }\n      if (current <= 3) {\n        return [1, 2, 3, 4, 5];\n      }\n      if (current >= totalPages - 2) {\n        return [totalPages - 4, totalPages - 3, totalPages - 2, totalPages - 1, totalPages];\n      }\n      return [current - 2, current - 1, current, current + 1, current + 2];\n    },\n    async nextPage() {\n      if (this.currentPage < this.totalPages) {\n        this.currentPage++;\n        await this.fetchQuizList();\n      }\n    },\n    async prevPage() {\n      if (this.currentPage > 1) {\n        this.currentPage--;\n        await this.fetchQuizList();\n      }\n    },\n    async goToPage(pageNum) {\n      this.currentPage = pageNum;\n      await this.fetchQuizList();\n    },\n    async goToFirstPage() {\n      this.currentPage = 1;\n      await this.fetchQuizList();\n    },\n    async goToLastPage() {\n      this.currentPage = this.totalPages;\n      await this.fetchQuizList();\n    },\n    async handleSearch() {\n      this.currentPage = 1;\n      await this.fetchQuizList();\n    },\n    async fetchBookmarks() {\n      const token = localStorage.getItem(\"jwtToken\");\n      const memberId = localStorage.getItem(\"memberId\");\n      if (!token || !memberId) return;\n      try {\n        const beUrl = process.env.VUE_APP_BE_API_URL;\n        const response = await axios.get(`${beUrl}/api/v1/bookmarks/member/${memberId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        this.bookmarks = response.data;\n      } catch (error) {\n        console.error(\"북마크 목록 조회 실패:\", error);\n      }\n    },\n    isBookmarked(quizId) {\n      return this.bookmarks.some(bookmark => bookmark.quizId === quizId) || localStorage.getItem(`bookmark_${quizId}`) === 'true';\n    },\n    async toggleBookmark(quizId) {\n      const token = localStorage.getItem(\"jwtToken\");\n      const memberId = localStorage.getItem(\"memberId\");\n      if (!token || !memberId) {\n        alert(\"로그인이 필요한 서비스입니다.\");\n        return;\n      }\n      try {\n        const beUrl = process.env.VUE_APP_BE_API_URL;\n        const bookmark = this.bookmarks.find(b => b.quizId === quizId);\n        if (bookmark) {\n          // 북마크 삭제\n          await axios.delete(`${beUrl}/api/v1/bookmarks/${bookmark.bookmarkId}`, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          this.bookmarks = this.bookmarks.filter(b => b.bookmarkId !== bookmark.bookmarkId);\n          // localStorage에서 북마크 상태 제거\n          localStorage.removeItem(`bookmark_${quizId}`);\n        } else {\n          // 북마크 추가\n          const response = await axios.post(`${beUrl}/api/v1/bookmarks`, {\n            memberId: Number(memberId),\n            quizId: Number(quizId)\n          }, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          if (response.data) {\n            this.bookmarks.push(response.data);\n            // localStorage에 북마크 상태 저장\n            localStorage.setItem(`bookmark_${quizId}`, 'true');\n          }\n        }\n      } catch (error) {\n        console.error(\"북마크 처리 실패:\", error);\n        alert(\"북마크 처리에 실패했습니다.\");\n      }\n    }\n  },\n  watch: {\n    searchType: {\n      handler() {\n        this.currentPage = 1;\n        this.fetchQuizList();\n      }\n    },\n    searchKeyword: {\n      handler() {\n        this.currentPage = 1;\n        this.fetchQuizList();\n      }\n    }\n  },\n  async mounted() {\n    await this.fetchQuizList();\n    await this.fetchBookmarks();\n  }\n};","map":{"version":3,"names":["AppHeader","AppFooter","axios","name","components","data","quizList","currentPage","itemsPerPage","totalItems","searchType","searchKeyword","bookmarks","computed","paginatedQuizList","totalPages","Math","ceil","emptyRows","remainingRows","length","methods","fetchQuizList","token","localStorage","getItem","console","error","beUrl","process","env","VUE_APP_BE_API_URL","params","page","size","trim","response","get","headers","Authorization","content","totalElements","alert","createQuiz","$router","push","goToQuizDetail","quizId","formatDate","date","Date","toLocaleDateString","year","month","day","replace","Array","isArray","newDate","getDisplayedPages","current","from","_","i","nextPage","prevPage","goToPage","pageNum","goToFirstPage","goToLastPage","handleSearch","fetchBookmarks","memberId","isBookmarked","some","bookmark","toggleBookmark","find","b","delete","bookmarkId","filter","removeItem","post","Number","setItem","watch","handler","mounted"],"sources":["/home/runner/work/FE/FE/src/components/QuizBoard.vue"],"sourcesContent":["<template>\n  <div class=\"quiz-board-page\">\n    <AppHeader />\n    <div class=\"content\">\n      <div class=\"quiz-board\">\n        <div class=\"search-area\">\n          <div class=\"total-count\">전체 {{ totalItems }}건</div>\n          <div class=\"search-container\">\n            <select v-model=\"searchType\" class=\"search-select\">\n              <option value=\"all\">전체</option>\n              <option value=\"title\">제목</option>\n              <option value=\"category\">카테고리</option>\n              <option value=\"level\">난이도</option>\n            </select>\n            <input \n              type=\"text\" \n              v-model=\"searchKeyword\" \n              class=\"search-input\" \n              placeholder=\"검색어를 입력하세요\"\n              @keyup.enter=\"handleSearch\"\n            >\n            <button class=\"search-button\" @click=\"handleSearch\">검색</button>\n          </div>\n        </div>\n        <div class=\"table-container\">\n          <table class=\"quiz-table\">\n            <thead>\n              <tr>\n                <th style=\"width: 5%\"></th>\n                <th>번호</th>\n                <th>제목</th>\n                <th>작성자</th>\n                <th>작성일</th>\n              </tr>\n            </thead>\n            <tbody>\n              <template v-for=\"quiz in paginatedQuizList\" :key=\"quiz.quizId\">\n                <tr>\n                  <td class=\"bookmark-cell\">\n                    <img \n                      src=\"@/assets/Icon.png\" \n                      class=\"bookmark-icon\" \n                      :class=\"{ 'bookmarked': isBookmarked(quiz.quizId) }\"\n                      @click.stop=\"toggleBookmark(quiz.quizId)\"\n                      alt=\"bookmark\"\n                    />\n                  </td>\n                  <td class=\"id-cell\">{{ quiz.quizId }}</td>\n                  <td class=\"title-cell\" @click=\"goToQuizDetail(quiz.quizId)\">\n                    <div class=\"title-wrapper\">\n                      <span class=\"title-text\">{{ quiz.quizTitle }}</span>\n                      <span class=\"badges\">\n                        <span class=\"category-badge\">{{ quiz.quizCategory }}</span>\n                        <span class=\"level-badge\">{{ quiz.quizLevel }}</span>\n                      </span>\n                    </div>\n                  </td>\n                  <td class=\"author-cell\">{{ quiz.memberNickname }}</td>\n                  <td class=\"date-cell\">{{ formatDate(quiz.date) }}</td>\n                </tr>\n              </template>\n              <tr v-for=\"i in emptyRows\" :key=\"`empty-${i}`\" class=\"empty-row\">\n                <td colspan=\"5\">&nbsp;</td>\n              </tr>\n            </tbody>\n          </table>\n          <div class=\"pagination-container\">\n            <div class=\"pagination\">\n              <div class=\"pagination-wrapper\">\n                <div class=\"pagination-buttons\">\n                  <button class=\"nav-btn prev\" @click=\"prevPage\" :disabled=\"currentPage === 1\">\n                    &lt;\n                  </button>\n                  <div class=\"page-numbers\">\n                    <button \n                      v-for=\"pageNum in getDisplayedPages()\" \n                      :key=\"pageNum\"\n                      :class=\"['page-num', { active: currentPage === pageNum }]\"\n                      @click=\"goToPage(pageNum)\"\n                    >\n                      {{ pageNum }}\n                    </button>\n                  </div>\n                  <button class=\"nav-btn next\" @click=\"nextPage\" :disabled=\"currentPage === totalPages\">\n                    &gt;\n                  </button>\n                </div>\n              </div>\n            </div>\n            <button class=\"create-quiz-button search-button\" @click=\"createQuiz\">퀴즈 생성</button>\n          </div>\n        </div>\n      </div>\n    </div>\n    <AppFooter />\n  </div>\n</template>\n\n<script>\nimport AppHeader from \"./Header.vue\";\nimport AppFooter from \"./Footer.vue\";\nimport axios from \"axios\";\n\nexport default {\n  name: \"QuizBoard\",\n  components: {\n    AppHeader,\n    AppFooter,\n  },\n  data() {\n    return {\n      quizList: [],\n      currentPage: 1,\n      itemsPerPage: 10,\n      totalItems: 0,\n      searchType: 'all',\n      searchKeyword: '',\n      bookmarks: [],\n    };\n  },\n  computed: {\n    paginatedQuizList() {\n      return this.quizList;\n    },\n    totalPages() {\n      return Math.ceil(this.totalItems / this.itemsPerPage);\n    },\n    emptyRows() {\n      const remainingRows = this.itemsPerPage - this.paginatedQuizList.length;\n      return remainingRows > 0 ? remainingRows : 0;\n    }\n  },\n  methods: {\n    async fetchQuizList() {\n      const token = localStorage.getItem(\"jwtToken\");\n      if (!token) {\n        console.error(\"Token is missing\");\n        return;\n      }\n\n      try {\n        const beUrl = process.env.VUE_APP_BE_API_URL;\n        const params = {\n          page: this.currentPage - 1,\n          size: this.itemsPerPage\n        };\n\n        if (this.searchKeyword?.trim()) {\n          params.searchType = this.searchType;\n          params.searchKeyword = this.searchKeyword;\n        }\n\n        const response = await axios.get(`${beUrl}/api/v1/quizs/all`, {\n          params,\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        });\n\n        this.quizList = response.data.content;\n        this.totalItems = response.data.totalElements;\n        \n      } catch (error) {\n        console.error(\"퀴즈 목록 조회 실패:\", error);\n        alert(\"퀴즈 목록을 불러오는 데 실패했습니다.\");\n      }\n    },\n    createQuiz() {\n      this.$router.push('/quizform');  // router/index.js에 정의된 경로로 이동\n    },\n    goToQuizDetail(quizId) {\n      this.$router.push(`/quiz/${quizId}`);\n    },\n    formatDate(date) {\n      if (!date) return '';\n      \n      try {\n        if (date instanceof Date) {\n          return date.toLocaleDateString('ko-KR', {\n            year: 'numeric',\n            month: '2-digit',\n            day: '2-digit'\n          }).replace(/\\. /g, '-').replace('.', '');\n        }\n        \n        // date가 배열인 경우\n        if (Array.isArray(date)) {\n          const newDate = new Date(date[0], date[1]-1, date[2]);\n          return newDate.toLocaleDateString('ko-KR', {\n            year: 'numeric',\n            month: '2-digit',\n            day: '2-digit'\n          }).replace(/\\. /g, '-').replace('.', '');\n        }\n        \n        // 문자열인 경우\n        return new Date(date).toLocaleDateString('ko-KR', {\n          year: 'numeric',\n          month: '2-digit',\n          day: '2-digit'\n        }).replace(/\\. /g, '-').replace('.', '');\n      } catch (error) {\n        console.error('날짜 변환 실패:', error, date);\n        return '';\n      }\n    },\n    getDisplayedPages() {\n      const totalPages = this.totalPages;\n      const current = this.currentPage;\n      \n      // 항상 5개의 페이지를 보여주되, 위치 고정\n      if (totalPages <= 5) {\n        return Array.from({ length: totalPages }, (_, i) => i + 1);\n      }\n      \n      if (current <= 3) {\n        return [1, 2, 3, 4, 5];\n      }\n      \n      if (current >= totalPages - 2) {\n        return [\n          totalPages - 4,\n          totalPages - 3,\n          totalPages - 2,\n          totalPages - 1,\n          totalPages\n        ];\n      }\n      \n      return [current - 2, current - 1, current, current + 1, current + 2];\n    },\n    async nextPage() {\n      if (this.currentPage < this.totalPages) {\n        this.currentPage++;\n        await this.fetchQuizList();\n      }\n    },\n    async prevPage() {\n      if (this.currentPage > 1) {\n        this.currentPage--;\n        await this.fetchQuizList();\n      }\n    },\n    async goToPage(pageNum) {\n      this.currentPage = pageNum;\n      await this.fetchQuizList();\n    },\n    async goToFirstPage() {\n      this.currentPage = 1;\n      await this.fetchQuizList();\n    },\n    async goToLastPage() {\n      this.currentPage = this.totalPages;\n      await this.fetchQuizList();\n    },\n    async handleSearch() {\n      this.currentPage = 1;\n      await this.fetchQuizList();\n    },\n    async fetchBookmarks() {\n      const token = localStorage.getItem(\"jwtToken\");\n      const memberId = localStorage.getItem(\"memberId\");\n      \n      if (!token || !memberId) return;\n\n      try {\n        const beUrl = process.env.VUE_APP_BE_API_URL;\n        const response = await axios.get(`${beUrl}/api/v1/bookmarks/member/${memberId}`, {\n          headers: { Authorization: `Bearer ${token}` }\n        });\n        this.bookmarks = response.data;\n      } catch (error) {\n        console.error(\"북마크 목록 조회 실패:\", error);\n      }\n    },\n    isBookmarked(quizId) {\n      return this.bookmarks.some(bookmark => bookmark.quizId === quizId) || \n             localStorage.getItem(`bookmark_${quizId}`) === 'true';\n    },\n    async toggleBookmark(quizId) {\n      const token = localStorage.getItem(\"jwtToken\");\n      const memberId = localStorage.getItem(\"memberId\");\n      \n      if (!token || !memberId) {\n        alert(\"로그인이 필요한 서비스입니다.\");\n        return;\n      }\n\n      try {\n        const beUrl = process.env.VUE_APP_BE_API_URL;\n        const bookmark = this.bookmarks.find(b => b.quizId === quizId);\n        \n        if (bookmark) {\n          // 북마크 삭제\n          await axios.delete(`${beUrl}/api/v1/bookmarks/${bookmark.bookmarkId}`, {\n            headers: { Authorization: `Bearer ${token}` }\n          });\n          this.bookmarks = this.bookmarks.filter(b => b.bookmarkId !== bookmark.bookmarkId);\n          // localStorage에서 북마크 상태 제거\n          localStorage.removeItem(`bookmark_${quizId}`);\n        } else {\n          // 북마크 추가\n          const response = await axios.post(\n            `${beUrl}/api/v1/bookmarks`,\n            {\n              memberId: Number(memberId),\n              quizId: Number(quizId)\n            },\n            { headers: { Authorization: `Bearer ${token}` }}\n          );\n          \n          if (response.data) {\n            this.bookmarks.push(response.data);\n            // localStorage에 북마크 상태 저장\n            localStorage.setItem(`bookmark_${quizId}`, 'true');\n          }\n        }\n      } catch (error) {\n        console.error(\"북마크 처리 실패:\", error);\n        alert(\"북마크 처리에 실패했습니다.\");\n      }\n    },\n  },\n  watch: {\n    searchType: {\n      handler() {\n        this.currentPage = 1;\n        this.fetchQuizList();\n      }\n    },\n    searchKeyword: {\n      handler() {\n        this.currentPage = 1;\n        this.fetchQuizList();\n      }\n    }\n  },\n  async mounted() {\n    await this.fetchQuizList();\n    await this.fetchBookmarks();\n  }\n};\n</script>\n\n<style scoped>\n.home-page {\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n  background-color: #fff;\n}\n\n.total-count {\n  color: #666;\n  font-size: 14px;\n  margin-bottom: 0;\n  text-align: right;\n  margin-top: 10px;\n  width: auto;\n}\n\n.content {\n  flex: 1;\n  padding: 20px;\n  max-width: 1200px;\n  margin: 0 auto;\n  width: 100%;\n  padding-top: 80px;\n  padding-bottom: 40px;\n}\n\n.quiz-board {\n  background-color: white;\n  border-radius: 8px;\n  padding: 20px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  min-height: calc(100vh - 200px); /* 화면 높이에서 헤더/푸터 높을 뺀 값 */\n}\n\n\n.pagination-container {\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 15px 0;\n  margin-top: auto;\n  width: 100%;\n}\n\n.pagination {\n  position: absolute;\n  left: 50%;\n  transform: translateX(-50%);\n}\n\n.pagination-wrapper {\n  display: flex;\n  align-items: center;\n}\n\n.pagination-buttons {\n  display: flex;\n  align-items: center;\n  gap: 5px;\n}\n\n.create-quiz-button {\n  margin-left: auto;\n}\n\n.page-numbers {\n  display: flex;\n  gap: 5px;\n  margin: 0 5px;\n  min-width: 170px;\n  justify-content: center;\n}\n\n.page-num,\n.nav-btn {\n  min-width: 30px;\n  height: 30px;\n  border: 1px solid #ddd;\n  background-color: white;\n  color: #333;\n  font-size: 14px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0;\n  margin: 0;\n}\n\n.page-num.active {\n  background-color: rgba(0, 0, 0, 0.865);\n  color: white;\n  border-color: rgba(0, 0, 0, 0.865);\n}\n\n.nav-btn:disabled {\n  cursor: not-allowed;\n  opacity: 0.5;\n}\n\n.nav-btn:hover:not(:disabled),\n.page-num:hover:not(.active) {\n  background-color: #f8f9fa;\n  border-color: #999;\n}\n\n.quiz-table {\n  width: 100%;\n  border-collapse: collapse;\n  border-top: 2px solid #333;\n  table-layout: fixed;\n}\n\n.quiz-table th,\n.quiz-table td {\n  padding: 12px 15px;\n  border-bottom: 1px solid #ddd;\n  height: 52px;\n  box-sizing: border-box;\n}\n\n.empty-row td {\n  border-bottom: 1px solid #ddd;\n  height: 52px; /* 빈 행의 높이를 일정하게 */\n}\n\n.quiz-table th {\n  background-color: #f8f9fa;\n  font-weight: bold;\n  color: #333;\n  text-align: center;\n}\n\n.quiz-table td.title {\n  text-align: left;\n  width: 50%;\n}\n\n.quiz-table tr:hover {\n  background-color: #f8f9fa;\n}\n\n.category-badge,\n.level-badge {\n  display: inline-block;\n  padding: 2px 8px;\n  border-radius: 12px;\n  font-size: 12px;\n  white-space: nowrap;\n}\n\n.category-badge {\n  background-color: #e9ecef;\n}\n\n.level-badge {\n  background-color: #dee2e6;\n}\n\n.quiz-board h2 {\n  margin-bottom: 15px;\n  font-size: 24px;\n  color: #333;\n}\n\n/* 각 셀 정렬 스일 */\n.id-cell {\n  text-align: center;\n}\n\n.title-cell {\n  text-align: left;\n  padding-left: 20px;\n  cursor: pointer; /* 커서 모양을 포인터로 변경 */\n  transition: background-color 0.2s; /* 부드러운 전환 효과 */\n}\n\n\n.title-cell:active {\n  background-color: #e0e0e0; /* 클릭 시 배경색 변경 */\n}\n\n.title-wrapper {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  width: 100%;\n}\n\n.title-text {\n  flex: 1;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  margin-right: 10px;\n  color: #2c3e50; /* 링크처럼 보이는 색상 */\n}\n\n.title-cell:hover .title-text {\n  color: #1a73e8; /* 호버 시 텍스트 색상 변경 */\n  text-decoration: underline; /* 호버 시 밑줄 추가 */\n}\n\n.badges {\n  display: flex;\n  gap: 5px;\n  flex-shrink: 0;\n}\n\n.author-cell {\n  text-align: center;\n}\n\n.date-cell {\n  text-align: center;\n}\n\n.table-container {\n  margin: 20px 0;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n}\n\n.search-area {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n  margin-top: 30px;\n  width: 100%;\n}\n\n.search-container {\n  display: flex;\n  gap: 12px;\n  align-items: center;\n  height: 40px;\n}\n\n.search-select {\n  width: 100px;\n  height: 40px;\n  padding: 0 10px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  font-size: 14px;\n  background-color: white;\n  flex-shrink: 0;\n  cursor: pointer;\n}\n\n.search-input {\n  width: 500px;\n  height: 40px;\n  padding: 0 10px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  font-size: 14px;\n  flex-shrink: 0;\n}\n\n.search-button {\n  width: 80px;\n  height: 40px;\n  padding: 0;\n  background-color: rgba(0, 0, 0, 0.865);\n  color: white;\n  border: none;\n  border-radius: 4px;\n  font-size: 14px;\n  cursor: pointer;\n  flex-shrink: 0;\n}\n\n.search-button:hover {\n  background-color: #020906b3;\n}\n\n.search-select:focus,\n.search-input:focus {\n  outline: none;\n  border-color: rgba(0, 0, 0, 0.865);\n}\n\n/* 반응형 처리 */\n@media (max-width: 768px) {\n  .search-area {\n    flex-direction: column;\n    gap: 12px;\n  }\n\n  .search-container {\n    flex-direction: column;\n    height: auto;\n    gap: 8px;\n    width: 100%;\n  }\n  \n  .search-select,\n  .search-input,\n  .search-button {\n    width: 100%;\n  }\n\n  .total-count {\n    text-align: left;\n    width: 100%;\n  }\n}\n\n@media (max-height: 900px) {\n  .quiz-board {\n    min-height: calc(100vh - 180px);\n  }\n}\n\n/* 기 스타일에 가 */\n.quiz-table th:nth-child(1) {\n  width: 10%;\n}\n\n.quiz-table th:nth-child(2) {\n  width: 50%;\n}\n\n.quiz-table th:nth-child(3) {\n  width: 20%;\n}\n\n.quiz-table th:nth-child(4) {\n  width: 20%;\n}\n\n.bookmark-cell {\n  text-align: center;\n  width: 5%;\n}\n\n.bookmark-icon {\n  width: 20px;\n  height: 20px;\n  cursor: pointer;\n}\n\n.bookmark-icon:hover {\n  opacity: 0.5;\n}\n\n.bookmark-icon.bookmarked {\n  opacity: 1;\n  filter: invert(28%) sepia(67%) saturate(669%) hue-rotate(346deg) brightness(89%) contrast(83%);\n}\n\n\n/* 테이블 열 너비 수정 */\n.quiz-table th:nth-child(1) { width: 5%; }\n.quiz-table th:nth-child(2) { width: 8%; }\n.quiz-table th:nth-child(3) { width: 47%; }\n.quiz-table th:nth-child(4) { width: 20%; }\n.quiz-table th:nth-child(5) { width: 20%; }\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}