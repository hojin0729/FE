{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelSelect as _vModelSelect, withDirectives as _withDirectives, vModelText as _vModelText, withKeys as _withKeys, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, createStaticVNode as _createStaticVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"quiz-board-page\"\n};\nconst _hoisted_2 = {\n  class: \"content\"\n};\nconst _hoisted_3 = {\n  class: \"quiz-board\"\n};\nconst _hoisted_4 = {\n  class: \"search-area\"\n};\nconst _hoisted_5 = {\n  class: \"total-count\"\n};\nconst _hoisted_6 = {\n  class: \"search-container\"\n};\nconst _hoisted_7 = {\n  class: \"table-container\"\n};\nconst _hoisted_8 = {\n  class: \"quiz-table\"\n};\nconst _hoisted_9 = {\n  key: 0\n};\nconst _hoisted_10 = {\n  class: \"id-cell\"\n};\nconst _hoisted_11 = [\"onClick\"];\nconst _hoisted_12 = {\n  class: \"title-wrapper\"\n};\nconst _hoisted_13 = {\n  class: \"title-text\"\n};\nconst _hoisted_14 = {\n  class: \"badges\"\n};\nconst _hoisted_15 = {\n  class: \"category-badge\"\n};\nconst _hoisted_16 = {\n  class: \"level-badge\"\n};\nconst _hoisted_17 = {\n  class: \"author-cell\"\n};\nconst _hoisted_18 = {\n  class: \"date-cell\"\n};\nconst _hoisted_19 = {\n  key: 1,\n  class: \"empty-row\"\n};\nconst _hoisted_20 = {\n  class: \"pagination-container\"\n};\nconst _hoisted_21 = {\n  class: \"pagination\"\n};\nconst _hoisted_22 = {\n  class: \"pagination-wrapper\"\n};\nconst _hoisted_23 = {\n  class: \"pagination-buttons\"\n};\nconst _hoisted_24 = [\"disabled\"];\nconst _hoisted_25 = {\n  class: \"page-numbers\"\n};\nconst _hoisted_26 = [\"onClick\"];\nconst _hoisted_27 = [\"disabled\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_AppHeader = _resolveComponent(\"AppHeader\");\n  const _component_AppFooter = _resolveComponent(\"AppFooter\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_AppHeader), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, \"전체 \" + _toDisplayString($options.filteredList.length) + \"건\", 1), _createElementVNode(\"div\", _hoisted_6, [_withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.searchType = $event),\n    class: \"search-select\"\n  }, _cache[7] || (_cache[7] = [_createStaticVNode(\"<option value=\\\"all\\\" data-v-1f28f03f>전체</option><option value=\\\"title\\\" data-v-1f28f03f>제목</option><option value=\\\"category\\\" data-v-1f28f03f>카테고리</option><option value=\\\"level\\\" data-v-1f28f03f>난이도</option><option value=\\\"author\\\" data-v-1f28f03f>작성자</option>\", 5)]), 512), [[_vModelSelect, $data.searchType]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.searchKeyword = $event),\n    class: \"search-input\",\n    placeholder: \"검색어를 입력하세요\",\n    onKeyup: _cache[2] || (_cache[2] = _withKeys((...args) => $options.handleSearch && $options.handleSearch(...args), [\"enter\"]))\n  }, null, 544), [[_vModelText, $data.searchKeyword]]), _createElementVNode(\"button\", {\n    class: \"search-button\",\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.handleSearch && $options.handleSearch(...args))\n  }, \"검색\")])]), _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"table\", _hoisted_8, [_cache[9] || (_cache[9] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", {\n    width: \"10%\"\n  }, \"번호\"), _createElementVNode(\"th\", {\n    width: \"50%\"\n  }, \"제목\"), _createElementVNode(\"th\", {\n    width: \"20%\"\n  }, \"작성자\"), _createElementVNode(\"th\", {\n    width: \"20%\"\n  }, \"작성일\")])], -1)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.itemsPerPage, i => {\n    return _openBlock(), _createElementBlock(_Fragment, {\n      key: i\n    }, [$options.paginatedQuizList[i - 1] ? (_openBlock(), _createElementBlock(\"tr\", _hoisted_9, [_createElementVNode(\"td\", _hoisted_10, _toDisplayString($options.paginatedQuizList[i - 1].quizId), 1), _createElementVNode(\"td\", {\n      class: \"title-cell\",\n      onClick: $event => $options.goToQuizDetail($options.paginatedQuizList[i - 1].quizId)\n    }, [_createElementVNode(\"div\", _hoisted_12, [_createElementVNode(\"span\", _hoisted_13, _toDisplayString($options.paginatedQuizList[i - 1].quizTitle), 1), _createElementVNode(\"span\", _hoisted_14, [_createElementVNode(\"span\", _hoisted_15, _toDisplayString($options.paginatedQuizList[i - 1].quizCategory), 1), _createElementVNode(\"span\", _hoisted_16, _toDisplayString($options.paginatedQuizList[i - 1].quizLevel), 1)])])], 8, _hoisted_11), _createElementVNode(\"td\", _hoisted_17, _toDisplayString($options.paginatedQuizList[i - 1].nickname), 1), _createElementVNode(\"td\", _hoisted_18, _toDisplayString($options.formatDate($options.paginatedQuizList[i - 1].createdAt)), 1)])) : (_openBlock(), _createElementBlock(\"tr\", _hoisted_19, _cache[8] || (_cache[8] = [_createElementVNode(\"td\", {\n      colspan: \"4\"\n    }, \" \", -1)])))], 64);\n  }), 128))])]), _createElementVNode(\"div\", _hoisted_20, [_createElementVNode(\"div\", _hoisted_21, [_createElementVNode(\"div\", _hoisted_22, [_createElementVNode(\"div\", _hoisted_23, [_createElementVNode(\"button\", {\n    class: \"nav-btn prev\",\n    onClick: _cache[4] || (_cache[4] = (...args) => $options.prevPage && $options.prevPage(...args)),\n    disabled: $data.currentPage === 1\n  }, \" < \", 8, _hoisted_24), _createElementVNode(\"div\", _hoisted_25, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.getDisplayedPages(), pageNum => {\n    return _openBlock(), _createElementBlock(\"button\", {\n      key: pageNum,\n      class: _normalizeClass(['page-num', {\n        active: $data.currentPage === pageNum\n      }]),\n      onClick: $event => $options.goToPage(pageNum)\n    }, _toDisplayString(pageNum), 11, _hoisted_26);\n  }), 128))]), _createElementVNode(\"button\", {\n    class: \"nav-btn next\",\n    onClick: _cache[5] || (_cache[5] = (...args) => $options.nextPage && $options.nextPage(...args)),\n    disabled: $data.currentPage === $options.totalPages\n  }, \" > \", 8, _hoisted_27)])])]), _createElementVNode(\"button\", {\n    class: \"create-quiz-button search-button\",\n    onClick: _cache[6] || (_cache[6] = (...args) => $options.createQuiz && $options.createQuiz(...args))\n  }, \"퀴즈 생성\")])])])]), _createVNode(_component_AppFooter)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createVNode","_component_AppHeader","_createElementVNode","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_toDisplayString","$options","filteredList","length","_hoisted_6","_cache","$event","$data","searchType","_createStaticVNode","type","searchKeyword","placeholder","onKeyup","_withKeys","args","handleSearch","onClick","_hoisted_7","_hoisted_8","width","_Fragment","_renderList","itemsPerPage","i","paginatedQuizList","_hoisted_9","_hoisted_10","quizId","goToQuizDetail","_hoisted_12","_hoisted_13","quizTitle","_hoisted_14","_hoisted_15","quizCategory","_hoisted_16","quizLevel","_hoisted_11","_hoisted_17","nickname","_hoisted_18","formatDate","createdAt","_hoisted_19","colspan","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","prevPage","disabled","currentPage","_hoisted_24","_hoisted_25","getDisplayedPages","pageNum","_normalizeClass","active","goToPage","_hoisted_26","nextPage","totalPages","_hoisted_27","createQuiz","_component_AppFooter"],"sources":["/home/runner/work/FE/FE/src/components/QuizBoard.vue"],"sourcesContent":["<template>\n  <div class=\"quiz-board-page\">\n    <AppHeader />\n    <div class=\"content\">\n      <div class=\"quiz-board\">\n        <div class=\"search-area\">\n          <div class=\"total-count\">전체 {{ filteredList.length }}건</div>\n          <div class=\"search-container\">\n            <select v-model=\"searchType\" class=\"search-select\">\n              <option value=\"all\">전체</option>\n              <option value=\"title\">제목</option>\n              <option value=\"category\">카테고리</option>\n              <option value=\"level\">난이도</option>\n              <option value=\"author\">작성자</option>\n            </select>\n            <input \n              type=\"text\" \n              v-model=\"searchKeyword\" \n              class=\"search-input\" \n              placeholder=\"검색어를 입력하세요\"\n              @keyup.enter=\"handleSearch\"\n            >\n            <button class=\"search-button\" @click=\"handleSearch\">검색</button>\n          </div>\n        </div>\n        <div class=\"table-container\">\n          <table class=\"quiz-table\">\n            <thead>\n              <tr>\n                <th width=\"10%\">번호</th>\n                <th width=\"50%\">제목</th>\n                <th width=\"20%\">작성자</th>\n                <th width=\"20%\">작성일</th>\n              </tr>\n            </thead>\n            <tbody>\n              <template v-for=\"i in itemsPerPage\" :key=\"i\">\n                <tr v-if=\"paginatedQuizList[i-1]\">\n                  <td class=\"id-cell\">{{ paginatedQuizList[i-1].quizId }}</td>\n                  <td class=\"title-cell\" @click=\"goToQuizDetail(paginatedQuizList[i-1].quizId)\">\n                    <div class=\"title-wrapper\">\n                      <span class=\"title-text\">{{ paginatedQuizList[i-1].quizTitle }}</span>\n                      <span class=\"badges\">\n                        <span class=\"category-badge\">{{ paginatedQuizList[i-1].quizCategory }}</span>\n                        <span class=\"level-badge\">{{ paginatedQuizList[i-1].quizLevel }}</span>\n                      </span>\n                    </div>\n                  </td>\n                  <td class=\"author-cell\">{{ paginatedQuizList[i-1].nickname }}</td>\n                  <td class=\"date-cell\">{{ formatDate(paginatedQuizList[i-1].createdAt) }}</td>\n                </tr>\n                <tr v-else class=\"empty-row\">\n                  <td colspan=\"4\">&nbsp;</td>\n                </tr>\n              </template>\n            </tbody>\n          </table>\n          <div class=\"pagination-container\">\n            <div class=\"pagination\">\n              <div class=\"pagination-wrapper\">\n                <div class=\"pagination-buttons\">\n                  <button class=\"nav-btn prev\" @click=\"prevPage\" :disabled=\"currentPage === 1\">\n                    &lt;\n                  </button>\n                  <div class=\"page-numbers\">\n                    <button \n                      v-for=\"pageNum in getDisplayedPages()\" \n                      :key=\"pageNum\"\n                      :class=\"['page-num', { active: currentPage === pageNum }]\"\n                      @click=\"goToPage(pageNum)\"\n                    >\n                      {{ pageNum }}\n                    </button>\n                  </div>\n                  <button class=\"nav-btn next\" @click=\"nextPage\" :disabled=\"currentPage === totalPages\">\n                    &gt;\n                  </button>\n                </div>\n              </div>\n            </div>\n            <button class=\"create-quiz-button search-button\" @click=\"createQuiz\">퀴즈 생성</button>\n          </div>\n        </div>\n      </div>\n    </div>\n    <AppFooter />\n  </div>\n</template>\n\n<script>\nimport AppHeader from \"./Header.vue\";\nimport AppFooter from \"./Footer.vue\";\nimport axios from \"axios\";\n\nexport default {\n  name: \"HomePage\",\n  components: {\n    AppHeader,\n    AppFooter,\n  },\n  data() {\n    return {\n      quizList: [],\n      currentPage: 1,\n      itemsPerPage: 10,\n      searchType: 'all',\n      searchKeyword: '',\n    };\n  },\n  computed: {\n    filteredList() {\n      if (!this.searchKeyword) return this.quizList;\n      \n      return this.quizList.filter(quiz => {\n        const keyword = this.searchKeyword.toLowerCase();\n        switch (this.searchType) {\n          case 'title':\n            return quiz.quizTitle.toLowerCase().includes(keyword);\n          case 'category':\n            return quiz.quizCategory.toLowerCase().includes(keyword);\n          case 'level':\n            return quiz.quizLevel.toLowerCase().includes(keyword);\n          case 'author':\n            return quiz.nickname.toLowerCase().includes(keyword);\n          case 'all':\n            return quiz.quizTitle.toLowerCase().includes(keyword) ||\n                   quiz.quizCategory.toLowerCase().includes(keyword) ||\n                   quiz.quizLevel.toLowerCase().includes(keyword) ||\n                   quiz.nickname.toLowerCase().includes(keyword);\n          default:\n            return true;\n        }\n      });\n    },\n    paginatedQuizList() {\n      const start = (this.currentPage - 1) * this.itemsPerPage;\n      const end = start + this.itemsPerPage;\n      return this.filteredList.slice(start, end);\n    },\n    totalPages() {\n      return Math.ceil(this.filteredList.length / this.itemsPerPage);\n    },\n  },\n  methods: {\n    nextPage() {\n      if (this.currentPage < this.totalPages) {\n        this.currentPage++;\n      }\n    },\n    prevPage() {\n      if (this.currentPage > 1) {\n        this.currentPage--;\n      }\n    },\n    async fetchQuizList() {\n      const token = localStorage.getItem(\"jwtToken\");\n      if (!token) {\n        console.error(\"Token is missing\");\n        return;\n      }\n\n      try {\n        const beUrl = process.env.VUE_APP_BE_API_URL;\n        const response = await axios.get(beUrl + \"/api/v1/quizs/all\", {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        });\n\n        // 각 퀴즈에 대해 `memberId`를 이용해 `memberNickname` 가져오기\n        const quizzesWithNickname = await Promise.all(\n          response.data.map(async (quiz) => {\n            const createdAt = quiz.createdAt || new Date().toISOString();\n\n            // `memberId`가 있을 경우 닉네임 조회\n            let nickname = '알 수 없음';\n            if (quiz.memberId) {\n              try {\n                const nicknameResponse = await axios.get(\n                  `${beUrl}/api/v1/members/${quiz.memberId}/nickname`,\n                  {\n                    headers: {\n                      Authorization: `Bearer ${token}`,\n                    },\n                  }\n                );\n                nickname = nicknameResponse.data || '알 수 없음';\n              } catch (error) {\n                console.error(\"닉네임 조회 실패:\", error);\n              }\n            }\n\n            return {\n              quizId: quiz.quizId,\n              quizCategory: quiz.quizCategory,\n              quizTitle: quiz.quizTitle,\n              quizLevel: quiz.quizLevel,\n              nickname: nickname, // 조회한 닉네임을 설정\n              createdAt: createdAt,\n              views: quiz.count || 0\n            };\n          })\n        );\n\n        this.quizList = quizzesWithNickname.sort((a, b) => b.quizId - a.quizId); // ID 기준 내림차순 정렬\n      } catch (error) {\n        console.error(\"퀴즈 목록 조회 실패:\", error);\n        alert(\"퀴즈 목록을 불러오는 데 실패했습니다.\");\n      }\n    },\n    goToFirstPage() {\n      this.currentPage = 1;\n    },\n    goToLastPage() {\n      this.currentPage = this.totalPages;\n    },\n    goToPage(pageNum) {\n      this.currentPage = pageNum;\n    },\n    formatDate(dateString) {\n      if (!dateString) return '';\n      const date = new Date(dateString);\n      return date.toLocaleDateString('ko-KR', {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit'\n      }).replace(/\\. /g, '-').replace('.', '');\n    },\n    getDisplayedPages() {\n      const totalPages = this.totalPages;\n      const current = this.currentPage;\n      \n      // 항상 5개의 페이지를 보여주되, 위치 고정\n      if (totalPages <= 5) {\n        return Array.from({ length: totalPages }, (_, i) => i + 1);\n      }\n      \n      if (current <= 3) {\n        return [1, 2, 3, 4, 5];\n      }\n      \n      if (current >= totalPages - 2) {\n        return [\n          totalPages - 4,\n          totalPages - 3,\n          totalPages - 2,\n          totalPages - 1,\n          totalPages\n        ];\n      }\n      \n      return [current - 2, current - 1, current, current + 1, current + 2];\n    },\n    handleSearch() {\n      this.currentPage = 1; // 검색 시 첫 페이지로 이동\n    },\n    createQuiz() {\n      this.$router.push('/quizform');  // router/index.js에 정의된 경로로 이동\n    },\n    goToQuizDetail(quizId) {\n      this.$router.push(`/quiz/${quizId}`);\n    }\n  },\n  watch: {\n    searchType() {\n      this.currentPage = 1; // 검색 타입 변경 시 첫 페이지로 이동\n    }\n  },\n  async mounted() {\n    const token = localStorage.getItem(\"jwtToken\");\n\n    if (!token) {\n      console.error(\"로그인이 필요합니다.\");\n      this.$router.push(\"/login\");\n      return;\n    }\n\n    await this.fetchQuizList();\n  },\n};\n</script>\n\n<style scoped>\n.home-page {\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n  background-color: #fff;\n}\n\n.total-count{\n  text-align: right;\n  margin-top: 10px;\n}\n\n.content {\n  flex: 1;\n  padding: 20px;\n  max-width: 1200px;\n  margin: 0 auto;\n  width: 100%;\n  padding-top: 80px;\n  padding-bottom: 40px;\n}\n\n.quiz-board {\n  background-color: white;\n  border-radius: 8px;\n  padding: 20px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  min-height: calc(100vh - 200px); /* 화면 높이에서 헤더/푸터 높이를 뺀 값 */\n}\n\n\n.pagination-container {\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 15px 0;\n  margin-top: auto;\n  width: 100%;\n}\n\n.pagination {\n  position: absolute;\n  left: 50%;\n  transform: translateX(-50%);\n}\n\n.pagination-wrapper {\n  display: flex;\n  align-items: center;\n}\n\n.pagination-buttons {\n  display: flex;\n  align-items: center;\n  gap: 5px;\n}\n\n.create-quiz-button {\n  margin-left: auto;\n}\n\n.page-numbers {\n  display: flex;\n  gap: 5px;\n  margin: 0 5px;\n  min-width: 170px;\n  justify-content: center;\n}\n\n.page-num,\n.nav-btn {\n  min-width: 30px;\n  height: 30px;\n  border: 1px solid #ddd;\n  background-color: white;\n  color: #333;\n  font-size: 14px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0;\n  margin: 0;\n}\n\n.page-num.active {\n  background-color: rgba(0, 0, 0, 0.865);\n  color: white;\n  border-color: rgba(0, 0, 0, 0.865);\n}\n\n.nav-btn:disabled {\n  cursor: not-allowed;\n  opacity: 0.5;\n}\n\n.nav-btn:hover:not(:disabled),\n.page-num:hover:not(.active) {\n  background-color: #f8f9fa;\n  border-color: #999;\n}\n\n.quiz-table {\n  width: 100%;\n  border-collapse: collapse;\n  border-top: 2px solid #333;\n  table-layout: fixed;\n}\n\n.quiz-table th,\n.quiz-table td {\n  padding: 12px 15px;\n  border-bottom: 1px solid #ddd;\n  height: 52px;\n  box-sizing: border-box;\n}\n\n.empty-row td {\n  border-bottom: 1px solid #ddd;\n  height: 52px; /* 빈 행의 높이를 일정하게 */\n}\n\n.quiz-table th {\n  background-color: #f8f9fa;\n  font-weight: bold;\n  color: #333;\n  text-align: center;\n}\n\n.quiz-table td.title {\n  text-align: left;\n  width: 50%;\n}\n\n.quiz-table tr:hover {\n  background-color: #f8f9fa;\n}\n\n.category-badge,\n.level-badge {\n  display: inline-block;\n  padding: 2px 8px;\n  border-radius: 12px;\n  font-size: 12px;\n  white-space: nowrap;\n}\n\n.category-badge {\n  background-color: #e9ecef;\n}\n\n.level-badge {\n  background-color: #dee2e6;\n}\n\n.quiz-board h2 {\n  margin-bottom: 15px;\n  font-size: 24px;\n  color: #333;\n}\n\n/* 각 셀 정렬 스일 */\n.id-cell {\n  text-align: center;\n}\n\n.title-cell {\n  text-align: left;\n  padding-left: 20px;\n  cursor: pointer; /* 커서 모양을 포인터로 변경 */\n  transition: background-color 0.2s; /* 부드러운 전환 효과 */\n}\n\n\n.title-cell:active {\n  background-color: #e0e0e0; /* 클릭 시 배경색 변경 */\n}\n\n.title-wrapper {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  width: 100%;\n}\n\n.title-text {\n  flex: 1;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  margin-right: 10px;\n  color: #2c3e50; /* 링크처럼 보이는 색상 */\n}\n\n.title-cell:hover .title-text {\n  color: #1a73e8; /* 호버 시 텍스트 색상 변경 */\n  text-decoration: underline; /* 호버 시 밑줄 추가 */\n}\n\n.badges {\n  display: flex;\n  gap: 5px;\n  flex-shrink: 0;\n}\n\n.author-cell {\n  text-align: center;\n}\n\n.date-cell {\n  text-align: center;\n}\n\n.total-count {\n  color: #666;\n  font-size: 14px;\n  margin-bottom: 0;\n}\n\n.table-container {\n  margin: 20px 0;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n}\n\n.search-area {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n  margin-top: 30px;\n  width: 100%;\n}\n\n.search-container {\n  display: flex;\n  gap: 12px;\n  align-items: center;\n  height: 40px;\n}\n\n.search-select {\n  width: 100px;\n  height: 40px;\n  padding: 0 10px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  font-size: 14px;\n  background-color: white;\n  flex-shrink: 0;\n  cursor: pointer;\n}\n\n.search-input {\n  width: 500px;\n  height: 40px;\n  padding: 0 10px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  font-size: 14px;\n  flex-shrink: 0;\n}\n\n.search-button {\n  width: 80px;\n  height: 40px;\n  padding: 0;\n  background-color: rgba(0, 0, 0, 0.865);\n  color: white;\n  border: none;\n  border-radius: 4px;\n  font-size: 14px;\n  cursor: pointer;\n  flex-shrink: 0;\n}\n\n.search-button:hover {\n  background-color: #020906b3;\n}\n\n.search-select:focus,\n.search-input:focus {\n  outline: none;\n  border-color: rgba(0, 0, 0, 0.865);\n}\n\n/* 반응형 처리 */\n@media (max-width: 768px) {\n  .search-area {\n    flex-direction: column;\n    gap: 12px;\n  }\n\n  .search-container {\n    flex-direction: column;\n    height: auto;\n    gap: 8px;\n    width: 100%;\n  }\n  \n  .search-select,\n  .search-input,\n  .search-button {\n    width: 100%;\n  }\n\n  .total-count {\n    text-align: left;\n    width: 100%;\n  }\n}\n\n@media (max-height: 900px) {\n  .quiz-board {\n    min-height: calc(100vh - 180px);\n  }\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}