{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"scroll-container\"\n};\nconst _hoisted_2 = {\n  class: \"article-detail-page\"\n};\nconst _hoisted_3 = {\n  class: \"content\"\n};\nconst _hoisted_4 = {\n  class: \"article-container\"\n};\nconst _hoisted_5 = {\n  class: \"article-header\"\n};\nconst _hoisted_6 = {\n  class: \"article-title\"\n};\nconst _hoisted_7 = {\n  class: \"article-info\"\n};\nconst _hoisted_8 = {\n  class: \"author\"\n};\nconst _hoisted_9 = {\n  class: \"date\"\n};\nconst _hoisted_10 = {\n  class: \"article-content\"\n};\nconst _hoisted_11 = {\n  class: \"comments-section\"\n};\nconst _hoisted_12 = {\n  class: \"comment-form\"\n};\nconst _hoisted_13 = {\n  class: \"comment-form-footer\"\n};\nconst _hoisted_14 = {\n  class: \"char-count\"\n};\nconst _hoisted_15 = {\n  class: \"comments-list\"\n};\nconst _hoisted_16 = {\n  class: \"comment-header\"\n};\nconst _hoisted_17 = {\n  class: \"comment-left\"\n};\nconst _hoisted_18 = {\n  class: \"comment-author\"\n};\nconst _hoisted_19 = {\n  class: \"comment-right\"\n};\nconst _hoisted_20 = {\n  class: \"comment-date\"\n};\nconst _hoisted_21 = {\n  key: 0,\n  class: \"edited-mark\"\n};\nconst _hoisted_22 = {\n  key: 0,\n  class: \"comment-actions\"\n};\nconst _hoisted_23 = [\"onClick\"];\nconst _hoisted_24 = [\"onClick\"];\nconst _hoisted_25 = {\n  key: 0,\n  class: \"edit-form\"\n};\nconst _hoisted_26 = [\"onUpdate:modelValue\"];\nconst _hoisted_27 = {\n  class: \"edit-form-footer\"\n};\nconst _hoisted_28 = {\n  class: \"char-count\"\n};\nconst _hoisted_29 = {\n  class: \"edit-buttons\"\n};\nconst _hoisted_30 = [\"onClick\"];\nconst _hoisted_31 = [\"onClick\"];\nconst _hoisted_32 = {\n  key: 1,\n  class: \"comment-content\"\n};\nconst _hoisted_33 = {\n  class: \"button-group\"\n};\nconst _hoisted_34 = {\n  key: 0,\n  class: \"author-buttons\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_AppHeader = _resolveComponent(\"AppHeader\");\n  const _component_AppFooter = _resolveComponent(\"AppFooter\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_AppHeader), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"h1\", _hoisted_6, _toDisplayString(\"제목 : \" + $data.article.articleTitle), 1), _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"span\", _hoisted_8, \"작성자: \" + _toDisplayString($data.article.memberNickname), 1), _createElementVNode(\"span\", _hoisted_9, \"작성일: \" + _toDisplayString($options.formatDate($data.article.createdAt)), 1)])]), _createElementVNode(\"div\", _hoisted_10, _toDisplayString($data.article.articleContents), 1), _createElementVNode(\"div\", _hoisted_11, [_cache[5] || (_cache[5] = _createElementVNode(\"h3\", null, \"댓글\", -1)), _createElementVNode(\"div\", _hoisted_12, [_withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.newComment = $event),\n    placeholder: \"댓글을 작성해주세요\",\n    rows: \"3\",\n    maxlength: \"255\"\n  }, null, 512), [[_vModelText, $data.newComment]]), _createElementVNode(\"div\", _hoisted_13, [_createElementVNode(\"span\", _hoisted_14, _toDisplayString($data.newComment.length) + \"/255자\", 1), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.submitComment && $options.submitComment(...args)),\n    class: \"comment-submit\"\n  }, \"댓글 작성\")])]), _createElementVNode(\"div\", _hoisted_15, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.comments, comment => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: comment.articleCommentId,\n      class: \"comment\"\n    }, [_createElementVNode(\"div\", _hoisted_16, [_createElementVNode(\"div\", _hoisted_17, [_createElementVNode(\"span\", _hoisted_18, \"작성자: \" + _toDisplayString(comment.memberNickname), 1)]), _createElementVNode(\"div\", _hoisted_19, [_createElementVNode(\"span\", _hoisted_20, [_createTextVNode(_toDisplayString($options.formatDate(comment.articleCommentCreatedAt)) + \" \", 1), comment.articleCommentUpdatedAt ? (_openBlock(), _createElementBlock(\"span\", _hoisted_21, \"(수정됨)\")) : _createCommentVNode(\"\", true)]), $options.isCurrentUserComment(comment.memberNickname) ? (_openBlock(), _createElementBlock(\"div\", _hoisted_22, [!comment.isEditing ? (_openBlock(), _createElementBlock(\"button\", {\n      key: 0,\n      onClick: $event => $options.startEditing(comment),\n      class: \"edit-btn\"\n    }, \" 수정 \", 8, _hoisted_23)) : _createCommentVNode(\"\", true), _createElementVNode(\"button\", {\n      onClick: $event => $options.deleteComment(comment.articleCommentId),\n      class: \"delete-btn\"\n    }, \" 삭제 \", 8, _hoisted_24)])) : _createCommentVNode(\"\", true)])]), comment.isEditing ? (_openBlock(), _createElementBlock(\"div\", _hoisted_25, [_withDirectives(_createElementVNode(\"textarea\", {\n      \"onUpdate:modelValue\": $event => comment.editContent = $event,\n      rows: \"3\",\n      maxlength: \"255\"\n    }, null, 8, _hoisted_26), [[_vModelText, comment.editContent]]), _createElementVNode(\"div\", _hoisted_27, [_createElementVNode(\"span\", _hoisted_28, _toDisplayString(comment.editContent.length) + \"/255자\", 1), _createElementVNode(\"div\", _hoisted_29, [_createElementVNode(\"button\", {\n      onClick: $event => $options.saveEdit(comment),\n      class: \"save-btn\"\n    }, \"저장\", 8, _hoisted_30), _createElementVNode(\"button\", {\n      onClick: $event => $options.cancelEdit(comment),\n      class: \"cancel-btn\"\n    }, \"취소\", 8, _hoisted_31)])])])) : (_openBlock(), _createElementBlock(\"p\", _hoisted_32, _toDisplayString(comment.articleCommentContent), 1))]);\n  }), 128))])]), _createElementVNode(\"div\", _hoisted_33, [_createElementVNode(\"button\", {\n    class: \"list-button\",\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.goToList && $options.goToList(...args))\n  }, \"목록\"), $data.isAuthor ? (_openBlock(), _createElementBlock(\"div\", _hoisted_34, [_createElementVNode(\"button\", {\n    class: \"edit-button\",\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.editArticle && $options.editArticle(...args))\n  }, \"수정\"), _createElementVNode(\"button\", {\n    class: \"delete-button\",\n    onClick: _cache[4] || (_cache[4] = (...args) => $options.deleteArticle && $options.deleteArticle(...args))\n  }, \"삭제\")])) : _createCommentVNode(\"\", true)])])]), _createVNode(_component_AppFooter)])]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_createVNode","_component_AppHeader","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_toDisplayString","$data","article","articleTitle","_hoisted_7","_hoisted_8","memberNickname","_hoisted_9","$options","formatDate","createdAt","_hoisted_10","articleContents","_hoisted_11","_hoisted_12","_cache","$event","newComment","placeholder","rows","maxlength","_hoisted_13","_hoisted_14","length","onClick","args","submitComment","_hoisted_15","_Fragment","_renderList","comments","comment","articleCommentId","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_createTextVNode","articleCommentCreatedAt","articleCommentUpdatedAt","_hoisted_21","_createCommentVNode","isCurrentUserComment","_hoisted_22","isEditing","startEditing","_hoisted_23","deleteComment","_hoisted_24","_hoisted_25","editContent","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_29","saveEdit","_hoisted_30","cancelEdit","_hoisted_31","_hoisted_32","articleCommentContent","_hoisted_33","goToList","isAuthor","_hoisted_34","editArticle","deleteArticle","_component_AppFooter"],"sources":["/home/runner/work/FE/FE/src/components/ArticleDetail.vue"],"sourcesContent":["<template>\n  <div class=\"scroll-container\">\n    <div class=\"article-detail-page\">\n      <AppHeader />\n      <div class=\"content\">\n        <div class=\"article-container\">\n          <div class=\"article-header\">\n            <h1 class=\"article-title\">{{ \"제목 : \" + article.articleTitle }}</h1>\n            <div class=\"article-info\">\n              <span class=\"author\">작성자: {{ article.memberNickname }}</span>\n              <span class=\"date\">작성일: {{ formatDate(article.createdAt) }}</span>\n            </div>\n          </div>\n          <div class=\"article-content\">\n            {{ article.articleContents }}\n          </div>\n          <div class=\"comments-section\">\n            <h3>댓글</h3>\n            <div class=\"comment-form\">\n              <textarea \n                v-model=\"newComment\" \n                placeholder=\"댓글을 작성해주세요\"\n                rows=\"3\"\n                maxlength=\"255\"\n              ></textarea>\n              <div class=\"comment-form-footer\">\n                <span class=\"char-count\">{{ newComment.length }}/255자</span>\n                <button @click=\"submitComment\" class=\"comment-submit\">댓글 작성</button>\n              </div>\n            </div>\n            \n            <div class=\"comments-list\">\n              <div v-for=\"comment in comments\" :key=\"comment.articleCommentId\" class=\"comment\">\n                <div class=\"comment-header\">\n                  <div class=\"comment-left\">\n                    <span class=\"comment-author\">작성자: {{ comment.memberNickname }}</span>\n                  </div>\n                  <div class=\"comment-right\">\n                    <span class=\"comment-date\">\n                      {{ formatDate(comment.articleCommentCreatedAt) }}\n                      <span v-if=\"comment.articleCommentUpdatedAt\" class=\"edited-mark\">(수정됨)</span>\n                    </span>\n                    <div class=\"comment-actions\" v-if=\"isCurrentUserComment(comment.memberNickname)\">\n                      <button \n                        v-if=\"!comment.isEditing\" \n                        @click=\"startEditing(comment)\" \n                        class=\"edit-btn\"\n                      >\n                        수정\n                      </button>\n                      <button \n                        @click=\"deleteComment(comment.articleCommentId)\" \n                        class=\"delete-btn\"\n                      >\n                        삭제\n                      </button>\n                    </div>\n                  </div>\n                </div>\n                <div v-if=\"comment.isEditing\" class=\"edit-form\">\n                  <textarea \n                    v-model=\"comment.editContent\" \n                    rows=\"3\"\n                    maxlength=\"255\"\n                  ></textarea>\n                  <div class=\"edit-form-footer\">\n                    <span class=\"char-count\">{{ comment.editContent.length }}/255자</span>\n                    <div class=\"edit-buttons\">\n                      <button @click=\"saveEdit(comment)\" class=\"save-btn\">저장</button>\n                      <button @click=\"cancelEdit(comment)\" class=\"cancel-btn\">취소</button>\n                    </div>\n                  </div>\n                </div>\n                <p v-else class=\"comment-content\">{{ comment.articleCommentContent }}</p>\n              </div>\n            </div>\n          </div>\n          <div class=\"button-group\">\n            <button class=\"list-button\" @click=\"goToList\">목록</button>\n            <div v-if=\"isAuthor\" class=\"author-buttons\">\n              <button class=\"edit-button\" @click=\"editArticle\">수정</button>\n              <button class=\"delete-button\" @click=\"deleteArticle\">삭제</button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <AppFooter />\n    </div>\n  </div>\n</template>\n\n<script>\nimport AppHeader from \"./Header.vue\";\nimport AppFooter from \"./Footer.vue\";\nimport axios from \"axios\";\n\nexport default {\n  name: \"ArticleDetail\",\n  components: {\n    AppHeader,\n    AppFooter,\n  },\n  data() {\n    return {\n      article: {\n        articleId: null,\n        memberNickname: '',\n        articleTitle: '',\n        articleContents: '',\n        createdAt: null\n      },\n      isAuthor: false,\n      newComment: \"\",\n      currentUserNickname: '',\n      comments: []\n    };\n  },\n  methods: {\n    async fetchArticle() {\n      try {\n        const token = localStorage.getItem(\"jwtToken\");\n        const beUrl = process.env.VUE_APP_BE_API_URL;\n        const articleId = this.$route.params.id;\n        \n        const response = await axios.get(`${beUrl}/api/v1/articles/${articleId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          withCredentials: true\n        });\n        \n        this.article = response.data;\n        // 작성자 본인인지 확인하는 로직 추가 필요\n      } catch (error) {\n        console.error(\"Failed to fetch article:\", error);\n        alert(\"게시글을 불러오는데 실패했습니다.\");\n      }\n    },\n    formatDate(dateArray) {\n      if (!dateArray || !Array.isArray(dateArray)) return '';\n      \n      try {\n        const year = dateArray[0];\n        const month = String(dateArray[1]).padStart(2, '0');\n        const day = String(dateArray[2]).padStart(2, '0');\n        const hours = String(dateArray[3]).padStart(2, '0');\n        const minutes = String(dateArray[4]).padStart(2, '0');\n        \n        return `${year}-${month}-${day} ${hours}:${minutes}`;\n      } catch (error) {\n        console.error('Date formatting error:', error);\n        return '';\n      }\n    },\n    goToList() {\n      this.$router.push('/articles');\n    },\n    editArticle() {\n      this.$router.push(`/articles/${this.article.articleId}/edit`);\n    },\n    async deleteArticle() {\n      if (!confirm('정말로 삭제하시겠습니까?')) return;\n\n      try {\n        const token = localStorage.getItem(\"jwtToken\");\n        const beUrl = process.env.VUE_APP_BE_API_URL;\n        \n        await axios.delete(`${beUrl}/api/v1/articles/${this.article.articleId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          withCredentials: true\n        });\n        \n        alert('게시글이 삭제되었습니다.');\n        this.$router.push('/articles');\n      } catch (error) {\n        console.error(\"Failed to delete article:\", error);\n        alert(\"게시글 삭제에 실패했습니다.\");\n      }\n    },\n    isCurrentUserComment(commentNickname) {\n      return this.currentUserNickname === commentNickname;\n    },\n    async submitComment() {\n      if (!this.newComment.trim()) {\n        alert(\"댓글 내용을 입력해주세요.\");\n        return;\n      }\n\n      const token = localStorage.getItem(\"jwtToken\");\n      if (!token) {\n        alert(\"로그인이 필요합니다.\");\n        this.$router.push(\"/login\");\n        return;\n      }\n\n      try {\n        const beUrl = process.env.VUE_APP_BE_API_URL;\n        const articleId = this.$route.params.id;\n        \n        // ArticleCommentRequestDto 형식에 맞춰 데이터 전송\n        const commentData = {\n          articleId: parseInt(articleId),\n          articleCommentContent: this.newComment,\n          articleCommentCreatedAt: new Date().toISOString()\n        };\n\n        await axios.post(\n          `${beUrl}/api/v1/article-comments`,\n          commentData,\n          {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          }\n        );\n\n        // 댓글 작성 성공 후 댓글 목록 새로고침\n        this.newComment = \"\";\n        await this.fetchComments();\n      } catch (error) {\n        console.error(\"댓글 작성 실패:\", error);\n        alert(\"댓글 작성에 실패했습니다.\");\n      }\n    },\n    startEditing(comment) {\n      comment.isEditing = true;\n      comment.editContent = comment.articleCommentContent;\n    },\n    async saveEdit(comment) {\n      if (!comment.editContent.trim()) {\n        alert(\"댓글 내용을 력해주세요.\");\n        return;\n      }\n\n      const token = localStorage.getItem(\"jwtToken\");\n      if (!token) return;\n\n      try {\n        const beUrl = process.env.VUE_APP_BE_API_URL;\n        \n        await axios.patch(\n          `${beUrl}/api/v1/article-comments/${comment.articleCommentId}`,\n          {\n            articleCommentContent: comment.editContent\n          },\n          { headers: { Authorization: `Bearer ${token}` }}\n        );\n\n        comment.isEditing = false;\n        await this.fetchComments();\n      } catch (error) {\n        console.error(\"댓글 수정 실패:\", error);\n        alert(\"댓글 수정에 실패했습니다.\");\n      }\n    },\n    cancelEdit(comment) {\n      comment.isEditing = false;\n      comment.editContent = comment.articleCommentContent;\n    },\n    async deleteComment(commentId) {\n      if (!confirm(\"댓글을 삭제하시겠습니까?\")) return;\n\n      const token = localStorage.getItem(\"jwtToken\");\n      if (!token) return;\n\n      try {\n        const beUrl = process.env.VUE_APP_BE_API_URL;\n        \n        await axios.delete(`${beUrl}/api/v1/article-comments/${commentId}`, {\n          headers: { Authorization: `Bearer ${token}` }\n        });\n\n        await this.fetchComments();\n      } catch (error) {\n        console.error(\"댓글 삭제 실패:\", error);\n        alert(\"댓글 삭제에 실패했습니다.\");\n      }\n    },\n    async fetchComments() {\n      try {\n        const token = localStorage.getItem(\"jwtToken\");\n        const beUrl = process.env.VUE_APP_BE_API_URL;\n        const articleId = this.$route.params.id;\n        \n        const response = await axios.get(`${beUrl}/api/v1/article-comments`, {\n          params: { articleId },\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        \n        this.comments = response.data.map(comment => ({\n          ...comment,\n          isEditing: false,\n          editContent: comment.articleCommentContent\n        }));\n      } catch (error) {\n        console.error(\"댓글 조회 실패:\", error);\n      }\n    }\n  },\n  async mounted() {\n    this.currentUserNickname = localStorage.getItem(\"memberNickname\");\n    await this.fetchArticle();\n    await this.fetchComments();\n  }\n};\n</script>\n\n<style scoped>\n/* App.vue의 스타일을 오버라이드 */\n:deep(#app) {\n  position: relative !important;\n  overflow: auto !important;\n  height: auto !important;\n}\n\n.scroll-container {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  overflow-y: auto;\n  overflow-x: hidden;\n  z-index: 1;\n}\n\n.article-detail-page {\n  display: flex;\n  flex-direction: column;\n  min-height: 100%;\n  background-color: #fff;\n}\n\n.content {\n  flex: 1;\n  padding: 20px;\n  max-width: 1200px;\n  margin: 0 auto;\n  width: 100%;\n  padding-top: 120px;\n  padding-bottom: 120px;\n}\n\n.article-container {\n  background-color: white;\n  border-radius: 8px;\n  padding: 30px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.article-header {\n  border-bottom: 2px solid #333;\n  padding-bottom: 20px;\n  margin-bottom: 20px;\n}\n\n.article-title {\n  font-size: 24px;\n  margin-bottom: 15px;\n}\n\n.article-info {\n  display: flex;\n  justify-content: space-between;\n  color: #666;\n  font-size: 14px;\n}\n\n.article-content {\n  min-height: 300px;\n  line-height: 1.6;\n  white-space: pre-wrap;\n  padding: 20px 0;\n}\n\n.button-group {\n  display: flex;\n  justify-content: space-between;\n  margin-top: 30px;\n  padding-top: 20px;\n  border-top: 1px solid #ddd;\n}\n\n.author-buttons {\n  display: flex;\n  gap: 10px;\n}\n\n.list-button,\n.edit-button,\n.delete-button {\n  padding: 8px 20px;\n  border-radius: 4px;\n  font-size: 14px;\n  cursor: pointer;\n  border: none;\n}\n\n.list-button {\n  background-color: #f8f9fa;\n  border: 1px solid #ddd;\n}\n\n.edit-button {\n  background-color: #4CAF50;\n  color: white;\n}\n\n.delete-button {\n  background-color: #f44336;\n  color: white;\n}\n\nbutton:hover {\n  opacity: 0.9;\n}\n\n.comments-section {\n  margin-top: 40px;\n  border-top: 1px solid #ddd;\n  padding-top: 20px;\n}\n\n.comments-section h3 {\n  font-size: 18px;\n  margin-bottom: 20px;\n  color: #333;\n}\n\n.comment-form textarea {\n  width: 100%;\n  padding: 10px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  resize: vertical;\n  margin-bottom: 10px;\n}\n\n.comment-form-footer {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.comment-submit {\n  background-color: #4CAF50;\n  color: white;\n  padding: 10px 20px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.comment-submit:hover {\n  opacity: 0.9;\n}\n\n.comments-list {\n  margin-top: 20px;\n}\n\n.comment {\n  margin-bottom: 20px;\n  padding: 10px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n}\n\n.comment-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 10px;\n}\n\n.comment-left {\n  display: flex;\n  align-items: center;\n}\n\n.comment-right {\n  display: flex;\n  align-items: center;\n  gap: 15px;\n}\n\n.comment-author {\n  margin-right: 10px;\n}\n\n.comment-date {\n  display: flex;\n  align-items: center;\n  gap: 4px;\n}\n\n.comment-actions {\n  display: flex;\n  gap: 10px;\n}\n\n.edit-btn, .delete-btn {\n  background: none;\n  border: none;\n  cursor: pointer;\n  font-size: 12px;\n  padding: 4px 8px;\n  margin-left: 8px;\n}\n\n.edit-btn {\n  color: #666;\n}\n\n.delete-btn {\n  color: #dc3545;\n}\n\n.edit-btn:hover, .delete-btn:hover {\n  text-decoration: underline;\n}\n\n.edit-form {\n  margin-top: 10px;\n}\n\n.edit-form textarea {\n  width: 100%;\n  padding: 8px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  resize: vertical;\n}\n\n.edit-form-footer {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: 8px;\n}\n\n.save-btn, .cancel-btn {\n  padding: 4px 12px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 12px;\n}\n\n.save-btn {\n  background-color: rgba(0, 0, 0, 0.865);\n  color: white;\n}\n\n.cancel-btn {\n  background-color: #e9ecef;\n  color: #666;\n}\n\n.save-btn:hover {\n  background-color: #000;\n}\n\n.cancel-btn:hover {\n  background-color: #dee2e6;\n}\n\n.comment-content {\n  margin-top: 10px;\n}\n\n.edited-mark {\n  color: #666;\n  font-size: 12px;\n  margin-left: 4px;\n}\n</style> "],"mappings":";;EACOA,KAAK,EAAC;AAAkB;;EACtBA,KAAK,EAAC;AAAqB;;EAEzBA,KAAK,EAAC;AAAS;;EACbA,KAAK,EAAC;AAAmB;;EACvBA,KAAK,EAAC;AAAgB;;EACrBA,KAAK,EAAC;AAAe;;EACpBA,KAAK,EAAC;AAAc;;EACjBA,KAAK,EAAC;AAAQ;;EACdA,KAAK,EAAC;AAAM;;EAGjBA,KAAK,EAAC;AAAiB;;EAGvBA,KAAK,EAAC;AAAkB;;EAEtBA,KAAK,EAAC;AAAc;;EAOlBA,KAAK,EAAC;AAAqB;;EACxBA,KAAK,EAAC;AAAY;;EAKvBA,KAAK,EAAC;AAAe;;EAEjBA,KAAK,EAAC;AAAgB;;EACpBA,KAAK,EAAC;AAAc;;EACjBA,KAAK,EAAC;AAAgB;;EAEzBA,KAAK,EAAC;AAAe;;EAClBA,KAAK,EAAC;AAAc;;EAtC9CC,GAAA;EAwCmED,KAAK,EAAC;;;EAxCzEC,GAAA;EA0CyBD,KAAK,EAAC;;oBA1C/B;oBAAA;;EAAAC,GAAA;EA2D8CD,KAAK,EAAC;;oBA3DpD;;EAiEuBA,KAAK,EAAC;AAAkB;;EACrBA,KAAK,EAAC;AAAY;;EACnBA,KAAK,EAAC;AAAc;oBAnE7C;oBAAA;;EAAAC,GAAA;EAyE0BD,KAAK,EAAC;;;EAIjBA,KAAK,EAAC;AAAc;;EA7EnCC,GAAA;EA+EiCD,KAAK,EAAC;;;;;uBA9ErCE,mBAAA,CAuFM,OAvFNC,UAuFM,GAtFJC,mBAAA,CAqFM,OArFNC,UAqFM,GApFJC,YAAA,CAAaC,oBAAA,GACbH,mBAAA,CAiFM,OAjFNI,UAiFM,GAhFJJ,mBAAA,CA+EM,OA/ENK,UA+EM,GA9EJL,mBAAA,CAMM,OANNM,UAMM,GALJN,mBAAA,CAAmE,MAAnEO,UAAmE,EAAAC,gBAAA,WAA5BC,KAAA,CAAAC,OAAO,CAACC,YAAY,OAC3DX,mBAAA,CAGM,OAHNY,UAGM,GAFJZ,mBAAA,CAA6D,QAA7Da,UAA6D,EAAxC,OAAK,GAAAL,gBAAA,CAAGC,KAAA,CAAAC,OAAO,CAACI,cAAc,OACnDd,mBAAA,CAAkE,QAAlEe,UAAkE,EAA/C,OAAK,GAAAP,gBAAA,CAAGQ,QAAA,CAAAC,UAAU,CAACR,KAAA,CAAAC,OAAO,CAACQ,SAAS,O,KAG3DlB,mBAAA,CAEM,OAFNmB,WAEM,EAAAX,gBAAA,CADDC,KAAA,CAAAC,OAAO,CAACU,eAAe,OAE5BpB,mBAAA,CA4DM,OA5DNqB,WA4DM,G,0BA3DJrB,mBAAA,CAAW,YAAP,IAAE,QACNA,mBAAA,CAWM,OAXNsB,WAWM,G,gBAVJtB,mBAAA,CAKY;IAxB1B,uBAAAuB,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAoByBf,KAAA,CAAAgB,UAAU,GAAAD,MAAA;IACnBE,WAAW,EAAC,YAAY;IACxBC,IAAI,EAAC,GAAG;IACRC,SAAS,EAAC;gCAHDnB,KAAA,CAAAgB,UAAU,E,GAKrBzB,mBAAA,CAGM,OAHN6B,WAGM,GAFJ7B,mBAAA,CAA4D,QAA5D8B,WAA4D,EAAAtB,gBAAA,CAAhCC,KAAA,CAAAgB,UAAU,CAACM,MAAM,IAAG,OAAK,MACrD/B,mBAAA,CAAoE;IAA3DgC,OAAK,EAAAT,MAAA,QAAAA,MAAA,UAAAU,IAAA,KAAEjB,QAAA,CAAAkB,aAAA,IAAAlB,QAAA,CAAAkB,aAAA,IAAAD,IAAA,CAAa;IAAErC,KAAK,EAAC;KAAiB,OAAK,E,KAI/DI,mBAAA,CA4CM,OA5CNmC,WA4CM,I,kBA3CJrC,mBAAA,CA0CMsC,SAAA,QA1EpBC,WAAA,CAgCqC5B,KAAA,CAAA6B,QAAQ,EAAnBC,OAAO;yBAAnBzC,mBAAA,CA0CM;MA1C4BD,GAAG,EAAE0C,OAAO,CAACC,gBAAgB;MAAE5C,KAAK,EAAC;QACrEI,mBAAA,CAyBM,OAzBNyC,WAyBM,GAxBJzC,mBAAA,CAEM,OAFN0C,WAEM,GADJ1C,mBAAA,CAAqE,QAArE2C,WAAqE,EAAxC,OAAK,GAAAnC,gBAAA,CAAG+B,OAAO,CAACzB,cAAc,M,GAE7Dd,mBAAA,CAoBM,OApBN4C,WAoBM,GAnBJ5C,mBAAA,CAGO,QAHP6C,WAGO,GAzC3BC,gBAAA,CAAAtC,gBAAA,CAuCyBQ,QAAA,CAAAC,UAAU,CAACsB,OAAO,CAACQ,uBAAuB,KAAI,GACjD,MAAYR,OAAO,CAACS,uBAAuB,I,cAA3ClD,mBAAA,CAA6E,QAA7EmD,WAA6E,EAAZ,OAAK,KAxC5FC,mBAAA,W,GA0CuDlC,QAAA,CAAAmC,oBAAoB,CAACZ,OAAO,CAACzB,cAAc,K,cAA9EhB,mBAAA,CAcM,OAdNsD,WAcM,G,CAZKb,OAAO,CAACc,SAAS,I,cAD1BvD,mBAAA,CAMS;MAjD/BD,GAAA;MA6CyBmC,OAAK,EAAAR,MAAA,IAAER,QAAA,CAAAsC,YAAY,CAACf,OAAO;MAC5B3C,KAAK,EAAC;OACP,MAED,KAjDtB2D,WAAA,KAAAL,mBAAA,YAkDsBlD,mBAAA,CAKS;MAJNgC,OAAK,EAAAR,MAAA,IAAER,QAAA,CAAAwC,aAAa,CAACjB,OAAO,CAACC,gBAAgB;MAC9C5C,KAAK,EAAC;OACP,MAED,KAvDtB6D,WAAA,E,KAAAP,mBAAA,W,KA2D2BX,OAAO,CAACc,SAAS,I,cAA5BvD,mBAAA,CAaM,OAbN4D,WAaM,G,gBAZJ1D,mBAAA,CAIY;MAhE9B,uBAAAwB,MAAA,IA6D6Be,OAAO,CAACoB,WAAW,GAAAnC,MAAA;MAC5BG,IAAI,EAAC,GAAG;MACRC,SAAS,EAAC;gBA/D9BgC,WAAA,I,cA6D6BrB,OAAO,CAACoB,WAAW,E,GAI9B3D,mBAAA,CAMM,OANN6D,WAMM,GALJ7D,mBAAA,CAAqE,QAArE8D,WAAqE,EAAAtD,gBAAA,CAAzC+B,OAAO,CAACoB,WAAW,CAAC5B,MAAM,IAAG,OAAK,MAC9D/B,mBAAA,CAGM,OAHN+D,WAGM,GAFJ/D,mBAAA,CAA+D;MAAtDgC,OAAK,EAAAR,MAAA,IAAER,QAAA,CAAAgD,QAAQ,CAACzB,OAAO;MAAG3C,KAAK,EAAC;OAAW,IAAE,KApE5EqE,WAAA,GAqEsBjE,mBAAA,CAAmE;MAA1DgC,OAAK,EAAAR,MAAA,IAAER,QAAA,CAAAkD,UAAU,CAAC3B,OAAO;MAAG3C,KAAK,EAAC;OAAa,IAAE,KArEhFuE,WAAA,E,wBAyEgBrE,mBAAA,CAAyE,KAAzEsE,WAAyE,EAAA5D,gBAAA,CAApC+B,OAAO,CAAC8B,qBAAqB,O;iBAIxErE,mBAAA,CAMM,OANNsE,WAMM,GALJtE,mBAAA,CAAyD;IAAjDJ,KAAK,EAAC,aAAa;IAAEoC,OAAK,EAAAT,MAAA,QAAAA,MAAA,UAAAU,IAAA,KAAEjB,QAAA,CAAAuD,QAAA,IAAAvD,QAAA,CAAAuD,QAAA,IAAAtC,IAAA,CAAQ;KAAE,IAAE,GACrCxB,KAAA,CAAA+D,QAAQ,I,cAAnB1E,mBAAA,CAGM,OAHN2E,WAGM,GAFJzE,mBAAA,CAA4D;IAApDJ,KAAK,EAAC,aAAa;IAAEoC,OAAK,EAAAT,MAAA,QAAAA,MAAA,UAAAU,IAAA,KAAEjB,QAAA,CAAA0D,WAAA,IAAA1D,QAAA,CAAA0D,WAAA,IAAAzC,IAAA,CAAW;KAAE,IAAE,GACnDjC,mBAAA,CAAgE;IAAxDJ,KAAK,EAAC,eAAe;IAAEoC,OAAK,EAAAT,MAAA,QAAAA,MAAA,UAAAU,IAAA,KAAEjB,QAAA,CAAA2D,aAAA,IAAA3D,QAAA,CAAA2D,aAAA,IAAA1C,IAAA,CAAa;KAAE,IAAE,E,KAjFrEiB,mBAAA,W,OAsFMhD,YAAA,CAAa0E,oBAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}