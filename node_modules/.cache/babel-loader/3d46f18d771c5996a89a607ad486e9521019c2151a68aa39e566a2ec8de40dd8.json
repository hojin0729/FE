{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport AppHeader from \"./Header.vue\";\nimport AppFooter from \"./Footer.vue\";\nimport axios from 'axios';\nexport default {\n  name: 'MyPage',\n  components: {\n    AppHeader,\n    AppFooter\n  },\n  data() {\n    return {\n      games: [],\n      quizList: [],\n      showQuizModal: false,\n      currentGameId: null,\n      searchType: 'all',\n      searchKeyword: '',\n      selectedQuizzes: [],\n      showQuizListModalFlag: false,\n      currentGameQuizzes: [],\n      selectedCurrentQuizzes: [],\n      currentGame: null\n    };\n  },\n  computed: {\n    filteredQuizzes() {\n      if (!this.searchKeyword) return this.quizList;\n      const keyword = this.searchKeyword.toLowerCase();\n      return this.quizList.filter(quiz => {\n        switch (this.searchType) {\n          case 'title':\n            return quiz.quizTitle.toLowerCase().includes(keyword);\n          case 'category':\n            return quiz.quizCategory.toLowerCase().includes(keyword);\n          case 'level':\n            return quiz.quizLevel.toLowerCase().includes(keyword);\n          case 'all':\n            return quiz.quizTitle.toLowerCase().includes(keyword) || quiz.quizCategory.toLowerCase().includes(keyword) || quiz.quizLevel.toLowerCase().includes(keyword);\n          default:\n            return true;\n        }\n      });\n    },\n    selectAll: {\n      get() {\n        return this.filteredQuizzes.length === this.selectedQuizzes.length;\n      },\n      set(value) {\n        this.selectedQuizzes = value ? [...this.filteredQuizzes] : [];\n      }\n    },\n    selectAllCurrentQuizzes: {\n      get() {\n        return this.currentGameQuizzes.length === this.selectedCurrentQuizzes.length;\n      },\n      set(value) {\n        this.selectedCurrentQuizzes = value ? [...this.currentGameQuizzes] : [];\n      }\n    }\n  },\n  methods: {\n    // 내 게임 목록 조회\n    async fetchMyGames() {\n      const token = localStorage.getItem(\"jwtToken\");\n      try {\n        const response = await axios.get(`${process.env.VUE_APP_BE_API_URL}/api/v1/games`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        this.games = response.data;\n      } catch (error) {\n        console.error(\"게임 목록 조회 실패:\", error);\n      }\n    },\n    // 전체 퀴즈 목록 조회\n    async fetchQuizList() {\n      const token = localStorage.getItem(\"jwtToken\");\n      try {\n        const response = await axios.get(`${process.env.VUE_APP_BE_API_URL}/api/v1/quizs/all`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        this.quizList = response.data;\n      } catch (error) {\n        console.error(\"퀴즈 목록 조회 실패:\", error);\n      }\n    },\n    // 퀴즈 추가 모달 표시\n    async showAddQuizModal(game) {\n      this.currentGameId = game.gameId;\n      await this.fetchQuizList();\n      this.showQuizModal = true;\n    },\n    handleSearch() {\n      // 검색 시 필요한 로직 추가\n    },\n    // 퀴즈 선택 및 게임에 추가\n    async selectQuiz(quiz) {\n      if (!confirm(`\"${quiz.quizTitle}\" 퀴즈를 게임에 추가하시겠습니까?`)) return;\n      const token = localStorage.getItem(\"jwtToken\");\n      const memberId = Number(localStorage.getItem(\"memberId\"));\n      try {\n        const teacherQuizRequest = {\n          quizId: quiz.quizId,\n          gameId: this.currentGameId,\n          isStopped: 0\n        };\n        const teacherQuizResponse = await axios.post(`${process.env.VUE_APP_BE_API_URL}/api/v1/teacher-quizzes/member/${memberId}`, teacherQuizRequest, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (teacherQuizResponse.data) {\n          console.log('퀴즈가 성공적으로 저장되었습니다:', teacherQuizResponse.data);\n          await this.fetchMyGames();\n          this.closeQuizModal();\n        }\n      } catch (error) {\n        console.error(\"퀴즈 추가 실패:\", error);\n        alert(\"퀴즈 추가에 실패습니다.\");\n      }\n    },\n    // 게임에서 퀴즈 제거\n    async removeQuizFromGame(gameId, quizId) {\n      if (!confirm('이 퀴즈를 게임에서 제거하시겠습니까?')) return;\n      const token = localStorage.getItem(\"jwtToken\");\n      try {\n        await axios.delete(`${process.env.VUE_APP_BE_API_URL}/api/v1/games/${gameId}/quizzes/${quizId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        await this.fetchMyGames();\n        alert(\"퀴즈가 제거되었습니다.\");\n      } catch (error) {\n        console.error(\"퀴즈 제거 실패:\", error);\n        alert(\"퀴즈 제거에 실패했습니다.\");\n      }\n    },\n    toggleSelectAll() {\n      this.selectAll = !this.selectAll;\n    },\n    async addSelectedQuizzes() {\n      if (!this.selectedQuizzes.length) {\n        alert('선택된 퀴즈가 없습니다.');\n        return;\n      }\n      if (!confirm(`선택한 ${this.selectedQuizzes.length}개의 퀴즈를 추가하시겠습니까?`)) return;\n      const token = localStorage.getItem(\"jwtToken\");\n      const memberId = Number(localStorage.getItem(\"memberId\"));\n      try {\n        for (const quiz of this.selectedQuizzes) {\n          const teacherQuizRequest = {\n            quizId: quiz.quizId,\n            gameId: this.currentGameId,\n            isStopped: 0\n          };\n          await axios.post(`${process.env.VUE_APP_BE_API_URL}/api/v1/teacher-quizzes/member/${memberId}`, teacherQuizRequest, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n        }\n        await this.fetchMyGames();\n        this.closeQuizModal();\n        alert('선택한 퀴즈가 성공적으로 추가되었습니다.');\n      } catch (error) {\n        console.error(\"퀴즈 추가 실패:\", error);\n        alert(\"퀴즈 추가에 실패했습니다.\");\n      }\n    },\n    closeQuizModal() {\n      this.showQuizModal = false;\n      this.searchKeyword = '';\n      this.selectedQuizzes = []; // 모달 닫 때 선택 기화\n    },\n    toggleQuizSelection(quiz) {\n      const index = this.selectedQuizzes.findIndex(q => q.quizId === quiz.quizId);\n      if (index === -1) {\n        this.selectedQuizzes.push(quiz);\n      } else {\n        this.selectedQuizzes.splice(index, 1);\n      }\n    },\n    async showQuizListModal(game) {\n      const token = localStorage.getItem(\"jwtToken\");\n      const beUrl = process.env.VUE_APP_BE_API_URL;\n      try {\n        // TeacherQuiz 목록을 가져옴\n        const response = await axios.get(`${beUrl}/api/v1/teacher-quizzes/game/${game.gameId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n\n        // 각 TeacherQuiz에 대해 Quiz 정보와 닉네임을 가져옴\n        const quizzesWithDetails = await Promise.all(response.data.map(async teacherQuiz => {\n          try {\n            const quizResponse = await axios.get(`${beUrl}/api/v1/quizs/${teacherQuiz.quizId}`, {\n              headers: {\n                Authorization: `Bearer ${token}`\n              }\n            });\n\n            // memberId로 닉네임 조회\n            let nickname = '알 수 없음';\n            if (quizResponse.data.memberId) {\n              try {\n                const nicknameResponse = await axios.get(`${beUrl}/api/v1/members/${quizResponse.data.memberId}/nickname`, {\n                  headers: {\n                    Authorization: `Bearer ${token}`\n                  }\n                });\n                nickname = nicknameResponse.data || '알 수 없음';\n              } catch (error) {\n                console.error(\"닉네임 조회 실패:\", error);\n              }\n            }\n            return {\n              teacherQuizId: teacherQuiz.teacherQuizId,\n              quizId: teacherQuiz.quizId,\n              gameId: teacherQuiz.gameId,\n              isStopped: teacherQuiz.isStopped,\n              quizTitle: quizResponse.data.quizTitle,\n              quizCategory: quizResponse.data.quizCategory,\n              quizLevel: quizResponse.data.quizLevel,\n              nickname: nickname,\n              createdAt: quizResponse.data.createdAt || new Date().toISOString()\n            };\n          } catch (error) {\n            console.error(`퀴즈 정보 조회 실패 (ID: ${teacherQuiz.quizId}):`, error);\n            return {\n              ...teacherQuiz,\n              quizTitle: '제목 없음',\n              quizCategory: '-',\n              quizLevel: '-',\n              nickname: '알 수 없음',\n              createdAt: new Date().toISOString()\n            };\n          }\n        }));\n        this.currentGameQuizzes = quizzesWithDetails;\n        this.currentGame = game;\n        this.showQuizListModalFlag = true;\n      } catch (error) {\n        console.error(\"퀴즈 목록 조회 실패:\", error);\n        alert(\"퀴즈 목록을 불러오는데 실패했습니다.\");\n      }\n    },\n    closeQuizListModal() {\n      this.showQuizListModalFlag = false;\n      this.selectedCurrentQuizzes = [];\n      this.currentGame = null;\n    },\n    toggleCurrentQuizSelection(quiz) {\n      const index = this.selectedCurrentQuizzes.findIndex(q => q.quizId === quiz.quizId);\n      if (index === -1) {\n        this.selectedCurrentQuizzes.push(quiz);\n      } else {\n        this.selectedCurrentQuizzes.splice(index, 1);\n      }\n    },\n    toggleSelectAllCurrentQuizzes() {\n      this.selectAllCurrentQuizzes = !this.selectAllCurrentQuizzes;\n    },\n    async removeSelectedQuizzes() {\n      if (!this.selectedCurrentQuizzes.length) {\n        alert('선택된 퀴즈가 없습니다.');\n        return;\n      }\n      if (!confirm(`선택한 ${this.selectedCurrentQuizzes.length}개의 퀴즈를 삭제하시겠습니까?`)) return;\n      const token = localStorage.getItem(\"jwtToken\");\n      try {\n        for (const quiz of this.selectedCurrentQuizzes) {\n          await axios.delete(`${process.env.VUE_APP_BE_API_URL}/api/v1/teacher-quizzes/quiz/${quiz.teacherQuizId}`, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n        }\n\n        // 삭제 후 목록 새로고침\n        const response = await axios.get(`${process.env.VUE_APP_BE_API_URL}/api/v1/teacher-quizzes/game/${this.currentGame.gameId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        this.currentGameQuizzes = response.data;\n        this.selectedCurrentQuizzes = [];\n        alert('선택한 퀴즈가 성공적으로 삭제되었습니다.');\n      } catch (error) {\n        console.error(\"퀴즈 삭제 실패:\", error);\n        alert(\"퀴즈 삭제에 실패했습니다.\");\n      }\n    }\n  },\n  mounted() {\n    this.fetchMyGames();\n  }\n};","map":{"version":3,"names":["AppHeader","AppFooter","axios","name","components","data","games","quizList","showQuizModal","currentGameId","searchType","searchKeyword","selectedQuizzes","showQuizListModalFlag","currentGameQuizzes","selectedCurrentQuizzes","currentGame","computed","filteredQuizzes","keyword","toLowerCase","filter","quiz","quizTitle","includes","quizCategory","quizLevel","selectAll","get","length","set","value","selectAllCurrentQuizzes","methods","fetchMyGames","token","localStorage","getItem","response","process","env","VUE_APP_BE_API_URL","headers","Authorization","error","console","fetchQuizList","showAddQuizModal","game","gameId","handleSearch","selectQuiz","confirm","memberId","Number","teacherQuizRequest","quizId","isStopped","teacherQuizResponse","post","log","closeQuizModal","alert","removeQuizFromGame","delete","toggleSelectAll","addSelectedQuizzes","toggleQuizSelection","index","findIndex","q","push","splice","showQuizListModal","beUrl","quizzesWithDetails","Promise","all","map","teacherQuiz","quizResponse","nickname","nicknameResponse","teacherQuizId","createdAt","Date","toISOString","closeQuizListModal","toggleCurrentQuizSelection","toggleSelectAllCurrentQuizzes","removeSelectedQuizzes","mounted"],"sources":["/home/runner/work/FE/FE/src/components/MyPage.vue"],"sourcesContent":["<template>\n  <div class=\"my-page\">\n    <AppHeader />\n    <div class=\"content\">\n      <div class=\"games-section\">\n        <h2>내 게임 목록</h2>\n\n        <!-- 게임 목록 -->\n        <div class=\"games-list\">\n          <div v-for=\"game in games\" :key=\"game.gameId\" class=\"game-card\">\n            <div class=\"game-header\">\n              <h3>{{ game.gameName }}</h3>\n              <div class=\"game-buttons\">\n                <button @click=\"showQuizListModal(game)\" class=\"view-quiz-btn\">\n                  퀴즈 목록 보기\n                </button>\n                <button @click=\"showAddQuizModal(game)\" class=\"add-quiz-btn\">\n                  퀴즈 추가\n                </button>\n              </div>\n            </div>\n            \n            <!-- 게임에 포함된 퀴즈 목록 -->\n            <div class=\"quiz-list\">\n              <div v-for=\"quiz in game.quizzes\" :key=\"quiz.quizId\" class=\"quiz-item\">\n                <div class=\"quiz-info\">\n                  <span class=\"quiz-title\">{{ quiz.quizTitle }}</span>\n                  <div class=\"quiz-badges\">\n                    <span class=\"category-badge\">{{ quiz.quizCategory }}</span>\n                    <span class=\"level-badge\">{{ quiz.quizLevel }}</span>\n                  </div>\n                </div>\n                <button @click=\"removeQuizFromGame(game.gameId, quiz.quizId)\" class=\"remove-btn\">\n                  제거\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <!-- 퀴즈 추가 모달 -->\n        <div v-if=\"showQuizModal\" class=\"modal\">\n          <div class=\"modal-content\">\n            <h3>퀴즈 선택</h3>\n            <div class=\"search-area\">\n              <div class=\"search-container\">\n                <select v-model=\"searchType\" class=\"search-select\">\n                  <option value=\"all\">전체</option>\n                  <option value=\"title\">제목</option>\n                  <option value=\"category\">카테고리</option>\n                  <option value=\"level\">난이도</option>\n                </select>\n                <input \n                  v-model=\"searchKeyword\" \n                  type=\"text\" \n                  placeholder=\"퀴즈 검색\"\n                  class=\"search-input\"\n                  @keyup.enter=\"handleSearch\"\n                >\n                <button @click=\"handleSearch\" class=\"search-button\">검색</button>\n              </div>\n            </div>\n            <div class=\"quiz-table\">\n              <table>\n                <thead>\n                  <tr>\n                    <th>\n                      <input \n                        type=\"checkbox\" \n                        :checked=\"selectAll\" \n                        @change=\"toggleSelectAll\"\n                      >\n                    </th>\n                    <th>제목</th>\n                    <th>카테고리</th>\n                    <th>난이도</th>\n                    <th>작성자</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr v-for=\"quiz in filteredQuizzes\" \n                      :key=\"quiz.quizId\" \n                      class=\"quiz-row\"\n                      @click=\"toggleQuizSelection(quiz)\">\n                    <td @click.stop>\n                      <input \n                        type=\"checkbox\"\n                        v-model=\"selectedQuizzes\"\n                        :value=\"quiz\"\n                      >\n                    </td>\n                    <td>{{ quiz.quizTitle }}</td>\n                    <td>{{ quiz.quizCategory }}</td>\n                    <td>{{ quiz.quizLevel }}</td>\n                    <td>{{ quiz.nickname }}</td>\n                  </tr>\n                </tbody>\n              </table>\n              <div class=\"modal-buttons\">\n                <button @click=\"addSelectedQuizzes\" class=\"add-selected-btn\" :disabled=\"!selectedQuizzes.length\">\n                  선택한 퀴즈 추가 ({{ selectedQuizzes.length }}개)\n                </button>\n                <button @click=\"closeQuizModal\" class=\"cancel-btn\">닫기</button>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <!-- 퀴즈 목록 모달 추가 -->\n        <div v-if=\"showQuizListModalFlag\" class=\"modal\">\n          <div class=\"modal-content\">\n            <h3>현재 게임의 퀴즈 목록</h3>\n            <div class=\"quiz-table\">\n              <table>\n                <thead>\n                  <tr>\n                    <th>\n                      <input \n                        type=\"checkbox\" \n                        :checked=\"selectAllCurrentQuizzes\" \n                        @change=\"toggleSelectAllCurrentQuizzes\"\n                      >\n                    </th>\n                    <th>제목</th>\n                    <th>카테고리</th>\n                    <th>난이도</th>\n                    <th>작성자</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr v-for=\"quiz in currentGameQuizzes\" \n                      :key=\"quiz.teacherQuizId\" \n                      class=\"quiz-row\"\n                      @click=\"toggleCurrentQuizSelection(quiz)\">\n                    <td @click.stop>\n                      <input \n                        type=\"checkbox\"\n                        v-model=\"selectedCurrentQuizzes\"\n                        :value=\"quiz\"\n                      >\n                    </td>\n                    <td>{{ quiz.quizTitle }}</td>\n                    <td>{{ quiz.quizCategory }}</td>\n                    <td>{{ quiz.quizLevel }}</td>\n                    <td>{{ quiz.nickname }}</td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n            <div class=\"modal-buttons\">\n              <button \n                @click=\"removeSelectedQuizzes\" \n                class=\"remove-selected-btn\" \n                :disabled=\"!selectedCurrentQuizzes.length\">\n                선택한 퀴즈 삭제 ({{ selectedCurrentQuizzes.length }}개)\n              </button>\n              <button @click=\"closeQuizListModal\" class=\"cancel-btn\">닫기</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <AppFooter />\n  </div>\n</template>\n\n<script>\nimport AppHeader from \"./Header.vue\";\nimport AppFooter from \"./Footer.vue\";\nimport axios from 'axios';\n\nexport default {\n  name: 'MyPage',\n  components: {\n    AppHeader,\n    AppFooter\n  },\n  data() {\n    return {\n      games: [],\n      quizList: [],\n      showQuizModal: false,\n      currentGameId: null,\n      searchType: 'all',\n      searchKeyword: '',\n      selectedQuizzes: [],\n      showQuizListModalFlag: false,\n      currentGameQuizzes: [],\n      selectedCurrentQuizzes: [],\n      currentGame: null,\n    }\n  },\n  computed: {\n    filteredQuizzes() {\n      if (!this.searchKeyword) return this.quizList;\n      \n      const keyword = this.searchKeyword.toLowerCase();\n      return this.quizList.filter(quiz => {\n        switch (this.searchType) {\n          case 'title':\n            return quiz.quizTitle.toLowerCase().includes(keyword);\n          case 'category':\n            return quiz.quizCategory.toLowerCase().includes(keyword);\n          case 'level':\n            return quiz.quizLevel.toLowerCase().includes(keyword);\n          case 'all':\n            return quiz.quizTitle.toLowerCase().includes(keyword) ||\n                   quiz.quizCategory.toLowerCase().includes(keyword) ||\n                   quiz.quizLevel.toLowerCase().includes(keyword);\n          default:\n            return true;\n        }\n      });\n    },\n    selectAll: {\n      get() {\n        return this.filteredQuizzes.length === this.selectedQuizzes.length;\n      },\n      set(value) {\n        this.selectedQuizzes = value ? [...this.filteredQuizzes] : [];\n      }\n    },\n    selectAllCurrentQuizzes: {\n      get() {\n        return this.currentGameQuizzes.length === this.selectedCurrentQuizzes.length;\n      },\n      set(value) {\n        this.selectedCurrentQuizzes = value ? [...this.currentGameQuizzes] : [];\n      }\n    }\n  },\n  methods: {\n    // 내 게임 목록 조회\n    async fetchMyGames() {\n      const token = localStorage.getItem(\"jwtToken\");\n      try {\n        const response = await axios.get(`${process.env.VUE_APP_BE_API_URL}/api/v1/games`, {\n          headers: { Authorization: `Bearer ${token}` }\n        });\n        this.games = response.data;\n      } catch (error) {\n        console.error(\"게임 목록 조회 실패:\", error);\n      }\n    },\n\n    // 전체 퀴즈 목록 조회\n    async fetchQuizList() {\n      const token = localStorage.getItem(\"jwtToken\");\n      try {\n        const response = await axios.get(`${process.env.VUE_APP_BE_API_URL}/api/v1/quizs/all`, {\n          headers: { Authorization: `Bearer ${token}` }\n        });\n        this.quizList = response.data;\n      } catch (error) {\n        console.error(\"퀴즈 목록 조회 실패:\", error);\n      }\n    },\n\n    // 퀴즈 추가 모달 표시\n    async showAddQuizModal(game) {\n      this.currentGameId = game.gameId;\n      await this.fetchQuizList();\n      this.showQuizModal = true;\n    },\n\n    handleSearch() {\n      // 검색 시 필요한 로직 추가\n    },\n\n    // 퀴즈 선택 및 게임에 추가\n    async selectQuiz(quiz) {\n      if (!confirm(`\"${quiz.quizTitle}\" 퀴즈를 게임에 추가하시겠습니까?`)) return;\n\n      const token = localStorage.getItem(\"jwtToken\");\n      const memberId = Number(localStorage.getItem(\"memberId\"));\n\n      try {\n        const teacherQuizRequest = {\n          quizId: quiz.quizId,\n          gameId: this.currentGameId,\n          isStopped: 0\n        };\n\n        const teacherQuizResponse = await axios.post(\n          `${process.env.VUE_APP_BE_API_URL}/api/v1/teacher-quizzes/member/${memberId}`,\n          teacherQuizRequest,\n          { headers: { Authorization: `Bearer ${token}` }}\n        );\n\n        if (teacherQuizResponse.data) {\n          console.log('퀴즈가 성공적으로 저장되었습니다:', teacherQuizResponse.data);\n          await this.fetchMyGames();\n          this.closeQuizModal();\n        }\n      } catch (error) {\n        console.error(\"퀴즈 추가 실패:\", error);\n        alert(\"퀴즈 추가에 실패습니다.\");\n      }\n    },\n\n    // 게임에서 퀴즈 제거\n    async removeQuizFromGame(gameId, quizId) {\n      if (!confirm('이 퀴즈를 게임에서 제거하시겠습니까?')) return;\n\n      const token = localStorage.getItem(\"jwtToken\");\n      try {\n        await axios.delete(\n          `${process.env.VUE_APP_BE_API_URL}/api/v1/games/${gameId}/quizzes/${quizId}`,\n          { headers: { Authorization: `Bearer ${token}` }}\n        );\n        \n        await this.fetchMyGames();\n        alert(\"퀴즈가 제거되었습니다.\");\n      } catch (error) {\n        console.error(\"퀴즈 제거 실패:\", error);\n        alert(\"퀴즈 제거에 실패했습니다.\");\n      }\n    },\n\n    toggleSelectAll() {\n      this.selectAll = !this.selectAll;\n    },\n\n    async addSelectedQuizzes() {\n      if (!this.selectedQuizzes.length) {\n        alert('선택된 퀴즈가 없습니다.');\n        return;\n      }\n\n      if (!confirm(`선택한 ${this.selectedQuizzes.length}개의 퀴즈를 추가하시겠습니까?`)) return;\n\n      const token = localStorage.getItem(\"jwtToken\");\n      const memberId = Number(localStorage.getItem(\"memberId\"));\n\n      try {\n        for (const quiz of this.selectedQuizzes) {\n          const teacherQuizRequest = {\n            quizId: quiz.quizId,\n            gameId: this.currentGameId,\n            isStopped: 0\n          };\n\n          await axios.post(\n            `${process.env.VUE_APP_BE_API_URL}/api/v1/teacher-quizzes/member/${memberId}`,\n            teacherQuizRequest,\n            { headers: { Authorization: `Bearer ${token}` }}\n          );\n        }\n\n        await this.fetchMyGames();\n        this.closeQuizModal();\n        alert('선택한 퀴즈가 성공적으로 추가되었습니다.');\n      } catch (error) {\n        console.error(\"퀴즈 추가 실패:\", error);\n        alert(\"퀴즈 추가에 실패했습니다.\");\n      }\n    },\n\n    closeQuizModal() {\n      this.showQuizModal = false;\n      this.searchKeyword = '';\n      this.selectedQuizzes = []; // 모달 닫 때 선택 기화\n    },\n\n    toggleQuizSelection(quiz) {\n      const index = this.selectedQuizzes.findIndex(q => q.quizId === quiz.quizId);\n      if (index === -1) {\n        this.selectedQuizzes.push(quiz);\n      } else {\n        this.selectedQuizzes.splice(index, 1);\n      }\n    },\n\n    async showQuizListModal(game) {\n      const token = localStorage.getItem(\"jwtToken\");\n      const beUrl = process.env.VUE_APP_BE_API_URL;\n      \n      try {\n        // TeacherQuiz 목록을 가져옴\n        const response = await axios.get(\n          `${beUrl}/api/v1/teacher-quizzes/game/${game.gameId}`,\n          { headers: { Authorization: `Bearer ${token}` }}\n        );\n        \n        // 각 TeacherQuiz에 대해 Quiz 정보와 닉네임을 가져옴\n        const quizzesWithDetails = await Promise.all(\n          response.data.map(async (teacherQuiz) => {\n            try {\n              const quizResponse = await axios.get(\n                `${beUrl}/api/v1/quizs/${teacherQuiz.quizId}`,\n                { headers: { Authorization: `Bearer ${token}` }}\n              );\n\n              // memberId로 닉네임 조회\n              let nickname = '알 수 없음';\n              if (quizResponse.data.memberId) {\n                try {\n                  const nicknameResponse = await axios.get(\n                    `${beUrl}/api/v1/members/${quizResponse.data.memberId}/nickname`,\n                    { headers: { Authorization: `Bearer ${token}` }}\n                  );\n                  nickname = nicknameResponse.data || '알 수 없음';\n                } catch (error) {\n                  console.error(\"닉네임 조회 실패:\", error);\n                }\n              }\n\n              return {\n                teacherQuizId: teacherQuiz.teacherQuizId,\n                quizId: teacherQuiz.quizId,\n                gameId: teacherQuiz.gameId,\n                isStopped: teacherQuiz.isStopped,\n                quizTitle: quizResponse.data.quizTitle,\n                quizCategory: quizResponse.data.quizCategory,\n                quizLevel: quizResponse.data.quizLevel,\n                nickname: nickname,\n                createdAt: quizResponse.data.createdAt || new Date().toISOString()\n              };\n            } catch (error) {\n              console.error(`퀴즈 정보 조회 실패 (ID: ${teacherQuiz.quizId}):`, error);\n              return {\n                ...teacherQuiz,\n                quizTitle: '제목 없음',\n                quizCategory: '-',\n                quizLevel: '-',\n                nickname: '알 수 없음',\n                createdAt: new Date().toISOString()\n              };\n            }\n          })\n        );\n        \n        this.currentGameQuizzes = quizzesWithDetails;\n        this.currentGame = game;\n        this.showQuizListModalFlag = true;\n      } catch (error) {\n        console.error(\"퀴즈 목록 조회 실패:\", error);\n        alert(\"퀴즈 목록을 불러오는데 실패했습니다.\");\n      }\n    },\n\n    closeQuizListModal() {\n      this.showQuizListModalFlag = false;\n      this.selectedCurrentQuizzes = [];\n      this.currentGame = null;\n    },\n\n    toggleCurrentQuizSelection(quiz) {\n      const index = this.selectedCurrentQuizzes.findIndex(q => q.quizId === quiz.quizId);\n      if (index === -1) {\n        this.selectedCurrentQuizzes.push(quiz);\n      } else {\n        this.selectedCurrentQuizzes.splice(index, 1);\n      }\n    },\n\n    toggleSelectAllCurrentQuizzes() {\n      this.selectAllCurrentQuizzes = !this.selectAllCurrentQuizzes;\n    },\n\n    async removeSelectedQuizzes() {\n      if (!this.selectedCurrentQuizzes.length) {\n        alert('선택된 퀴즈가 없습니다.');\n        return;\n      }\n\n      if (!confirm(`선택한 ${this.selectedCurrentQuizzes.length}개의 퀴즈를 삭제하시겠습니까?`)) return;\n\n      const token = localStorage.getItem(\"jwtToken\");\n\n      try {\n        for (const quiz of this.selectedCurrentQuizzes) {\n          await axios.delete(\n            `${process.env.VUE_APP_BE_API_URL}/api/v1/teacher-quizzes/quiz/${quiz.teacherQuizId}`,\n            { headers: { Authorization: `Bearer ${token}` }}\n          );\n        }\n\n        // 삭제 후 목록 새로고침\n        const response = await axios.get(\n          `${process.env.VUE_APP_BE_API_URL}/api/v1/teacher-quizzes/game/${this.currentGame.gameId}`,\n          { headers: { Authorization: `Bearer ${token}` }}\n        );\n        \n        this.currentGameQuizzes = response.data;\n        this.selectedCurrentQuizzes = [];\n        alert('선택한 퀴즈가 성공적으로 삭제되었습니다.');\n      } catch (error) {\n        console.error(\"퀴즈 삭제 실패:\", error);\n        alert(\"퀴즈 삭제에 실패했습니다.\");\n      }\n    }\n  },\n  mounted() {\n    this.fetchMyGames();\n  }\n}\n</script>\n\n<style scoped>\n.my-page {\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n  background-color: #fff;\n}\n\n.content {\n  flex: 1;\n  padding: 20px;\n  max-width: 1200px;\n  margin: 0 auto;\n  width: 100%;\n  padding-top: 80px; /* 헤더 높이만큼 여백 */\n  padding-bottom: 40px;\n}\n\n.games-section {\n  background-color: white;\n  border-radius: 8px;\n  padding: 20px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  min-height: calc(100vh - 200px); /* 화면 높이에서 헤더/푸터 높이를 뺀 값 */\n}\n\n/* 기존 스타일 유지하면서 추가 */\n@media (max-height: 900px) {\n  .games-section {\n    min-height: calc(100vh - 180px);\n  }\n}\n\n.games-list {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  gap: 20px;\n  margin-top: 20px;\n}\n\n.game-card {\n  border: 1px solid #ddd;\n  border-radius: 8px;\n  padding: 15px;\n  background: white;\n}\n\n.game-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 15px;\n}\n\n.quiz-list {\n  border-top: 1px solid #eee;\n  padding-top: 10px;\n}\n\n.quiz-item {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 8px 0;\n  border-bottom: 1px solid #f5f5f5;\n}\n\n.add-quiz-btn {\n  background-color: rgba(0, 0, 0, 0.865);\n  color: white;\n  border: none;\n  padding: 8px 16px;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.remove-btn {\n  background-color: #f44336;\n  color: white;\n  border: none;\n  padding: 4px 8px;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.modal {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.modal-content {\n  background: white;\n  padding: 30px;\n  border-radius: 8px;\n  width: 90%;\n  max-width: 800px;\n  max-height: 80vh;\n  overflow-y: auto;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n}\n\n.search-area {\n  margin: 20px 0;\n}\n\n.search-container {\n  display: flex;\n  gap: 10px;\n  align-items: center;\n}\n\n.search-select {\n  padding: 8px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  min-width: 120px;\n}\n\n.search-input {\n  flex: 1;\n  padding: 8px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n}\n\n.search-button {\n  padding: 8px 16px;\n  background-color: rgba(0, 0, 0, 0.865);\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.quiz-table {\n  flex: 1;\n  overflow-y: auto;\n  border: 1px solid #eee;\n  border-radius: 4px;\n}\n\n.quiz-table table {\n  width: 100%;\n  border-collapse: collapse;\n}\n\n.quiz-table th,\n.quiz-table td {\n  padding: 12px;\n  text-align: left;\n  border-bottom: 1px solid #eee;\n}\n\n.quiz-table th {\n  background-color: #f8f9fa;\n  position: sticky;\n  top: 0;\n  z-index: 1;\n}\n\n/* 각 열의 너비 조정 */\n.quiz-table td:nth-child(1) { width: 5%; }  /* 체크박스 */\n.quiz-table td:nth-child(2) { width: 40%; } /* 제목 */\n.quiz-table td:nth-child(3) { width: 20%; } /* 카테고리 */\n.quiz-table td:nth-child(4) { width: 15%; } /* 난이도 */\n.quiz-table td:nth-child(5) { width: 20%; } /* 작성자 */\n\n.modal-buttons {\n  display: flex;\n  justify-content: flex-end;\n  gap: 10px;\n  padding-top: 20px;\n  border-top: 1px solid #eee;\n}\n\n.add-selected-btn, .cancel-btn {\n  padding: 10px 20px;\n  border-radius: 4px;\n  border: none;\n  cursor: pointer;\n  font-weight: 500;\n}\n\n.add-selected-btn {\n  background-color: rgba(0, 0, 0, 0.865);\n  color: white;\n}\n\n.cancel-btn {\n  background-color: #f5f5f5;\n  color: #333;\n}\n\n.add-selected-btn:disabled {\n  background-color: #cccccc;\n  cursor: not-allowed;\n}\n\n.game-buttons {\n  display: flex;\n  gap: 10px;\n}\n\n.view-quiz-btn {\n  background-color: #2196F3;\n  color: white;\n  border: none;\n  padding: 8px 16px;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.remove-selected-btn {\n  background-color: #f44336;\n  color: white;\n  border: none;\n  padding: 10px 20px;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.remove-selected-btn:disabled {\n  background-color: #cccccc;\n  cursor: not-allowed;\n}\n\n.game-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 15px;\n}\n\n.game-buttons button {\n  transition: opacity 0.2s;\n}\n\n.game-buttons button:hover {\n  opacity: 0.9;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}