{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelSelect as _vModelSelect, withDirectives as _withDirectives, vModelText as _vModelText, withKeys as _withKeys, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, withModifiers as _withModifiers, normalizeClass as _normalizeClass } from \"vue\";\nimport _imports_0 from '@/assets/Icon.png';\nconst _hoisted_1 = {\n  class: \"quiz-board-page\"\n};\nconst _hoisted_2 = {\n  class: \"content\"\n};\nconst _hoisted_3 = {\n  class: \"quiz-board\"\n};\nconst _hoisted_4 = {\n  class: \"search-area\"\n};\nconst _hoisted_5 = {\n  class: \"total-count\"\n};\nconst _hoisted_6 = {\n  class: \"search-container\"\n};\nconst _hoisted_7 = {\n  class: \"table-container\"\n};\nconst _hoisted_8 = {\n  class: \"quiz-table\"\n};\nconst _hoisted_9 = {\n  class: \"bookmark-cell\"\n};\nconst _hoisted_10 = [\"onClick\"];\nconst _hoisted_11 = {\n  class: \"id-cell\"\n};\nconst _hoisted_12 = [\"onClick\"];\nconst _hoisted_13 = {\n  class: \"title-wrapper\"\n};\nconst _hoisted_14 = {\n  class: \"title-text\"\n};\nconst _hoisted_15 = {\n  class: \"badges\"\n};\nconst _hoisted_16 = {\n  class: \"category-badge\"\n};\nconst _hoisted_17 = {\n  class: \"level-badge\"\n};\nconst _hoisted_18 = {\n  class: \"author-cell\"\n};\nconst _hoisted_19 = {\n  class: \"date-cell\"\n};\nconst _hoisted_20 = {\n  class: \"pagination-container\"\n};\nconst _hoisted_21 = {\n  class: \"pagination\"\n};\nconst _hoisted_22 = {\n  class: \"pagination-wrapper\"\n};\nconst _hoisted_23 = {\n  class: \"pagination-buttons\"\n};\nconst _hoisted_24 = [\"disabled\"];\nconst _hoisted_25 = {\n  class: \"page-numbers\"\n};\nconst _hoisted_26 = [\"onClick\"];\nconst _hoisted_27 = [\"disabled\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_AppHeader = _resolveComponent(\"AppHeader\");\n  const _component_AppFooter = _resolveComponent(\"AppFooter\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_AppHeader), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, \"전체 \" + _toDisplayString($data.totalItems) + \"건\", 1), _createElementVNode(\"div\", _hoisted_6, [_withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.searchType = $event),\n    class: \"search-select\"\n  }, _cache[7] || (_cache[7] = [_createElementVNode(\"option\", {\n    value: \"all\"\n  }, \"전체\", -1), _createElementVNode(\"option\", {\n    value: \"title\"\n  }, \"제목\", -1), _createElementVNode(\"option\", {\n    value: \"category\"\n  }, \"카테고리\", -1), _createElementVNode(\"option\", {\n    value: \"level\"\n  }, \"난이도\", -1)]), 512), [[_vModelSelect, $data.searchType]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.searchKeyword = $event),\n    class: \"search-input\",\n    placeholder: \"검색어를 입력하세요\",\n    onKeyup: _cache[2] || (_cache[2] = _withKeys((...args) => $options.handleSearch && $options.handleSearch(...args), [\"enter\"]))\n  }, null, 544), [[_vModelText, $data.searchKeyword]]), _createElementVNode(\"button\", {\n    class: \"search-button\",\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.handleSearch && $options.handleSearch(...args))\n  }, \"검색\")])]), _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"table\", _hoisted_8, [_cache[9] || (_cache[9] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", {\n    style: {\n      \"width\": \"5%\"\n    }\n  }), _createElementVNode(\"th\", null, \"번호\"), _createElementVNode(\"th\", null, \"제목\"), _createElementVNode(\"th\", null, \"작성자\"), _createElementVNode(\"th\", null, \"작성일\")])], -1)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.paginatedQuizList, quiz => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: quiz.quizId\n    }, [_createElementVNode(\"td\", _hoisted_9, [_createElementVNode(\"img\", {\n      src: _imports_0,\n      class: _normalizeClass([\"bookmark-icon\", {\n        'bookmarked': $options.isBookmarked(quiz.quizId)\n      }]),\n      onClick: _withModifiers($event => $options.toggleBookmark(quiz.quizId), [\"stop\"]),\n      alt: \"bookmark\"\n    }, null, 10, _hoisted_10)]), _createElementVNode(\"td\", _hoisted_11, _toDisplayString(quiz.quizId), 1), _createElementVNode(\"td\", {\n      class: \"title-cell\",\n      onClick: $event => $options.goToQuizDetail(quiz.quizId)\n    }, [_createElementVNode(\"div\", _hoisted_13, [_createElementVNode(\"span\", _hoisted_14, _toDisplayString(quiz.quizTitle), 1), _createElementVNode(\"span\", _hoisted_15, [_createElementVNode(\"span\", _hoisted_16, _toDisplayString(quiz.quizCategory), 1), _createElementVNode(\"span\", _hoisted_17, _toDisplayString(quiz.quizLevel), 1)])])], 8, _hoisted_12), _createElementVNode(\"td\", _hoisted_18, _toDisplayString(quiz.memberNickname), 1), _createElementVNode(\"td\", _hoisted_19, _toDisplayString($options.formatDate(quiz.date)), 1)]);\n  }), 128)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.emptyRows, i => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: `empty-${i}`,\n      class: \"empty-row\"\n    }, _cache[8] || (_cache[8] = [_createElementVNode(\"td\", {\n      colspan: \"5\"\n    }, \" \", -1)]));\n  }), 128))])]), _createElementVNode(\"div\", _hoisted_20, [_createElementVNode(\"div\", _hoisted_21, [_createElementVNode(\"div\", _hoisted_22, [_createElementVNode(\"div\", _hoisted_23, [_createElementVNode(\"button\", {\n    class: \"nav-btn prev\",\n    onClick: _cache[4] || (_cache[4] = (...args) => $options.prevPage && $options.prevPage(...args)),\n    disabled: $data.currentPage === 1\n  }, \" < \", 8, _hoisted_24), _createElementVNode(\"div\", _hoisted_25, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.getDisplayedPages(), pageNum => {\n    return _openBlock(), _createElementBlock(\"button\", {\n      key: pageNum,\n      class: _normalizeClass(['page-num', {\n        active: $data.currentPage === pageNum\n      }]),\n      onClick: $event => $options.goToPage(pageNum)\n    }, _toDisplayString(pageNum), 11, _hoisted_26);\n  }), 128))]), _createElementVNode(\"button\", {\n    class: \"nav-btn next\",\n    onClick: _cache[5] || (_cache[5] = (...args) => $options.nextPage && $options.nextPage(...args)),\n    disabled: $data.currentPage === $options.totalPages\n  }, \" > \", 8, _hoisted_27)])])]), _createElementVNode(\"button\", {\n    class: \"create-quiz-button search-button\",\n    onClick: _cache[6] || (_cache[6] = (...args) => $options.createQuiz && $options.createQuiz(...args))\n  }, \"퀴즈 생성\")])])])]), _createVNode(_component_AppFooter)]);\n}","map":{"version":3,"names":["_imports_0","class","_createElementBlock","_hoisted_1","_createVNode","_component_AppHeader","_createElementVNode","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_toDisplayString","$data","totalItems","_hoisted_6","_cache","$event","searchType","value","type","searchKeyword","placeholder","onKeyup","_withKeys","args","$options","handleSearch","onClick","_hoisted_7","_hoisted_8","style","_Fragment","_renderList","paginatedQuizList","quiz","key","quizId","_hoisted_9","src","_normalizeClass","isBookmarked","_withModifiers","toggleBookmark","alt","_hoisted_10","_hoisted_11","goToQuizDetail","_hoisted_13","_hoisted_14","quizTitle","_hoisted_15","_hoisted_16","quizCategory","_hoisted_17","quizLevel","_hoisted_12","_hoisted_18","memberNickname","_hoisted_19","formatDate","date","emptyRows","i","colspan","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","prevPage","disabled","currentPage","_hoisted_24","_hoisted_25","getDisplayedPages","pageNum","active","goToPage","_hoisted_26","nextPage","totalPages","_hoisted_27","createQuiz","_component_AppFooter"],"sources":["/home/runner/work/FE/FE/src/components/QuizBoard.vue"],"sourcesContent":["<template>\n  <div class=\"quiz-board-page\">\n    <AppHeader />\n    <div class=\"content\">\n      <div class=\"quiz-board\">\n        <div class=\"search-area\">\n          <div class=\"total-count\">전체 {{ totalItems }}건</div>\n          <div class=\"search-container\">\n            <select v-model=\"searchType\" class=\"search-select\">\n              <option value=\"all\">전체</option>\n              <option value=\"title\">제목</option>\n              <option value=\"category\">카테고리</option>\n              <option value=\"level\">난이도</option>\n            </select>\n            <input \n              type=\"text\" \n              v-model=\"searchKeyword\" \n              class=\"search-input\" \n              placeholder=\"검색어를 입력하세요\"\n              @keyup.enter=\"handleSearch\"\n            >\n            <button class=\"search-button\" @click=\"handleSearch\">검색</button>\n          </div>\n        </div>\n        <div class=\"table-container\">\n          <table class=\"quiz-table\">\n            <thead>\n              <tr>\n                <th style=\"width: 5%\"></th>\n                <th>번호</th>\n                <th>제목</th>\n                <th>작성자</th>\n                <th>작성일</th>\n              </tr>\n            </thead>\n            <tbody>\n              <template v-for=\"quiz in paginatedQuizList\" :key=\"quiz.quizId\">\n                <tr>\n                  <td class=\"bookmark-cell\">\n                    <img \n                      src=\"@/assets/Icon.png\" \n                      class=\"bookmark-icon\" \n                      :class=\"{ 'bookmarked': isBookmarked(quiz.quizId) }\"\n                      @click.stop=\"toggleBookmark(quiz.quizId)\"\n                      alt=\"bookmark\"\n                    />\n                  </td>\n                  <td class=\"id-cell\">{{ quiz.quizId }}</td>\n                  <td class=\"title-cell\" @click=\"goToQuizDetail(quiz.quizId)\">\n                    <div class=\"title-wrapper\">\n                      <span class=\"title-text\">{{ quiz.quizTitle }}</span>\n                      <span class=\"badges\">\n                        <span class=\"category-badge\">{{ quiz.quizCategory }}</span>\n                        <span class=\"level-badge\">{{ quiz.quizLevel }}</span>\n                      </span>\n                    </div>\n                  </td>\n                  <td class=\"author-cell\">{{ quiz.memberNickname }}</td>\n                  <td class=\"date-cell\">{{ formatDate(quiz.date) }}</td>\n                </tr>\n              </template>\n              <tr v-for=\"i in emptyRows\" :key=\"`empty-${i}`\" class=\"empty-row\">\n                <td colspan=\"5\">&nbsp;</td>\n              </tr>\n            </tbody>\n          </table>\n          <div class=\"pagination-container\">\n            <div class=\"pagination\">\n              <div class=\"pagination-wrapper\">\n                <div class=\"pagination-buttons\">\n                  <button class=\"nav-btn prev\" @click=\"prevPage\" :disabled=\"currentPage === 1\">\n                    &lt;\n                  </button>\n                  <div class=\"page-numbers\">\n                    <button \n                      v-for=\"pageNum in getDisplayedPages()\" \n                      :key=\"pageNum\"\n                      :class=\"['page-num', { active: currentPage === pageNum }]\"\n                      @click=\"goToPage(pageNum)\"\n                    >\n                      {{ pageNum }}\n                    </button>\n                  </div>\n                  <button class=\"nav-btn next\" @click=\"nextPage\" :disabled=\"currentPage === totalPages\">\n                    &gt;\n                  </button>\n                </div>\n              </div>\n            </div>\n            <button class=\"create-quiz-button search-button\" @click=\"createQuiz\">퀴즈 생성</button>\n          </div>\n        </div>\n      </div>\n    </div>\n    <AppFooter />\n  </div>\n</template>\n\n<script>\nimport AppHeader from \"./Header.vue\";\nimport AppFooter from \"./Footer.vue\";\nimport axios from \"axios\";\n\nexport default {\n  name: \"QuizBoard\",\n  components: {\n    AppHeader,\n    AppFooter,\n  },\n  data() {\n    return {\n      quizList: [],\n      currentPage: 1,\n      itemsPerPage: 10,\n      totalItems: 0,\n      searchType: 'all',\n      searchKeyword: '',\n      bookmarks: [],\n    };\n  },\n  computed: {\n    paginatedQuizList() {\n      return this.quizList;\n    },\n    totalPages() {\n      return Math.ceil(this.totalItems / this.itemsPerPage);\n    },\n    emptyRows() {\n      const remainingRows = this.itemsPerPage - this.paginatedQuizList.length;\n      return remainingRows > 0 ? remainingRows : 0;\n    }\n  },\n  methods: {\n    async fetchQuizList() {\n      const token = localStorage.getItem(\"jwtToken\");\n      if (!token) {\n        console.error(\"Token is missing\");\n        return;\n      }\n\n      try {\n        const beUrl = process.env.VUE_APP_BE_API_URL;\n        const params = {\n          page: this.currentPage - 1,\n          size: this.itemsPerPage\n        };\n\n        if (this.searchKeyword?.trim()) {\n          params.searchType = this.searchType;\n          params.searchKeyword = this.searchKeyword;\n        }\n\n        const response = await axios.get(`${beUrl}/api/v1/quizs/all`, {\n          params,\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        });\n\n        this.quizList = response.data.content;\n        this.totalItems = response.data.totalElements;\n        \n      } catch (error) {\n        console.error(\"퀴즈 목록 조회 실패:\", error);\n        alert(\"퀴즈 목록을 불러오는 데 실패했습니다.\");\n      }\n    },\n    createQuiz() {\n      this.$router.push('/quizform');  // router/index.js에 정의된 경로로 이동\n    },\n    goToQuizDetail(quizId) {\n      this.$router.push(`/quiz/${quizId}`);\n    },\n    formatDate(date) {\n      if (!date) return '';\n      \n      try {\n        if (date instanceof Date) {\n          return date.toLocaleDateString('ko-KR', {\n            year: 'numeric',\n            month: '2-digit',\n            day: '2-digit'\n          }).replace(/\\. /g, '-').replace('.', '');\n        }\n        \n        // date가 배열인 경우\n        if (Array.isArray(date)) {\n          const newDate = new Date(date[0], date[1]-1, date[2]);\n          return newDate.toLocaleDateString('ko-KR', {\n            year: 'numeric',\n            month: '2-digit',\n            day: '2-digit'\n          }).replace(/\\. /g, '-').replace('.', '');\n        }\n        \n        // 문자열인 경우\n        return new Date(date).toLocaleDateString('ko-KR', {\n          year: 'numeric',\n          month: '2-digit',\n          day: '2-digit'\n        }).replace(/\\. /g, '-').replace('.', '');\n      } catch (error) {\n        console.error('날짜 변환 실패:', error, date);\n        return '';\n      }\n    },\n    getDisplayedPages() {\n      const totalPages = this.totalPages;\n      const current = this.currentPage;\n      \n      // 항상 5개의 페이지를 보여주되, 위치 고정\n      if (totalPages <= 5) {\n        return Array.from({ length: totalPages }, (_, i) => i + 1);\n      }\n      \n      if (current <= 3) {\n        return [1, 2, 3, 4, 5];\n      }\n      \n      if (current >= totalPages - 2) {\n        return [\n          totalPages - 4,\n          totalPages - 3,\n          totalPages - 2,\n          totalPages - 1,\n          totalPages\n        ];\n      }\n      \n      return [current - 2, current - 1, current, current + 1, current + 2];\n    },\n    async nextPage() {\n      if (this.currentPage < this.totalPages) {\n        this.currentPage++;\n        await this.fetchQuizList();\n      }\n    },\n    async prevPage() {\n      if (this.currentPage > 1) {\n        this.currentPage--;\n        await this.fetchQuizList();\n      }\n    },\n    async goToPage(pageNum) {\n      this.currentPage = pageNum;\n      await this.fetchQuizList();\n    },\n    async goToFirstPage() {\n      this.currentPage = 1;\n      await this.fetchQuizList();\n    },\n    async goToLastPage() {\n      this.currentPage = this.totalPages;\n      await this.fetchQuizList();\n    },\n    async handleSearch() {\n      this.currentPage = 1;\n      await this.fetchQuizList();\n    },\n    async fetchBookmarks() {\n      const token = localStorage.getItem(\"jwtToken\");\n      const memberId = localStorage.getItem(\"memberId\");\n      \n      if (!token || !memberId) return;\n\n      try {\n        const beUrl = process.env.VUE_APP_BE_API_URL;\n        const response = await axios.get(`${beUrl}/api/v1/bookmarks/member/${memberId}`, {\n          headers: { Authorization: `Bearer ${token}` }\n        });\n        this.bookmarks = response.data;\n      } catch (error) {\n        console.error(\"북마크 목록 조회 실패:\", error);\n      }\n    },\n    isBookmarked(quizId) {\n      return this.bookmarks.some(bookmark => bookmark.quizId === quizId) || \n             localStorage.getItem(`bookmark_${quizId}`) === 'true';\n    },\n    async toggleBookmark(quizId) {\n      const token = localStorage.getItem(\"jwtToken\");\n      const memberId = localStorage.getItem(\"memberId\");\n      \n      if (!token || !memberId) {\n        alert(\"로그인이 필요한 서비스입니다.\");\n        return;\n      }\n\n      try {\n        const beUrl = process.env.VUE_APP_BE_API_URL;\n        const bookmark = this.bookmarks.find(b => b.quizId === quizId);\n        \n        if (bookmark) {\n          // 북마크 삭제\n          await axios.delete(`${beUrl}/api/v1/bookmarks/${bookmark.bookmarkId}`, {\n            headers: { Authorization: `Bearer ${token}` }\n          });\n          this.bookmarks = this.bookmarks.filter(b => b.bookmarkId !== bookmark.bookmarkId);\n          // localStorage에서 북마크 상태 제거\n          localStorage.removeItem(`bookmark_${quizId}`);\n        } else {\n          // 북마크 추가\n          const response = await axios.post(\n            `${beUrl}/api/v1/bookmarks`,\n            {\n              memberId: Number(memberId),\n              quizId: Number(quizId)\n            },\n            { headers: { Authorization: `Bearer ${token}` }}\n          );\n          \n          if (response.data) {\n            this.bookmarks.push(response.data);\n            // localStorage에 북마크 상태 저장\n            localStorage.setItem(`bookmark_${quizId}`, 'true');\n          }\n        }\n      } catch (error) {\n        console.error(\"북마크 처리 실패:\", error);\n        alert(\"북마크 처리에 실패했습니다.\");\n      }\n    },\n  },\n  watch: {\n    searchType: {\n      handler() {\n        this.currentPage = 1;\n        this.fetchQuizList();\n      }\n    },\n    searchKeyword: {\n      handler() {\n        this.currentPage = 1;\n        this.fetchQuizList();\n      }\n    }\n  },\n  async mounted() {\n    await this.fetchQuizList();\n    await this.fetchBookmarks();\n  }\n};\n</script>\n\n<style scoped>\n.home-page {\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n  background-color: #fff;\n}\n\n.total-count {\n  color: #666;\n  font-size: 14px;\n  margin-bottom: 0;\n  text-align: right;\n  margin-top: 10px;\n  width: auto;\n}\n\n.content {\n  flex: 1;\n  padding: 20px;\n  max-width: 1200px;\n  margin: 0 auto;\n  width: 100%;\n  padding-top: 80px;\n  padding-bottom: 40px;\n}\n\n.quiz-board {\n  background-color: white;\n  border-radius: 8px;\n  padding: 20px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  min-height: calc(100vh - 200px); /* 화면 높이에서 헤더/푸터 높을 뺀 값 */\n}\n\n\n.pagination-container {\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 15px 0;\n  margin-top: auto;\n  width: 100%;\n}\n\n.pagination {\n  position: absolute;\n  left: 50%;\n  transform: translateX(-50%);\n}\n\n.pagination-wrapper {\n  display: flex;\n  align-items: center;\n}\n\n.pagination-buttons {\n  display: flex;\n  align-items: center;\n  gap: 5px;\n}\n\n.create-quiz-button {\n  margin-left: auto;\n}\n\n.page-numbers {\n  display: flex;\n  gap: 5px;\n  margin: 0 5px;\n  min-width: 170px;\n  justify-content: center;\n}\n\n.page-num,\n.nav-btn {\n  min-width: 30px;\n  height: 30px;\n  border: 1px solid #ddd;\n  background-color: white;\n  color: #333;\n  font-size: 14px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0;\n  margin: 0;\n}\n\n.page-num.active {\n  background-color: rgba(0, 0, 0, 0.865);\n  color: white;\n  border-color: rgba(0, 0, 0, 0.865);\n}\n\n.nav-btn:disabled {\n  cursor: not-allowed;\n  opacity: 0.5;\n}\n\n.nav-btn:hover:not(:disabled),\n.page-num:hover:not(.active) {\n  background-color: #f8f9fa;\n  border-color: #999;\n}\n\n.quiz-table {\n  width: 100%;\n  border-collapse: collapse;\n  border-top: 2px solid #333;\n  table-layout: fixed;\n}\n\n.quiz-table th,\n.quiz-table td {\n  padding: 12px 15px;\n  border-bottom: 1px solid #ddd;\n  height: 52px;\n  box-sizing: border-box;\n}\n\n.empty-row td {\n  border-bottom: 1px solid #ddd;\n  height: 52px; /* 빈 행의 높이를 일정하게 */\n}\n\n.quiz-table th {\n  background-color: #f8f9fa;\n  font-weight: bold;\n  color: #333;\n  text-align: center;\n}\n\n.quiz-table td.title {\n  text-align: left;\n  width: 50%;\n}\n\n.quiz-table tr:hover {\n  background-color: #f8f9fa;\n}\n\n.category-badge,\n.level-badge {\n  display: inline-block;\n  padding: 2px 8px;\n  border-radius: 12px;\n  font-size: 12px;\n  white-space: nowrap;\n}\n\n.category-badge {\n  background-color: #e9ecef;\n}\n\n.level-badge {\n  background-color: #dee2e6;\n}\n\n.quiz-board h2 {\n  margin-bottom: 15px;\n  font-size: 24px;\n  color: #333;\n}\n\n/* 각 셀 정렬 스일 */\n.id-cell {\n  text-align: center;\n}\n\n.title-cell {\n  text-align: left;\n  padding-left: 20px;\n  cursor: pointer; /* 커서 모양을 포인터로 변경 */\n  transition: background-color 0.2s; /* 부드러운 전환 효과 */\n}\n\n\n.title-cell:active {\n  background-color: #e0e0e0; /* 클릭 시 배경색 변경 */\n}\n\n.title-wrapper {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  width: 100%;\n}\n\n.title-text {\n  flex: 1;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  margin-right: 10px;\n  color: #2c3e50; /* 링크처럼 보이는 색상 */\n}\n\n.title-cell:hover .title-text {\n  color: #1a73e8; /* 호버 시 텍스트 색상 변경 */\n  text-decoration: underline; /* 호버 시 밑줄 추가 */\n}\n\n.badges {\n  display: flex;\n  gap: 5px;\n  flex-shrink: 0;\n}\n\n.author-cell {\n  text-align: center;\n}\n\n.date-cell {\n  text-align: center;\n}\n\n.table-container {\n  margin: 20px 0;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n}\n\n.search-area {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n  margin-top: 30px;\n  width: 100%;\n}\n\n.search-container {\n  display: flex;\n  gap: 12px;\n  align-items: center;\n  height: 40px;\n}\n\n.search-select {\n  width: 100px;\n  height: 40px;\n  padding: 0 10px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  font-size: 14px;\n  background-color: white;\n  flex-shrink: 0;\n  cursor: pointer;\n}\n\n.search-input {\n  width: 500px;\n  height: 40px;\n  padding: 0 10px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  font-size: 14px;\n  flex-shrink: 0;\n}\n\n.search-button {\n  width: 80px;\n  height: 40px;\n  padding: 0;\n  background-color: rgba(0, 0, 0, 0.865);\n  color: white;\n  border: none;\n  border-radius: 4px;\n  font-size: 14px;\n  cursor: pointer;\n  flex-shrink: 0;\n}\n\n.search-button:hover {\n  background-color: #020906b3;\n}\n\n.search-select:focus,\n.search-input:focus {\n  outline: none;\n  border-color: rgba(0, 0, 0, 0.865);\n}\n\n/* 반응형 처리 */\n@media (max-width: 768px) {\n  .search-area {\n    flex-direction: column;\n    gap: 12px;\n  }\n\n  .search-container {\n    flex-direction: column;\n    height: auto;\n    gap: 8px;\n    width: 100%;\n  }\n  \n  .search-select,\n  .search-input,\n  .search-button {\n    width: 100%;\n  }\n\n  .total-count {\n    text-align: left;\n    width: 100%;\n  }\n}\n\n@media (max-height: 900px) {\n  .quiz-board {\n    min-height: calc(100vh - 180px);\n  }\n}\n\n/* 기 스타일에 가 */\n.quiz-table th:nth-child(1) {\n  width: 10%;\n}\n\n.quiz-table th:nth-child(2) {\n  width: 50%;\n}\n\n.quiz-table th:nth-child(3) {\n  width: 20%;\n}\n\n.quiz-table th:nth-child(4) {\n  width: 20%;\n}\n\n.bookmark-cell {\n  text-align: center;\n  width: 5%;\n}\n\n.bookmark-icon {\n  width: 20px;\n  height: 20px;\n  cursor: pointer;\n}\n\n.bookmark-icon:hover {\n  opacity: 0.5;\n}\n\n.bookmark-icon.bookmarked {\n  opacity: 1;\n  filter: invert(28%) sepia(67%) saturate(669%) hue-rotate(346deg) brightness(89%) contrast(83%);\n}\n\n\n/* 테이블 열 너비 수정 */\n.quiz-table th:nth-child(1) { width: 5%; }\n.quiz-table th:nth-child(2) { width: 8%; }\n.quiz-table th:nth-child(3) { width: 47%; }\n.quiz-table th:nth-child(4) { width: 20%; }\n.quiz-table th:nth-child(5) { width: 20%; }\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}