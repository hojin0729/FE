{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, onMounted } from 'vue';\nimport { useRouter } from 'vue-router';\nexport default {\n  name: \"AppHeader\",\n  setup() {\n    const isLoggedIn = ref(false);\n    const router = useRouter();\n\n    // 페이지 로드 시 JWT 토큰이 존재하는지 확인하여 로그인 상태 설정\n    onMounted(() => {\n      isLoggedIn.value = !!localStorage.getItem('jwtToken');\n    });\n    function navigateToLogin() {\n      router.push('/login'); // 로그인 페이지로 이동\n    }\n    function login() {\n      // 여기에 실제 로그인 로직 추가 (예: 서버에 로그인 요청 후 JWT 토큰 수신)\n      const jwtToken = \"exampleToken\";\n      localStorage.setItem('jwtToken', jwtToken); // JWT 토큰을 로컬스토리지에 저장\n      isLoggedIn.value = true;\n    }\n    function logout() {\n      // 로그아웃 시 모든 관련 데이터 삭제\n      localStorage.removeItem('jwtToken');\n      localStorage.removeItem('memberId');\n      localStorage.removeItem('memberNickname');\n      isLoggedIn.value = false;\n\n      // 홈 페이지로 이동\n      router.push('/login');\n    }\n    return {\n      isLoggedIn,\n      login,\n      logout,\n      navigateToLogin\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","useRouter","name","setup","isLoggedIn","router","value","localStorage","getItem","navigateToLogin","push","login","jwtToken","setItem","logout","removeItem"],"sources":["/home/runner/work/FE/FE/src/components/Header.vue"],"sourcesContent":["<template>\n  <header class=\"app-header\">\n    <img src=\"@/assets/image.png\" alt=\"Header Image\" class=\"header-image\" />\n    <nav class=\"nav-bar\">\n      <ul>\n        <li>\n          <a v-if=\"!isLoggedIn\" href=\"/login\" @click.prevent=\"navigateToLogin\">로그인</a>\n          <a v-else href=\"#\" @click.prevent=\"logout\">로그아웃</a>\n        </li>\n        <li><a href=\"/quizForm\">퀴즈 만들기</a></li>\n      </ul>\n    </nav>\n  </header>\n</template>\n\n<script>\nimport { ref, onMounted } from 'vue';\nimport { useRouter } from 'vue-router';\n\nexport default {\n  name: \"AppHeader\",\n  setup() {\n    const isLoggedIn = ref(false);\n    const router = useRouter();\n\n    // 페이지 로드 시 JWT 토큰이 존재하는지 확인하여 로그인 상태 설정\n    onMounted(() => {\n      isLoggedIn.value = !!localStorage.getItem('jwtToken');\n    });\n\n    function navigateToLogin() {\n      router.push('/login'); // 로그인 페이지로 이동\n    }\n\n    function login() {\n      // 여기에 실제 로그인 로직 추가 (예: 서버에 로그인 요청 후 JWT 토큰 수신)\n      const jwtToken = \"exampleToken\";\n      localStorage.setItem('jwtToken', jwtToken); // JWT 토큰을 로컬스토리지에 저장\n      isLoggedIn.value = true;\n\n      \n    }\n\n    function logout() {\n  // 로그아웃 시 모든 관련 데이터 삭제\n  localStorage.removeItem('jwtToken');\n  localStorage.removeItem('memberId');\n  localStorage.removeItem('memberNickname');\n  isLoggedIn.value = false;\n  \n  // 홈 페이지로 이동\n  router.push('/login');\n}\n\n\n    return {\n      isLoggedIn,\n      login,\n      logout,\n      navigateToLogin,\n    };\n  },\n};\n</script>\n\n\n\n<style scoped>\n.app-header {\n  background-color: #FFF;\n  height: 100px; /* 헤더 높이를 명확하게 지정 */\n  padding: 1rem 2rem; /* 좌우 여백을 늘려줌 */\n  color: black;\n  display: flex;\n  justify-content: space-between; /* 이미지와 내비게이션 사이의 공간을 확보 */\n  align-items: center;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  z-index: 1000; /* 헤더를 다른 요소 위에 위치시키기 위한 z-index */\n  box-sizing: border-box; /* 패딩을 포함한 전체 너비 계산 */\n  border-bottom: 2px solid #ddd; /* 구분 선 추가 */\n}\n\nnav ul {\n  list-style: none;\n  display: flex;\n  gap: 1rem;\n  margin: 0;\n  padding: 0;\n}\n\nnav a {\n  color: black;\n  text-decoration: none;\n}\n\n.header-image {\n  height: 80px; /* 이미지 높이 설정 */\n  width: auto; /* 가로 비율을 자동으로 설정 */\n}\n</style>\n"],"mappings":";AAgBA,SAASA,GAAG,EAAEC,SAAQ,QAAS,KAAK;AACpC,SAASC,SAAQ,QAAS,YAAY;AAEtC,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,KAAKA,CAAA,EAAG;IACN,MAAMC,UAAS,GAAIL,GAAG,CAAC,KAAK,CAAC;IAC7B,MAAMM,MAAK,GAAIJ,SAAS,CAAC,CAAC;;IAE1B;IACAD,SAAS,CAAC,MAAM;MACdI,UAAU,CAACE,KAAI,GAAI,CAAC,CAACC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IACvD,CAAC,CAAC;IAEF,SAASC,eAAeA,CAAA,EAAG;MACzBJ,MAAM,CAACK,IAAI,CAAC,QAAQ,CAAC,EAAE;IACzB;IAEA,SAASC,KAAKA,CAAA,EAAG;MACf;MACA,MAAMC,QAAO,GAAI,cAAc;MAC/BL,YAAY,CAACM,OAAO,CAAC,UAAU,EAAED,QAAQ,CAAC,EAAE;MAC5CR,UAAU,CAACE,KAAI,GAAI,IAAI;IAGzB;IAEA,SAASQ,MAAMA,CAAA,EAAG;MACpB;MACAP,YAAY,CAACQ,UAAU,CAAC,UAAU,CAAC;MACnCR,YAAY,CAACQ,UAAU,CAAC,UAAU,CAAC;MACnCR,YAAY,CAACQ,UAAU,CAAC,gBAAgB,CAAC;MACzCX,UAAU,CAACE,KAAI,GAAI,KAAK;;MAExB;MACAD,MAAM,CAACK,IAAI,CAAC,QAAQ,CAAC;IACvB;IAGI,OAAO;MACLN,UAAU;MACVO,KAAK;MACLG,MAAM;MACNL;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}