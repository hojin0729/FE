{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.find.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport \"core-js/modules/esnext.iterator.some.js\";\nimport AppHeader from \"./Header.vue\";\nimport AppFooter from \"./Footer.vue\";\nimport axios from \"axios\";\nexport default {\n  name: \"QuizDetailPage\",\n  components: {\n    AppHeader,\n    AppFooter\n  },\n  data() {\n    return {\n      quiz: {\n        quizId: null,\n        memberId: null,\n        quizTitle: \"\",\n        quizCategory: \"\",\n        quizLevel: \"\",\n        quizAnswer: \"\",\n        quizDescription: \"\",\n        memberNickname: \"\",\n        date: null,\n        count: 0\n      },\n      comments: [],\n      newComment: \"\",\n      selectedAnswer: null,\n      showResult: false,\n      currentUserId: null,\n      memberNickname: localStorage.getItem(\"memberNickname\") || \"\",\n      memberId: localStorage.getItem(\"memberId\") || \"\",\n      bookmarks: []\n    };\n  },\n  methods: {\n    async fetchQuizDetail() {\n      const token = localStorage.getItem(\"jwtToken\");\n      if (!token) {\n        console.error(\"로그인이 필요합니다.\");\n        this.$router.push(\"/login\");\n        return;\n      }\n      try {\n        const beUrl = process.env.VUE_APP_BE_API_URL;\n        const quizId = this.$route.params.id;\n        const response = await axios.get(`${beUrl}/api/v1/quizs/quiz/${quizId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        console.log('백엔드 응답 데이터:', response.data);\n        this.quiz = {\n          quizId: response.data.quizId,\n          quizTitle: response.data.quizTitle,\n          quizCategory: response.data.quizCategory,\n          quizLevel: response.data.quizLevel,\n          quizAnswer: response.data.quizAnswer,\n          quizDescription: response.data.quizDescription,\n          memberNickname: response.data.memberNickname,\n          date: response.data.date,\n          count: response.data.count || 0\n        };\n        console.log('매핑된 퀴즈 데이터:', {\n          제목: this.quiz.quizTitle,\n          카테고리: this.quiz.quizCategory,\n          난이도: this.quiz.quizLevel,\n          작성자: this.quiz.memberNickname,\n          작성일: this.quiz.date,\n          원본데이터: response.data\n        });\n      } catch (error) {\n        console.error(\"퀴즈 상세 정보 조회 실패:\", error);\n        console.error('에러 응답:', error.response?.data);\n        alert(\"퀴즈 정보를 불러오는 데 실패했습니다.\");\n      }\n    },\n    async fetchComments() {\n      const token = localStorage.getItem(\"jwtToken\");\n      if (!token) return;\n      try {\n        const beUrl = process.env.VUE_APP_BE_API_URL;\n        const quizId = this.$route.params.id;\n        const response = await axios.get(`${beUrl}/api/v1/comments/quiz/${quizId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        this.comments = response.data.map(comment => ({\n          ...comment,\n          isEditing: false,\n          editContent: comment.quizCommentContent\n        }));\n      } catch (error) {\n        console.error(\"댓글 조회 실패:\", error);\n      }\n    },\n    isCurrentUserComment(commentMemberId) {\n      return commentMemberId === this.memberId;\n    },\n    async submitComment() {\n      if (!this.newComment.trim()) {\n        alert(\"댓글 내용을 입력해주세요.\");\n        return;\n      }\n      const token = localStorage.getItem(\"jwtToken\");\n      if (!token) {\n        alert(\"로그인이 필요합니다.\");\n        this.$router.push(\"/login\");\n        return;\n      }\n      try {\n        const beUrl = process.env.VUE_APP_BE_API_URL;\n        const quizId = this.$route.params.id;\n        await axios.post(`${beUrl}/api/v1/comments/quiz/${quizId}`, {\n          memberId: this.memberId,\n          quizCommentContent: this.newComment\n        }, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        this.newComment = \"\";\n        await this.fetchComments();\n      } catch (error) {\n        console.error(\"댓글 작성 실패:\", error);\n        alert(\"댓글 작성에 실패했습니다.\");\n      }\n    },\n    async deleteComment(commentId) {\n      if (!confirm(\"댓글을 삭제하시겠습니까?\")) return;\n      const token = localStorage.getItem(\"jwtToken\");\n      if (!token) return;\n      try {\n        const beUrl = process.env.VUE_APP_BE_API_URL;\n        await axios.delete(`${beUrl}/api/v1/comments/${commentId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        await this.fetchComments();\n      } catch (error) {\n        console.error(\"댓글 삭제 실패:\", error);\n        alert(\"댓글 삭제에 실패했습니다.\");\n      }\n    },\n    selectAnswer(answer) {\n      this.selectedAnswer = answer;\n    },\n    submitAnswer() {\n      this.showResult = true;\n    },\n    formatDate(date) {\n      if (!date) return '';\n      try {\n        // Array 형식인 경우 (댓글 날짜)\n        if (Array.isArray(date)) {\n          const year = date[0];\n          const month = String(date[1]).padStart(2, '0');\n          const day = String(date[2]).padStart(2, '0');\n          const hours = String(date[3]).padStart(2, '0');\n          const minutes = String(date[4]).padStart(2, '0');\n          return `${year}-${month}-${day} ${hours}:${minutes}`;\n        }\n        // ISO 문자열 형식인 경우 (퀴즈 성 날짜)\n        else {\n          const dateObj = new Date(date);\n          const year = dateObj.getFullYear();\n          const month = String(dateObj.getMonth() + 1).padStart(2, '0');\n          const day = String(dateObj.getDate()).padStart(2, '0');\n          const hours = String(dateObj.getHours()).padStart(2, '0');\n          const minutes = String(dateObj.getMinutes()).padStart(2, '0');\n          return `${year}-${month}-${day} ${hours}:${minutes}`;\n        }\n      } catch (error) {\n        console.error('날짜 변환 에러:', error, date);\n        return '';\n      }\n    },\n    startEditing(comment) {\n      comment.isEditing = true;\n      comment.editContent = comment.quizCommentContent;\n    },\n    async saveEdit(comment) {\n      if (!comment.editContent.trim()) {\n        alert(\"댓글 내용을 입력해주세요.\");\n        return;\n      }\n      const token = localStorage.getItem(\"jwtToken\");\n      if (!token) return;\n      try {\n        const beUrl = process.env.VUE_APP_BE_API_URL;\n        await axios.put(`${beUrl}/api/v1/comments/${comment.quizCommentId}`, {\n          memberId: this.memberId,\n          quizCommentContent: comment.editContent\n        }, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        comment.isEditing = false;\n        await this.fetchComments();\n      } catch (error) {\n        console.error(\"댓글 수정 실패:\", error);\n        alert(\"댓글 수정에 실패했습니다.\");\n      }\n    },\n    cancelEdit(comment) {\n      comment.isEditing = false;\n      comment.editContent = comment.quizCommentContent;\n    },\n    isBookmarked(quizId) {\n      return this.bookmarks.some(bookmark => bookmark.quizId === quizId) || localStorage.getItem(`bookmark_${quizId}`) === 'true';\n    },\n    async toggleBookmark(quizId) {\n      const token = localStorage.getItem(\"jwtToken\");\n      const memberId = localStorage.getItem(\"memberId\");\n      if (!token || !memberId) {\n        alert(\"로그인이 필요한 서비스입니다.\");\n        return;\n      }\n      try {\n        const beUrl = process.env.VUE_APP_BE_API_URL;\n        const bookmark = this.bookmarks.find(b => b.quizId === quizId);\n        if (bookmark) {\n          // 북마크 삭제\n          await axios.delete(`${beUrl}/api/v1/bookmarks/${bookmark.bookmarkId}`, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          this.bookmarks = this.bookmarks.filter(b => b.bookmarkId !== bookmark.bookmarkId);\n          // localStorage에서 북마크 상태 제거\n          localStorage.removeItem(`bookmark_${quizId}`);\n        } else {\n          // 북마크 추가\n          const response = await axios.post(`${beUrl}/api/v1/bookmarks`, {\n            memberId: Number(memberId),\n            quizId: Number(quizId)\n          }, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          if (response.data) {\n            this.bookmarks.push(response.data);\n            // localStorage에 북마크 상태 저장\n            localStorage.setItem(`bookmark_${quizId}`, 'true');\n          }\n        }\n      } catch (error) {\n        console.error(\"북마크 처리 실패:\", error);\n        alert(\"북마크 처리에 실패했습니다.\");\n      }\n    },\n    async fetchBookmarks() {\n      const token = localStorage.getItem(\"jwtToken\");\n      const memberId = localStorage.getItem(\"memberId\");\n      if (!token || !memberId) return;\n      try {\n        const beUrl = process.env.VUE_APP_BE_API_URL;\n        const response = await axios.get(`${beUrl}/api/v1/bookmarks/member/${memberId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        this.bookmarks = response.data;\n\n        // localStorage 초기화 및 업데이트\n        // 먼저 기존의 모든 북마크 관련 localStorage 항목을 제거\n        for (let i = 0; i < localStorage.length; i++) {\n          const key = localStorage.key(i);\n          if (key && key.startsWith('bookmark_')) {\n            localStorage.removeItem(key);\n          }\n        }\n\n        // 현재 북마크 상태로 다시 설정\n        this.bookmarks.forEach(bookmark => {\n          localStorage.setItem(`bookmark_${bookmark.quizId}`, 'true');\n        });\n      } catch (error) {\n        console.error(\"북마크 목록 조회 실패:\", error);\n      }\n    }\n  },\n  async mounted() {\n    const memberId = localStorage.getItem(\"memberId\");\n    this.currentUserId = memberId ? parseInt(memberId) : null;\n    await this.fetchQuizDetail();\n    await this.fetchComments();\n    await this.fetchBookmarks();\n  }\n};","map":{"version":3,"names":["AppHeader","AppFooter","axios","name","components","data","quiz","quizId","memberId","quizTitle","quizCategory","quizLevel","quizAnswer","quizDescription","memberNickname","date","count","comments","newComment","selectedAnswer","showResult","currentUserId","localStorage","getItem","bookmarks","methods","fetchQuizDetail","token","console","error","$router","push","beUrl","process","env","VUE_APP_BE_API_URL","$route","params","id","response","get","headers","Authorization","log","제목","카테고리","난이도","작성자","작성일","원본데이터","alert","fetchComments","map","comment","isEditing","editContent","quizCommentContent","isCurrentUserComment","commentMemberId","submitComment","trim","post","deleteComment","commentId","confirm","delete","selectAnswer","answer","submitAnswer","formatDate","Array","isArray","year","month","String","padStart","day","hours","minutes","dateObj","Date","getFullYear","getMonth","getDate","getHours","getMinutes","startEditing","saveEdit","put","quizCommentId","cancelEdit","isBookmarked","some","bookmark","toggleBookmark","find","b","bookmarkId","filter","removeItem","Number","setItem","fetchBookmarks","i","length","key","startsWith","forEach","mounted","parseInt"],"sources":["/home/runner/work/FE/FE/src/components/QuizDetailPage.vue"],"sourcesContent":["<template>\n  <div class=\"quiz-detail-page\">\n    <AppHeader />\n    <div class=\"content\">\n      <div class=\"quiz-detail\">\n        <!-- 퀴즈 정보 섹션 -->\n        <div class=\"quiz-info\">\n          <div class=\"quiz-header\">\n            <!-- 메타 정보를 먼저 배치 -->\n            <div class=\"quiz-meta\">\n              <span class=\"category-badge\">{{ quiz.quizCategory }}</span>\n              <span class=\"level-badge\">{{ quiz.quizLevel }}</span>\n              <span class=\"author\">작성자: {{ quiz.memberNickname }}</span>\n              <span class=\"date\">작성일: {{ formatDate(quiz.date) }}</span>\n              <img \n                src=\"@/assets/Icon.png\" \n                class=\"bookmark-icon\" \n                :class=\"{ 'bookmarked': isBookmarked(quiz.quizId) }\"\n                @click.stop=\"toggleBookmark(quiz.quizId)\"\n                alt=\"bookmark\"\n              />\n            </div>\n            <!-- 제목을 메타 정보 아래에 배치 -->\n            <div class=\"title-wrapper\">\n              <h2>{{ quiz.quizTitle }}</h2>\n            </div>\n            <hr class=\"divider\">\n          </div>\n          \n          <!-- 퀴즈 내용 -->\n          <div class=\"quiz-content\">\n            <div class=\"quiz-description\">\n              <h3>문제 해설</h3>\n              <p>{{ quiz.quizDescription }}</p>\n            </div>\n            <div class=\"quiz-answer\">\n              <h3>정답</h3>\n              <p>{{ quiz.quizAnswer }}</p>\n            </div>\n          </div>\n        </div>\n\n        <!-- 댓글 섹션 -->\n        <div class=\"comments-section\">\n          <h3>댓글</h3>\n          <div class=\"comment-form\">\n            <textarea \n              v-model=\"newComment\" \n              placeholder=\"댓글을 작성해주세요\"\n              rows=\"3\"\n              maxlength=\"500\"\n            ></textarea>\n            <div class=\"comment-form-footer\">\n              <span class=\"char-count\">{{ newComment.length }}/500자</span>\n              <button @click=\"submitComment\" class=\"comment-submit\">댓글 작성</button>\n            </div>\n          </div>\n          \n          <div class=\"comments-list\">\n            <div v-for=\"comment in comments\" :key=\"comment.quizCommentId\" class=\"comment\">\n              <div class=\"comment-header\">\n                <div class=\"comment-left\">\n                  <span class=\"comment-author\">{{ comment.memberNickname }}</span>\n                  <span class=\"comment-date\">{{ formatDate(comment.quizCommentCreatedAt) }}</span>\n                </div>\n                <div class=\"comment-actions\" v-if=\"comment.memberNickname === memberNickname\">\n                  <button \n                    v-if=\"!comment.isEditing\" \n                    @click=\"startEditing(comment)\" \n                    class=\"edit-btn\"\n                  >\n                    수정\n                  </button>\n                  <button \n                    @click=\"deleteComment(comment.quizCommentId)\" \n                    class=\"delete-btn\"\n                  >\n                    삭제\n                  </button>\n                </div>\n              </div>\n              <div v-if=\"comment.isEditing\" class=\"edit-form\">\n                <textarea \n                  v-model=\"comment.editContent\" \n                  rows=\"3\"\n                  maxlength=\"500\"\n                ></textarea>\n                <div class=\"edit-form-footer\">\n                  <span class=\"char-count\">{{ comment.editContent.length }}/500자</span>\n                  <div class=\"edit-buttons\">\n                    <button @click=\"saveEdit(comment)\" class=\"save-btn\">저장</button>\n                    <button @click=\"cancelEdit(comment)\" class=\"cancel-btn\">취소</button>\n                  </div>\n                </div>\n              </div>\n              <p v-else class=\"comment-content\">{{ comment.quizCommentContent }}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <AppFooter />\n  </div>\n</template>\n\n<script>\nimport AppHeader from \"./Header.vue\";\nimport AppFooter from \"./Footer.vue\";\nimport axios from \"axios\";\n\nexport default {\n  name: \"QuizDetailPage\",\n  components: {\n    AppHeader,\n    AppFooter,\n  },\n  data() {\n    return {\n      quiz: {\n        quizId: null,\n        memberId: null,\n        quizTitle: \"\",\n        quizCategory: \"\",\n        quizLevel: \"\",\n        quizAnswer: \"\",\n        quizDescription: \"\",\n        memberNickname: \"\",\n        date: null,\n        count: 0\n      },\n      comments: [],\n      newComment: \"\",\n      selectedAnswer: null,\n      showResult: false,\n      currentUserId: null,\n      memberNickname: localStorage.getItem(\"memberNickname\") || \"\",\n      memberId: localStorage.getItem(\"memberId\") || \"\",\n      bookmarks: [],\n    };\n  },\n  methods: {\n    async fetchQuizDetail() {\n      const token = localStorage.getItem(\"jwtToken\");\n      if (!token) {\n        console.error(\"로그인이 필요합니다.\");\n        this.$router.push(\"/login\");\n        return;\n      }\n\n      try {\n        const beUrl = process.env.VUE_APP_BE_API_URL;\n        const quizId = this.$route.params.id;\n        \n        const response = await axios.get(`${beUrl}/api/v1/quizs/quiz/${quizId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        });\n\n        console.log('백엔드 응답 데이터:', response.data);\n\n        this.quiz = {\n          quizId: response.data.quizId,\n          quizTitle: response.data.quizTitle,\n          quizCategory: response.data.quizCategory,\n          quizLevel: response.data.quizLevel,\n          quizAnswer: response.data.quizAnswer,\n          quizDescription: response.data.quizDescription,\n          memberNickname: response.data.memberNickname,\n          date: response.data.date,\n          count: response.data.count || 0\n        };\n\n        console.log('매핑된 퀴즈 데이터:', {\n          제목: this.quiz.quizTitle,\n          카테고리: this.quiz.quizCategory,\n          난이도: this.quiz.quizLevel,\n          작성자: this.quiz.memberNickname,\n          작성일: this.quiz.date,\n          원본데이터: response.data\n        });\n\n      } catch (error) {\n        console.error(\"퀴즈 상세 정보 조회 실패:\", error);\n        console.error('에러 응답:', error.response?.data);\n        alert(\"퀴즈 정보를 불러오는 데 실패했습니다.\");\n      }\n    },\n    async fetchComments() {\n      const token = localStorage.getItem(\"jwtToken\");\n      if (!token) return;\n\n      try {\n        const beUrl = process.env.VUE_APP_BE_API_URL;\n        const quizId = this.$route.params.id;\n        \n        const response = await axios.get(`${beUrl}/api/v1/comments/quiz/${quizId}`, {\n          headers: { Authorization: `Bearer ${token}` }\n        });\n        \n        this.comments = response.data.map(comment => ({\n          ...comment,\n          isEditing: false,\n          editContent: comment.quizCommentContent\n        }));\n        \n      } catch (error) {\n        console.error(\"댓글 조회 실패:\", error);\n      }\n    },\n    isCurrentUserComment(commentMemberId) {\n      return commentMemberId === this.memberId;\n    },\n    async submitComment() {\n      if (!this.newComment.trim()) {\n        alert(\"댓글 내용을 입력해주세요.\");\n        return;\n      }\n\n      const token = localStorage.getItem(\"jwtToken\");\n      if (!token) {\n        alert(\"로그인이 필요합니다.\");\n        this.$router.push(\"/login\");\n        return;\n      }\n\n      try {\n        const beUrl = process.env.VUE_APP_BE_API_URL;\n        const quizId = this.$route.params.id;\n        \n        await axios.post(\n          `${beUrl}/api/v1/comments/quiz/${quizId}`,\n          {\n            memberId: this.memberId,\n            quizCommentContent: this.newComment\n          },\n          { headers: { Authorization: `Bearer ${token}` }}\n        );\n\n        this.newComment = \"\";\n        await this.fetchComments();\n      } catch (error) {\n        console.error(\"댓글 작성 실패:\", error);\n        alert(\"댓글 작성에 실패했습니다.\");\n      }\n    },\n    async deleteComment(commentId) {\n      if (!confirm(\"댓글을 삭제하시겠습니까?\")) return;\n\n      const token = localStorage.getItem(\"jwtToken\");\n      if (!token) return;\n\n      try {\n        const beUrl = process.env.VUE_APP_BE_API_URL;\n        \n        await axios.delete(`${beUrl}/api/v1/comments/${commentId}`, {\n          headers: { Authorization: `Bearer ${token}` }\n        });\n\n        await this.fetchComments();\n      } catch (error) {\n        console.error(\"댓글 삭제 실패:\", error);\n        alert(\"댓글 삭제에 실패했습니다.\");\n      }\n    },\n    selectAnswer(answer) {\n      this.selectedAnswer = answer;\n    },\n    submitAnswer() {\n      this.showResult = true;\n    },\n    formatDate(date) {\n      if (!date) return '';\n      \n      try {\n        // Array 형식인 경우 (댓글 날짜)\n        if (Array.isArray(date)) {\n          const year = date[0];\n          const month = String(date[1]).padStart(2, '0');\n          const day = String(date[2]).padStart(2, '0');\n          const hours = String(date[3]).padStart(2, '0');\n          const minutes = String(date[4]).padStart(2, '0');\n          \n          return `${year}-${month}-${day} ${hours}:${minutes}`;\n        } \n        // ISO 문자열 형식인 경우 (퀴즈 성 날짜)\n        else {\n          const dateObj = new Date(date);\n          const year = dateObj.getFullYear();\n          const month = String(dateObj.getMonth() + 1).padStart(2, '0');\n          const day = String(dateObj.getDate()).padStart(2, '0');\n          const hours = String(dateObj.getHours()).padStart(2, '0');\n          const minutes = String(dateObj.getMinutes()).padStart(2, '0');\n          \n          return `${year}-${month}-${day} ${hours}:${minutes}`;\n        }\n      } catch (error) {\n        console.error('날짜 변환 에러:', error, date);\n        return '';\n      }\n    },\n    startEditing(comment) {\n      comment.isEditing = true;\n      comment.editContent = comment.quizCommentContent;\n    },\n    async saveEdit(comment) {\n      if (!comment.editContent.trim()) {\n        alert(\"댓글 내용을 입력해주세요.\");\n        return;\n      }\n\n      const token = localStorage.getItem(\"jwtToken\");\n      if (!token) return;\n\n      try {\n        const beUrl = process.env.VUE_APP_BE_API_URL;\n        \n        await axios.put(\n          `${beUrl}/api/v1/comments/${comment.quizCommentId}`,\n          {\n            memberId: this.memberId,\n            quizCommentContent: comment.editContent\n          },\n          { headers: { Authorization: `Bearer ${token}` }}\n        );\n\n        comment.isEditing = false;\n        await this.fetchComments();\n      } catch (error) {\n        console.error(\"댓글 수정 실패:\", error);\n        alert(\"댓글 수정에 실패했습니다.\");\n      }\n    },\n    cancelEdit(comment) {\n      comment.isEditing = false;\n      comment.editContent = comment.quizCommentContent;\n    },\n    isBookmarked(quizId) {\n      return this.bookmarks.some(bookmark => bookmark.quizId === quizId) || \n             localStorage.getItem(`bookmark_${quizId}`) === 'true';\n    },\n    async toggleBookmark(quizId) {\n      const token = localStorage.getItem(\"jwtToken\");\n      const memberId = localStorage.getItem(\"memberId\");\n      \n      if (!token || !memberId) {\n        alert(\"로그인이 필요한 서비스입니다.\");\n        return;\n      }\n\n      try {\n        const beUrl = process.env.VUE_APP_BE_API_URL;\n        const bookmark = this.bookmarks.find(b => b.quizId === quizId);\n        \n        if (bookmark) {\n          // 북마크 삭제\n          await axios.delete(`${beUrl}/api/v1/bookmarks/${bookmark.bookmarkId}`, {\n            headers: { Authorization: `Bearer ${token}` }\n          });\n          this.bookmarks = this.bookmarks.filter(b => b.bookmarkId !== bookmark.bookmarkId);\n          // localStorage에서 북마크 상태 제거\n          localStorage.removeItem(`bookmark_${quizId}`);\n        } else {\n          // 북마크 추가\n          const response = await axios.post(\n            `${beUrl}/api/v1/bookmarks`,\n            {\n              memberId: Number(memberId),\n              quizId: Number(quizId)\n            },\n            { headers: { Authorization: `Bearer ${token}` }}\n          );\n          \n          if (response.data) {\n            this.bookmarks.push(response.data);\n            // localStorage에 북마크 상태 저장\n            localStorage.setItem(`bookmark_${quizId}`, 'true');\n          }\n        }\n      } catch (error) {\n        console.error(\"북마크 처리 실패:\", error);\n        alert(\"북마크 처리에 실패했습니다.\");\n      }\n    },\n    async fetchBookmarks() {\n      const token = localStorage.getItem(\"jwtToken\");\n      const memberId = localStorage.getItem(\"memberId\");\n      \n      if (!token || !memberId) return;\n\n      try {\n        const beUrl = process.env.VUE_APP_BE_API_URL;\n        const response = await axios.get(`${beUrl}/api/v1/bookmarks/member/${memberId}`, {\n          headers: { Authorization: `Bearer ${token}` }\n        });\n        this.bookmarks = response.data;\n        \n        // localStorage 초기화 및 업데이트\n        // 먼저 기존의 모든 북마크 관련 localStorage 항목을 제거\n        for (let i = 0; i < localStorage.length; i++) {\n          const key = localStorage.key(i);\n          if (key && key.startsWith('bookmark_')) {\n            localStorage.removeItem(key);\n          }\n        }\n        \n        // 현재 북마크 상태로 다시 설정\n        this.bookmarks.forEach(bookmark => {\n          localStorage.setItem(`bookmark_${bookmark.quizId}`, 'true');\n        });\n      } catch (error) {\n        console.error(\"북마크 목록 조회 실패:\", error);\n      }\n    },\n  },\n  async mounted() {\n    const memberId = localStorage.getItem(\"memberId\");\n    this.currentUserId = memberId ? parseInt(memberId) : null;\n    \n    await this.fetchQuizDetail();\n    await this.fetchComments();\n    await this.fetchBookmarks();\n  }\n};\n</script>\n\n<style scoped>\n.quiz-detail-page {\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  overflow-y: scroll;\n  max-height: 100vh;\n  scrollbar-width: none;\n  -ms-overflow-style: none;\n}\n\n.content {\n  flex: 1;\n  padding: 20px;\n  max-width: 1200px;\n  margin: 0 auto;\n  width: 100%;\n  padding-top: 80px;\n  padding-bottom: 40px;\n  overflow-y: scroll;\n  scrollbar-width: none;\n  -ms-overflow-style: none;\n}\n\n.content::-webkit-scrollbar {\n  display: none;\n}\n\n.quiz-detail {\n  background-color: white;\n  border-radius: 8px;\n  padding: 20px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  margin-bottom: 20px;\n}\n\n.quiz-header {\n  text-align: left;\n  margin-bottom: 20px;\n}\n\n.quiz-header h2 {\n  font-size: 24px;\n  margin: 0 0 15px 0;\n  padding: 0;\n  color: #333;\n}\n\n.quiz-meta {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 8px;\n  align-items: center;\n  color: #666;\n  font-size: 14px;\n  margin-bottom: 20px;\n}\n\n.quiz-info {\n  background-color: white;\n  border-radius: 8px;\n  padding: 20px;\n  margin-bottom: 20px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.quiz-content {\n  margin-top: 20px;\n}\n\n.quiz-description h3,\n.quiz-answer h3 {\n  font-size: 18px;\n  color: #333;\n  margin-bottom: 10px;\n  text-align: left;\n}\n\n.quiz-description p,\n.quiz-answer p {\n  line-height: 1.6;\n  color: #444;\n  text-align: left;\n}\n\n.category-badge,\n.level-badge {\n  display: inline-block;\n  padding: 2px 8px;\n  border-radius: 12px;\n  font-size: 12px;\n  background-color: #e9ecef;\n  color: #495057;\n}\n\n.answer-section {\n  display: flex;\n  justify-content: center;\n  gap: 20px;\n  margin: 20px 0;\n}\n\n.answer-button {\n  width: 100px;\n  height: 100px;\n  border: 2px solid #ddd;\n  border-radius: 50%;\n  background-color: white;\n  font-size: 24px;\n  cursor: pointer;\n  transition: all 0.2s;\n}\n\n.answer-button:hover {\n  border-color: rgba(0, 0, 0, 0.865);\n}\n\n.answer-button.selected {\n  background-color: rgba(0, 0, 0, 0.865);\n  color: white;\n  border-color: rgba(0, 0, 0, 0.865);\n}\n\n.answer-button.correct {\n  background-color: #28a745;\n  color: white;\n  border-color: #28a745;\n}\n\n.answer-button.wrong {\n  background-color: #dc3545;\n  color: white;\n  border-color: #dc3545;\n}\n\n.submit-button {\n  display: block;\n  margin: 20px auto;\n  padding: 10px 20px;\n  background-color: rgba(0, 0, 0, 0.865);\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.quiz-explanation {\n  margin-top: 30px;\n  padding: 20px;\n  background-color: #f8f9fa;\n  border-radius: 4px;\n}\n\n.comments-section {\n  margin-top: 40px;\n  max-height: calc(100vh - 200px);\n  overflow-y: scroll;\n  scrollbar-width: none;\n  -ms-overflow-style: none;\n}\n\n.comments-section::-webkit-scrollbar {\n  display: none;\n}\n\n.comment-form {\n  margin-bottom: 20px;\n}\n\n.comment-form textarea {\n  width: 98%;\n  padding: 10px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  resize: vertical;\n  margin-bottom: 10px;\n}\n\n.comment-submit {\n  padding: 8px 16px;\n  background-color: rgba(0, 0, 0, 0.865);\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.comment {\n  padding: 15px;\n  border-bottom: 1px solid #ddd;\n}\n\n.comment-header {\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 8px;\n  font-size: 14px;\n}\n\n.comment-left {\n  display: flex;\n  align-items: center;\n  gap: 16px;\n}\n\n.comment-author {\n  font-weight: bold;\n  color: #333;\n}\n\n.comment-date {\n  color: #666;\n  font-size: 0.9em;\n}\n\n.view-count {\n  color: #666;\n  font-size: 0.9em;\n}\n\n.quiz-meta > span {\n  display: inline-flex;\n  align-items: center;\n}\n\n.quiz-meta > span:not(:last-child)::after {\n  content: \"•\";\n  margin: 0 8px;\n  color: #ddd;\n}\n\n.comment-form-footer {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: 8px;\n}\n\n.char-count {\n  font-size: 12px;\n  color: #666;\n}\n\n.delete-btn {\n  background: none;\n  border: none;\n  color: #dc3545;\n  cursor: pointer;\n  font-size: 12px;\n  margin-left: 10px;\n}\n\n.delete-btn:hover {\n  text-decoration: underline;\n}\n\n.comment-actions {\n  display: flex;\n  align-items: center;\n}\n\n.edit-btn {\n  background: none;\n  border: none;\n  color: #666;\n  cursor: pointer;\n  font-size: 12px;\n  margin-right: 10px;\n}\n\n.edit-btn:hover {\n  text-decoration: underline;\n}\n\n.edit-form {\n  margin-top: 10px;\n}\n\n.edit-form textarea {\n  width: 100%;\n  padding: 8px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  resize: vertical;\n}\n\n.edit-form-footer {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: 8px;\n}\n\n.edit-buttons {\n  display: flex;\n  gap: 8px;\n}\n\n.save-btn,\n.cancel-btn {\n  padding: 4px 12px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 12px;\n}\n\n.save-btn {\n  background-color: rgba(0, 0, 0, 0.865);\n  color: white;\n}\n\n.cancel-btn {\n  background-color: #e9ecef;\n  color: #666;\n}\n\n.save-btn:hover {\n  background-color: #000;\n}\n\n.cancel-btn:hover {\n  background-color: #dee2e6;\n}\n\n.bookmark-icon {\n  width: 20px;\n  height: 20px;\n  cursor: pointer;\n}\n\n.bookmark-icon:hover {\n  opacity: 0.5;\n}\n\n.bookmark-icon.bookmarked {\n  opacity: 1;\n  filter: invert(28%) sepia(67%) saturate(669%) hue-rotate(346deg) brightness(89%) contrast(83%);\n}\n\n.divider {\n  border: 0;\n  height: 1px;\n  background-color: #ddd;\n  margin: 20px 0;\n  width: 100%;\n}\n\n@media (max-width: 768px) {\n  .content {\n    padding: 10px;\n  }\n  \n  .quiz-meta {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 8px;\n  }\n  \n  .answer-section {\n    flex-direction: column;\n    align-items: center;\n  }\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}