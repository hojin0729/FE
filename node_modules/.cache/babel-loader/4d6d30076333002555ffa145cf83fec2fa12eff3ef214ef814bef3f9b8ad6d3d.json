{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, withDirectives as _withDirectives, vModelText as _vModelText, vModelCheckbox as _vModelCheckbox, withModifiers as _withModifiers, normalizeClass as _normalizeClass, createCommentVNode as _createCommentVNode, withKeys as _withKeys } from \"vue\";\nimport _imports_0 from '@/assets/Icon.png';\nconst _hoisted_1 = {\n  class: \"my-page\"\n};\nconst _hoisted_2 = {\n  class: \"content\"\n};\nconst _hoisted_3 = {\n  class: \"games-section\"\n};\nconst _hoisted_4 = {\n  class: \"games-header\"\n};\nconst _hoisted_5 = {\n  class: \"games-list\"\n};\nconst _hoisted_6 = {\n  class: \"game-header\"\n};\nconst _hoisted_7 = {\n  class: \"game-title\"\n};\nconst _hoisted_8 = {\n  class: \"quiz-list\"\n};\nconst _hoisted_9 = {\n  class: \"quiz-info\"\n};\nconst _hoisted_10 = {\n  class: \"quiz-title\"\n};\nconst _hoisted_11 = {\n  class: \"quiz-badges\"\n};\nconst _hoisted_12 = {\n  class: \"category-badge\"\n};\nconst _hoisted_13 = {\n  class: \"level-badge\"\n};\nconst _hoisted_14 = [\"onClick\"];\nconst _hoisted_15 = {\n  class: \"game-footer\"\n};\nconst _hoisted_16 = {\n  class: \"game-buttons\"\n};\nconst _hoisted_17 = [\"onClick\"];\nconst _hoisted_18 = [\"onClick\"];\nconst _hoisted_19 = {\n  key: 0,\n  class: \"modal\"\n};\nconst _hoisted_20 = {\n  class: \"modal-content\"\n};\nconst _hoisted_21 = {\n  class: \"search-area\"\n};\nconst _hoisted_22 = {\n  class: \"search-container\"\n};\nconst _hoisted_23 = {\n  class: \"quiz-table\"\n};\nconst _hoisted_24 = [\"onClick\"];\nconst _hoisted_25 = [\"value\"];\nconst _hoisted_26 = [\"onClick\"];\nconst _hoisted_27 = {\n  class: \"modal-buttons\"\n};\nconst _hoisted_28 = [\"disabled\"];\nconst _hoisted_29 = {\n  class: \"pagination-buttons\"\n};\nconst _hoisted_30 = [\"disabled\"];\nconst _hoisted_31 = {\n  class: \"page-info\"\n};\nconst _hoisted_32 = [\"disabled\"];\nconst _hoisted_33 = {\n  key: 0,\n  class: \"comments-modal\"\n};\nconst _hoisted_34 = {\n  class: \"comments-list\"\n};\nconst _hoisted_35 = {\n  class: \"comment-header\"\n};\nconst _hoisted_36 = {\n  class: \"comment-left\"\n};\nconst _hoisted_37 = {\n  class: \"comment-author\"\n};\nconst _hoisted_38 = {\n  class: \"comment-date\"\n};\nconst _hoisted_39 = {\n  class: \"comment-content\"\n};\nconst _hoisted_40 = {\n  key: 1,\n  class: \"modal\"\n};\nconst _hoisted_41 = {\n  class: \"modal-content\"\n};\nconst _hoisted_42 = {\n  class: \"search-area\"\n};\nconst _hoisted_43 = {\n  class: \"search-container\"\n};\nconst _hoisted_44 = {\n  class: \"quiz-table\"\n};\nconst _hoisted_45 = [\"checked\"];\nconst _hoisted_46 = [\"onClick\"];\nconst _hoisted_47 = [\"value\"];\nconst _hoisted_48 = [\"onClick\"];\nconst _hoisted_49 = {\n  class: \"modal-buttons\"\n};\nconst _hoisted_50 = [\"disabled\"];\nconst _hoisted_51 = {\n  class: \"pagination-buttons\"\n};\nconst _hoisted_52 = [\"disabled\"];\nconst _hoisted_53 = {\n  class: \"page-info\"\n};\nconst _hoisted_54 = [\"disabled\"];\nconst _hoisted_55 = {\n  key: 2,\n  class: \"modal\"\n};\nconst _hoisted_56 = {\n  class: \"modal-content\"\n};\nconst _hoisted_57 = {\n  class: \"game-form\"\n};\nconst _hoisted_58 = {\n  class: \"form-group\"\n};\nconst _hoisted_59 = {\n  class: \"form-group\"\n};\nconst _hoisted_60 = {\n  class: \"modal-buttons\"\n};\nconst _hoisted_61 = [\"disabled\"];\nconst _hoisted_62 = {\n  key: 3,\n  class: \"comments-modal\"\n};\nconst _hoisted_63 = {\n  class: \"modal-content comments-content\"\n};\nconst _hoisted_64 = {\n  class: \"comments-list\"\n};\nconst _hoisted_65 = {\n  class: \"comment-header\"\n};\nconst _hoisted_66 = {\n  class: \"comment-author\"\n};\nconst _hoisted_67 = {\n  class: \"comment-date\"\n};\nconst _hoisted_68 = {\n  class: \"comment-content\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_AppHeader = _resolveComponent(\"AppHeader\");\n  const _component_AppFooter = _resolveComponent(\"AppFooter\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_AppHeader), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_cache[30] || (_cache[30] = _createElementVNode(\"h2\", null, \"내 게임 목록\", -1)), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.showAddGameModal && $options.showAddGameModal(...args)),\n    class: \"add-game-btn\"\n  }, \" 새 게임 만들기 \")]), _createElementVNode(\"div\", _hoisted_5, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.games, game => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: game.gameId,\n      class: \"game-card\"\n    }, [_createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"h3\", _hoisted_7, _toDisplayString(game.gameName), 1)]), _createElementVNode(\"div\", _hoisted_8, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(game.quizzes, quiz => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: quiz.quizId,\n        class: \"quiz-item\"\n      }, [_createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"span\", _hoisted_10, _toDisplayString(quiz.quizTitle), 1), _createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"span\", _hoisted_12, _toDisplayString(quiz.quizCategory), 1), _createElementVNode(\"span\", _hoisted_13, _toDisplayString(quiz.quizLevel), 1)])]), _createElementVNode(\"button\", {\n        onClick: $event => $options.removeQuizFromGame(game.gameId, quiz.quizId),\n        class: \"remove-btn\"\n      }, \" 제 \", 8, _hoisted_14)]);\n    }), 128))]), _createElementVNode(\"div\", _hoisted_15, [_createElementVNode(\"div\", _hoisted_16, [_createElementVNode(\"button\", {\n      onClick: $event => $options.showQuizListModal(game),\n      class: \"view-quiz-btn\"\n    }, \" 퀴즈 목록 보기 \", 8, _hoisted_17), _createElementVNode(\"button\", {\n      onClick: $event => $options.showAddQuizModal(game),\n      class: \"add-quiz-btn\"\n    }, \" 퀴즈 추가 \", 8, _hoisted_18)])])]);\n  }), 128))]), $data.showQuizModal ? (_openBlock(), _createElementBlock(\"div\", _hoisted_19, [_createElementVNode(\"div\", _hoisted_20, [_cache[36] || (_cache[36] = _createElementVNode(\"h3\", null, \"퀴즈 추가\", -1)), _createElementVNode(\"div\", _hoisted_21, [_createElementVNode(\"div\", _hoisted_22, [_withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.quizAddSearchType = $event),\n    class: \"search-select\"\n  }, _cache[31] || (_cache[31] = [_createElementVNode(\"option\", {\n    value: \"all\"\n  }, \"전체\", -1), _createElementVNode(\"option\", {\n    value: \"title\"\n  }, \"제목\", -1), _createElementVNode(\"option\", {\n    value: \"category\"\n  }, \"카테고리\", -1), _createElementVNode(\"option\", {\n    value: \"level\"\n  }, \"난이도\", -1)]), 512), [[_vModelSelect, $data.quizAddSearchType]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.quizAddSearchKeyword = $event),\n    class: \"search-input\",\n    placeholder: \"검색어를 입력하세요\"\n  }, null, 512), [[_vModelText, $data.quizAddSearchKeyword]]), _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.handleQuizListSearch && $options.handleQuizListSearch(...args)),\n    class: \"search-button\"\n  }, \"검색\")])]), _createElementVNode(\"div\", _hoisted_23, [_createElementVNode(\"table\", null, [_createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"checkbox\",\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $options.selectAll = $event)\n  }, null, 512), [[_vModelCheckbox, $options.selectAll]])]), _cache[32] || (_cache[32] = _createElementVNode(\"th\", null, \"제목\", -1)), _cache[33] || (_cache[33] = _createElementVNode(\"th\", null, \"카테고리\", -1)), _cache[34] || (_cache[34] = _createElementVNode(\"th\", null, \"난이도\", -1)), _cache[35] || (_cache[35] = _createElementVNode(\"th\", null, \"북마크\", -1))])]), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.filteredAddQuizzes, quiz => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: quiz.quizId,\n      class: _normalizeClass([\"quiz-row\", {\n        'selected': $data.selectedQuiz?.quizId === quiz.quizId\n      }]),\n      onClick: $event => $options.selectQuizForComments(quiz)\n    }, [_createElementVNode(\"td\", {\n      onClick: _cache[6] || (_cache[6] = _withModifiers(() => {}, [\"stop\"]))\n    }, [_withDirectives(_createElementVNode(\"input\", {\n      type: \"checkbox\",\n      value: quiz,\n      \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.selectedQuizzes = $event)\n    }, null, 8, _hoisted_25), [[_vModelCheckbox, $data.selectedQuizzes]])]), _createElementVNode(\"td\", null, _toDisplayString(quiz.quizTitle), 1), _createElementVNode(\"td\", null, _toDisplayString(quiz.quizCategory), 1), _createElementVNode(\"td\", null, _toDisplayString(quiz.quizLevel), 1), _createElementVNode(\"td\", {\n      onClick: _cache[7] || (_cache[7] = _withModifiers(() => {}, [\"stop\"]))\n    }, [_createElementVNode(\"img\", {\n      src: _imports_0,\n      class: _normalizeClass([\"bookmark-icon\", {\n        'bookmarked': $options.isBookmarked(quiz.quizId)\n      }]),\n      onClick: $event => $options.toggleBookmark(quiz.quizId),\n      alt: \"bookmark\"\n    }, null, 10, _hoisted_26)])], 10, _hoisted_24);\n  }), 128))])])]), _createElementVNode(\"div\", _hoisted_27, [_createElementVNode(\"button\", {\n    onClick: _cache[8] || (_cache[8] = (...args) => $options.addSelectedQuizzes && $options.addSelectedQuizzes(...args)),\n    class: \"add-selected-btn\",\n    disabled: !$data.selectedQuizzes.length\n  }, \" 선택한 퀴즈 추가 (\" + _toDisplayString($data.selectedQuizzes.length) + \"개) \", 9, _hoisted_28), _createElementVNode(\"div\", _hoisted_29, [_createElementVNode(\"button\", {\n    class: \"nav-btn prev\",\n    onClick: _cache[9] || (_cache[9] = (...args) => $options.prevPage && $options.prevPage(...args)),\n    disabled: $data.currentPage === 1\n  }, \" 이전 \", 8, _hoisted_30), _createElementVNode(\"span\", _hoisted_31, _toDisplayString($data.currentPage) + \" / \" + _toDisplayString($options.totalPages), 1), _createElementVNode(\"button\", {\n    class: \"nav-btn next\",\n    onClick: _cache[10] || (_cache[10] = (...args) => $options.nextPage && $options.nextPage(...args)),\n    disabled: $data.currentPage >= $options.totalPages\n  }, \" 다음 \", 8, _hoisted_32)]), _createElementVNode(\"button\", {\n    onClick: _cache[11] || (_cache[11] = (...args) => $options.closeQuizModal && $options.closeQuizModal(...args)),\n    class: \"cancel-btn\"\n  }, \"닫기\")])]), $data.showCommentsModal ? (_openBlock(), _createElementBlock(\"div\", _hoisted_33, [_createElementVNode(\"h3\", null, _toDisplayString($data.selectedQuiz?.quizTitle) + \" 댓글\", 1), _createElementVNode(\"div\", _hoisted_34, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.comments, comment => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: comment.quizCommentId,\n      class: \"comment\"\n    }, [_createElementVNode(\"div\", _hoisted_35, [_createElementVNode(\"div\", _hoisted_36, [_createElementVNode(\"span\", _hoisted_37, _toDisplayString(comment.memberNickname), 1), _createElementVNode(\"span\", _hoisted_38, _toDisplayString($options.formatDate(comment.quizCommentCreatedAt)), 1)])]), _createElementVNode(\"p\", _hoisted_39, _toDisplayString(comment.quizCommentContent), 1)]);\n  }), 128))]), _createElementVNode(\"button\", {\n    onClick: _cache[12] || (_cache[12] = (...args) => $options.closeCommentsModal && $options.closeCommentsModal(...args)),\n    class: \"close-btn\"\n  }, \"닫기\")])) : _createCommentVNode(\"\", true)])) : _createCommentVNode(\"\", true), $data.showQuizListModalFlag ? (_openBlock(), _createElementBlock(\"div\", _hoisted_40, [_createElementVNode(\"div\", _hoisted_41, [_cache[42] || (_cache[42] = _createElementVNode(\"h3\", null, \"현재 게임의 퀴즈 목록\", -1)), _createElementVNode(\"div\", _hoisted_42, [_createElementVNode(\"div\", _hoisted_43, [_withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[13] || (_cache[13] = $event => $data.quizListSearchType = $event),\n    class: \"search-select\"\n  }, _cache[37] || (_cache[37] = [_createElementVNode(\"option\", {\n    value: \"all\"\n  }, \"전체\", -1), _createElementVNode(\"option\", {\n    value: \"title\"\n  }, \"제목\", -1), _createElementVNode(\"option\", {\n    value: \"category\"\n  }, \"카테고리\", -1), _createElementVNode(\"option\", {\n    value: \"level\"\n  }, \"난이도\", -1)]), 512), [[_vModelSelect, $data.quizListSearchType]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[14] || (_cache[14] = $event => $data.quizListSearchKeyword = $event),\n    type: \"text\",\n    placeholder: \"퀴즈 검색\",\n    class: \"search-input\",\n    onKeyup: _cache[15] || (_cache[15] = _withKeys((...args) => $options.handleQuizListSearch && $options.handleQuizListSearch(...args), [\"enter\"]))\n  }, null, 544), [[_vModelText, $data.quizListSearchKeyword]]), _createElementVNode(\"button\", {\n    onClick: _cache[16] || (_cache[16] = (...args) => $options.handleQuizListSearch && $options.handleQuizListSearch(...args)),\n    class: \"search-button\"\n  }, \"검색\")])]), _createElementVNode(\"div\", _hoisted_44, [_createElementVNode(\"table\", null, [_createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, [_createElementVNode(\"input\", {\n    type: \"checkbox\",\n    checked: $options.selectAllCurrentQuizzes,\n    onChange: _cache[17] || (_cache[17] = (...args) => $options.toggleSelectAllCurrentQuizzes && $options.toggleSelectAllCurrentQuizzes(...args))\n  }, null, 40, _hoisted_45)]), _cache[38] || (_cache[38] = _createElementVNode(\"th\", null, \"제목\", -1)), _cache[39] || (_cache[39] = _createElementVNode(\"th\", null, \"카테고리\", -1)), _cache[40] || (_cache[40] = _createElementVNode(\"th\", null, \"난이도\", -1)), _cache[41] || (_cache[41] = _createElementVNode(\"th\", null, \"북마크\", -1))])]), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.paginatedCurrentGameQuizzes, quiz => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: quiz.teacherQuizId,\n      class: _normalizeClass([\"quiz-row\", {\n        'selected': $data.selectedQuiz?.quizId === quiz.quizId\n      }]),\n      onClick: $event => $options.selectQuizForComments(quiz)\n    }, [_createElementVNode(\"td\", {\n      onClick: _cache[19] || (_cache[19] = _withModifiers(() => {}, [\"stop\"]))\n    }, [_withDirectives(_createElementVNode(\"input\", {\n      type: \"checkbox\",\n      \"onUpdate:modelValue\": _cache[18] || (_cache[18] = $event => $data.selectedCurrentQuizzes = $event),\n      value: quiz\n    }, null, 8, _hoisted_47), [[_vModelCheckbox, $data.selectedCurrentQuizzes]])]), _createElementVNode(\"td\", null, _toDisplayString(quiz.quizTitle), 1), _createElementVNode(\"td\", null, _toDisplayString(quiz.quizCategory), 1), _createElementVNode(\"td\", null, _toDisplayString(quiz.quizLevel), 1), _createElementVNode(\"td\", {\n      onClick: _cache[20] || (_cache[20] = _withModifiers(() => {}, [\"stop\"]))\n    }, [_createElementVNode(\"img\", {\n      src: _imports_0,\n      class: _normalizeClass([\"bookmark-icon\", {\n        'bookmarked': $options.isBookmarked(quiz.quizId)\n      }]),\n      onClick: $event => $options.toggleBookmark(quiz.quizId),\n      alt: \"bookmark\"\n    }, null, 10, _hoisted_48)])], 10, _hoisted_46);\n  }), 128))])])]), _createElementVNode(\"div\", _hoisted_49, [_createElementVNode(\"button\", {\n    onClick: _cache[21] || (_cache[21] = (...args) => $options.removeSelectedQuizzes && $options.removeSelectedQuizzes(...args)),\n    class: \"remove-selected-btn\",\n    disabled: !$data.selectedCurrentQuizzes.length\n  }, \" 선택한 퀴즈 삭제 (\" + _toDisplayString($data.selectedCurrentQuizzes.length) + \"개) \", 9, _hoisted_50), _createElementVNode(\"div\", _hoisted_51, [_createElementVNode(\"button\", {\n    class: \"nav-btn prev\",\n    onClick: _cache[22] || (_cache[22] = (...args) => $options.prevQuizListPage && $options.prevQuizListPage(...args)),\n    disabled: $data.quizListCurrentPage === 1\n  }, \" 이전 \", 8, _hoisted_52), _createElementVNode(\"span\", _hoisted_53, _toDisplayString($data.quizListCurrentPage) + \" / \" + _toDisplayString($options.quizListTotalPages), 1), _createElementVNode(\"button\", {\n    class: \"nav-btn next\",\n    onClick: _cache[23] || (_cache[23] = (...args) => $options.nextQuizListPage && $options.nextQuizListPage(...args)),\n    disabled: $data.quizListCurrentPage >= $options.quizListTotalPages\n  }, \" 다음 \", 8, _hoisted_54)]), _createElementVNode(\"button\", {\n    onClick: _cache[24] || (_cache[24] = (...args) => $options.closeQuizListModal && $options.closeQuizListModal(...args)),\n    class: \"cancel-btn\"\n  }, \"닫기\")])])])) : _createCommentVNode(\"\", true), $data.showGameModal ? (_openBlock(), _createElementBlock(\"div\", _hoisted_55, [_createElementVNode(\"div\", _hoisted_56, [_cache[45] || (_cache[45] = _createElementVNode(\"h3\", null, \"새 게임 만들기\", -1)), _createElementVNode(\"div\", _hoisted_57, [_createElementVNode(\"div\", _hoisted_58, [_cache[43] || (_cache[43] = _createElementVNode(\"label\", null, \"게임 이름\", -1)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[25] || (_cache[25] = $event => $data.newGame.gameName = $event),\n    type: \"text\",\n    placeholder: \"게임 이름을 입력하세요\",\n    class: \"form-input\"\n  }, null, 512), [[_vModelText, $data.newGame.gameName]])]), _createElementVNode(\"div\", _hoisted_59, [_cache[44] || (_cache[44] = _createElementVNode(\"label\", null, \"비밀번호\", -1)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[26] || (_cache[26] = $event => $data.newGame.gamePassword = $event),\n    type: \"password\",\n    placeholder: \"비밀번호를 입력하세요\",\n    class: \"form-input\"\n  }, null, 512), [[_vModelText, $data.newGame.gamePassword]])])]), _createElementVNode(\"div\", _hoisted_60, [_createElementVNode(\"button\", {\n    onClick: _cache[27] || (_cache[27] = (...args) => $options.createGame && $options.createGame(...args)),\n    class: \"create-btn\",\n    disabled: !$options.isValidGame\n  }, \" 게임 만들기 \", 8, _hoisted_61), _createElementVNode(\"button\", {\n    onClick: _cache[28] || (_cache[28] = (...args) => $options.closeGameModal && $options.closeGameModal(...args)),\n    class: \"cancel-btn\"\n  }, \" 취소 \")])])])) : _createCommentVNode(\"\", true), $data.showCommentsModal ? (_openBlock(), _createElementBlock(\"div\", _hoisted_62, [_createElementVNode(\"div\", _hoisted_63, [_createElementVNode(\"h3\", null, _toDisplayString($data.selectedQuiz?.quizTitle), 1), _createElementVNode(\"div\", _hoisted_64, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.comments, comment => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: comment.quizCommentId,\n      class: \"comment\"\n    }, [_createElementVNode(\"div\", _hoisted_65, [_createElementVNode(\"span\", _hoisted_66, _toDisplayString(comment.memberNickname), 1), _createElementVNode(\"span\", _hoisted_67, _toDisplayString($options.formatDate(comment.quizCommentCreatedAt)), 1)]), _createElementVNode(\"p\", _hoisted_68, _toDisplayString(comment.quizCommentContent), 1)]);\n  }), 128))]), _createElementVNode(\"button\", {\n    onClick: _cache[29] || (_cache[29] = (...args) => $options.closeCommentsModal && $options.closeCommentsModal(...args)),\n    class: \"close-btn\"\n  }, \"닫기\")])])) : _createCommentVNode(\"\", true)])]), _createVNode(_component_AppFooter)]);\n}","map":{"version":3,"names":["_imports_0","class","key","_createElementBlock","_hoisted_1","_createVNode","_component_AppHeader","_createElementVNode","_hoisted_2","_hoisted_3","_hoisted_4","onClick","_cache","args","$options","showAddGameModal","_hoisted_5","_Fragment","_renderList","$data","games","game","gameId","_hoisted_6","_hoisted_7","_toDisplayString","gameName","_hoisted_8","quizzes","quiz","quizId","_hoisted_9","_hoisted_10","quizTitle","_hoisted_11","_hoisted_12","quizCategory","_hoisted_13","quizLevel","$event","removeQuizFromGame","_hoisted_14","_hoisted_15","_hoisted_16","showQuizListModal","_hoisted_17","showAddQuizModal","_hoisted_18","showQuizModal","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","quizAddSearchType","value","type","quizAddSearchKeyword","placeholder","handleQuizListSearch","_hoisted_23","selectAll","filteredAddQuizzes","_normalizeClass","selectedQuiz","selectQuizForComments","_withModifiers","selectedQuizzes","_hoisted_25","src","isBookmarked","toggleBookmark","alt","_hoisted_26","_hoisted_24","_hoisted_27","addSelectedQuizzes","disabled","length","_hoisted_28","_hoisted_29","prevPage","currentPage","_hoisted_30","_hoisted_31","totalPages","nextPage","_hoisted_32","closeQuizModal","showCommentsModal","_hoisted_33","_hoisted_34","comments","comment","quizCommentId","_hoisted_35","_hoisted_36","_hoisted_37","memberNickname","_hoisted_38","formatDate","quizCommentCreatedAt","_hoisted_39","quizCommentContent","closeCommentsModal","_createCommentVNode","showQuizListModalFlag","_hoisted_40","_hoisted_41","_hoisted_42","_hoisted_43","quizListSearchType","quizListSearchKeyword","onKeyup","_withKeys","_hoisted_44","checked","selectAllCurrentQuizzes","onChange","toggleSelectAllCurrentQuizzes","_hoisted_45","paginatedCurrentGameQuizzes","teacherQuizId","selectedCurrentQuizzes","_hoisted_47","_hoisted_48","_hoisted_46","_hoisted_49","removeSelectedQuizzes","_hoisted_50","_hoisted_51","prevQuizListPage","quizListCurrentPage","_hoisted_52","_hoisted_53","quizListTotalPages","nextQuizListPage","_hoisted_54","closeQuizListModal","showGameModal","_hoisted_55","_hoisted_56","_hoisted_57","_hoisted_58","newGame","_hoisted_59","gamePassword","_hoisted_60","createGame","isValidGame","_hoisted_61","closeGameModal","_hoisted_62","_hoisted_63","_hoisted_64","_hoisted_65","_hoisted_66","_hoisted_67","_hoisted_68","_component_AppFooter"],"sources":["/home/runner/work/FE/FE/src/components/MyPage.vue"],"sourcesContent":["<template>\n  <div class=\"my-page\">\n    <AppHeader />\n    <div class=\"content\">\n      <div class=\"games-section\">\n        <div class=\"games-header\">\n          <h2>내 게임 목록</h2>\n          <button @click=\"showAddGameModal\" class=\"add-game-btn\">\n            새 게임 만들기\n          </button>\n        </div>\n\n        <!-- 게임 목록 -->\n        <div class=\"games-list\">\n          <div v-for=\"game in games\" :key=\"game.gameId\" class=\"game-card\">\n            <div class=\"game-header\">\n              <h3 class=\"game-title\">{{ game.gameName }}</h3>\n            </div>\n            \n            <!-- 게임에 포함된 퀴즈 목록 -->\n            <div class=\"quiz-list\">\n              <div v-for=\"quiz in game.quizzes\" :key=\"quiz.quizId\" class=\"quiz-item\">\n                <div class=\"quiz-info\">\n                  <span class=\"quiz-title\">{{ quiz.quizTitle }}</span>\n                  <div class=\"quiz-badges\">\n                    <span class=\"category-badge\">{{ quiz.quizCategory }}</span>\n                    <span class=\"level-badge\">{{ quiz.quizLevel }}</span>\n                  </div>\n                </div>\n                <button @click=\"removeQuizFromGame(game.gameId, quiz.quizId)\" class=\"remove-btn\">\n                  제\n                </button>\n              </div>\n            </div>\n\n            <!-- 버튼을 아래로 이동 -->\n            <div class=\"game-footer\">\n              <div class=\"game-buttons\">\n                <button @click=\"showQuizListModal(game)\" class=\"view-quiz-btn\">\n                  퀴즈 목록 보기\n                </button>\n                <button @click=\"showAddQuizModal(game)\" class=\"add-quiz-btn\">\n                  퀴즈 추가\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <!-- 퀴즈 추가 모달 -->\n        <div v-if=\"showQuizModal\" class=\"modal\">\n          <div class=\"modal-content\">\n            <h3>퀴즈 추가</h3>\n            <div class=\"search-area\">\n              <div class=\"search-container\">\n                <select v-model=\"quizAddSearchType\" class=\"search-select\">\n                  <option value=\"all\">전체</option>\n                  <option value=\"title\">제목</option>\n                  <option value=\"category\">카테고리</option>\n                  <option value=\"level\">난이도</option>\n                </select>\n                <input \n                  type=\"text\" \n                  v-model=\"quizAddSearchKeyword\" \n                  class=\"search-input\" \n                  placeholder=\"검색어를 입력하세요\"\n                >\n                <button @click=\"handleQuizListSearch\" class=\"search-button\">검색</button>\n              </div>\n            </div>\n\n            <div class=\"quiz-table\">\n              <table>\n                <thead>\n                  <tr>\n                    <th><input type=\"checkbox\" v-model=\"selectAll\"></th>\n                    <th>제목</th>\n                    <th>카테고리</th>\n                    <th>난이도</th>\n                    <th>북마크</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr v-for=\"quiz in filteredAddQuizzes\" \n                      :key=\"quiz.quizId\" \n                      class=\"quiz-row\"\n                      @click=\"selectQuizForComments(quiz)\"\n                      :class=\"{ 'selected': selectedQuiz?.quizId === quiz.quizId }\">\n                    <td @click.stop>\n                      <input type=\"checkbox\" :value=\"quiz\" v-model=\"selectedQuizzes\">\n                    </td>\n                    <td>{{ quiz.quizTitle }}</td>\n                    <td>{{ quiz.quizCategory }}</td>\n                    <td>{{ quiz.quizLevel }}</td>\n                    <td @click.stop>\n                      <img \n                        src=\"@/assets/Icon.png\" \n                        class=\"bookmark-icon\" \n                        :class=\"{ 'bookmarked': isBookmarked(quiz.quizId) }\"\n                        @click=\"toggleBookmark(quiz.quizId)\"\n                        alt=\"bookmark\"\n                      />\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n\n            <div class=\"modal-buttons\">\n              <button @click=\"addSelectedQuizzes\" class=\"add-selected-btn\" :disabled=\"!selectedQuizzes.length\">\n                선택한 퀴즈 추가 ({{ selectedQuizzes.length }}개)\n              </button>\n              <div class=\"pagination-buttons\">\n                <button class=\"nav-btn prev\" @click=\"prevPage\" :disabled=\"currentPage === 1\">\n                  이전\n                </button>\n                <span class=\"page-info\">{{ currentPage }} / {{ totalPages }}</span>\n                <button class=\"nav-btn next\" @click=\"nextPage\" :disabled=\"currentPage >= totalPages\">\n                  다음\n                </button>\n              </div>\n              <button @click=\"closeQuizModal\" class=\"cancel-btn\">닫기</button>\n            </div>\n          </div>\n\n          <!-- 댓글 모달 -->\n          <div v-if=\"showCommentsModal\" class=\"comments-modal\">\n            <h3>{{ selectedQuiz?.quizTitle }} 댓글</h3>\n            <div class=\"comments-list\">\n              <div v-for=\"comment in comments\" :key=\"comment.quizCommentId\" class=\"comment\">\n                <div class=\"comment-header\">\n                  <div class=\"comment-left\">\n                    <span class=\"comment-author\">{{ comment.memberNickname }}</span>\n                    <span class=\"comment-date\">{{ formatDate(comment.quizCommentCreatedAt) }}</span>\n                  </div>\n                </div>\n                <p class=\"comment-content\">{{ comment.quizCommentContent }}</p>\n              </div>\n            </div>\n            <button @click=\"closeCommentsModal\" class=\"close-btn\">닫기</button>\n          </div>\n        </div>\n\n        <!-- 퀴즈 목록 모달 -->\n        <div v-if=\"showQuizListModalFlag\" class=\"modal\">\n          <div class=\"modal-content\">\n            <h3>현재 게임의 퀴즈 목록</h3>\n            <div class=\"search-area\">\n              <div class=\"search-container\">\n                <select v-model=\"quizListSearchType\" class=\"search-select\">\n                  <option value=\"all\">전체</option>\n                  <option value=\"title\">제목</option>\n                  <option value=\"category\">카테고리</option>\n                  <option value=\"level\">난이도</option>\n                </select>\n                <input \n                  v-model=\"quizListSearchKeyword\" \n                  type=\"text\" \n                  placeholder=\"퀴즈 검색\"\n                  class=\"search-input\"\n                  @keyup.enter=\"handleQuizListSearch\"\n                >\n                <button @click=\"handleQuizListSearch\" class=\"search-button\">검색</button>\n              </div>\n            </div>\n            <div class=\"quiz-table\">\n              <table>\n                <thead>\n                  <tr>\n                    <th><input type=\"checkbox\" :checked=\"selectAllCurrentQuizzes\" @change=\"toggleSelectAllCurrentQuizzes\"></th>\n                    <th>제목</th>\n                    <th>카테고리</th>\n                    <th>난이도</th>\n                    <th>북마크</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr v-for=\"quiz in paginatedCurrentGameQuizzes\" \n                      :key=\"quiz.teacherQuizId\" \n                      class=\"quiz-row\"\n                      @click=\"selectQuizForComments(quiz)\"\n                      :class=\"{ 'selected': selectedQuiz?.quizId === quiz.quizId }\">\n                    <td @click.stop>\n                      <input type=\"checkbox\" v-model=\"selectedCurrentQuizzes\" :value=\"quiz\">\n                    </td>\n                    <td>{{ quiz.quizTitle }}</td>\n                    <td>{{ quiz.quizCategory }}</td>\n                    <td>{{ quiz.quizLevel }}</td>\n                    <td @click.stop>\n                      <img src=\"@/assets/Icon.png\" \n                           class=\"bookmark-icon\" \n                           :class=\"{ 'bookmarked': isBookmarked(quiz.quizId) }\"\n                           @click=\"toggleBookmark(quiz.quizId)\"\n                           alt=\"bookmark\">\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n\n            <div class=\"modal-buttons\">\n              <button \n                @click=\"removeSelectedQuizzes\" \n                class=\"remove-selected-btn\" \n                :disabled=\"!selectedCurrentQuizzes.length\">\n                선택한 퀴즈 삭제 ({{ selectedCurrentQuizzes.length }}개)\n              </button>\n              <div class=\"pagination-buttons\">\n                <button class=\"nav-btn prev\" @click=\"prevQuizListPage\" :disabled=\"quizListCurrentPage === 1\">\n                  이전\n                </button>\n                <span class=\"page-info\">{{ quizListCurrentPage }} / {{ quizListTotalPages }}</span>\n                <button class=\"nav-btn next\" @click=\"nextQuizListPage\" :disabled=\"quizListCurrentPage >= quizListTotalPages\">\n                  다음\n                </button>\n              </div>\n              <button @click=\"closeQuizListModal\" class=\"cancel-btn\">닫기</button>\n            </div>\n          </div>\n        </div>\n\n        <!-- 게임 추가 모달 -->\n        <div v-if=\"showGameModal\" class=\"modal\">\n          <div class=\"modal-content\">\n            <h3>새 게임 만들기</h3>\n            <div class=\"game-form\">\n              <div class=\"form-group\">\n                <label>게임 이름</label>\n                <input \n                  v-model=\"newGame.gameName\" \n                  type=\"text\" \n                  placeholder=\"게임 이름을 입력하세요\"\n                  class=\"form-input\"\n                >\n              </div>\n              <div class=\"form-group\">\n                <label>비밀번호</label>\n                <input \n                  v-model=\"newGame.gamePassword\" \n                  type=\"password\" \n                  placeholder=\"비밀번호를 입력하세요\"\n                  class=\"form-input\"\n                >\n              </div>\n            </div>\n            <div class=\"modal-buttons\">\n              <button @click=\"createGame\" class=\"create-btn\" :disabled=\"!isValidGame\">\n                게임 만들기\n              </button>\n              <button @click=\"closeGameModal\" class=\"cancel-btn\">\n                취소\n              </button>\n            </div>\n          </div>\n        </div>\n\n        <!-- 기존 퀴즈 목록 모달은 그대로 두고 새로운 댓글 모달 추가 -->\n        <div v-if=\"showCommentsModal\" class=\"comments-modal\">\n          <div class=\"modal-content comments-content\">\n            <h3>{{ selectedQuiz?.quizTitle }} </h3>\n            <div class=\"comments-list\">\n              <div v-for=\"comment in comments\" :key=\"comment.quizCommentId\" class=\"comment\">\n                <div class=\"comment-header\">\n                  <span class=\"comment-author\">{{ comment.memberNickname }}</span>\n                  <span class=\"comment-date\">{{ formatDate(comment.quizCommentCreatedAt) }}</span>\n                </div>\n                <p class=\"comment-content\">{{ comment.quizCommentContent }}</p>\n              </div>\n            </div>\n            <button @click=\"closeCommentsModal\" class=\"close-btn\">닫기</button>\n          </div>\n        </div>\n      </div>\n    </div>\n    <AppFooter />\n  </div>\n</template>\n\n<script>\nimport AppHeader from \"./Header.vue\";\nimport AppFooter from \"./Footer.vue\";\nimport axios from 'axios';\n\nexport default {\n  name: 'MyPage',\n  components: {\n    AppHeader,\n    AppFooter\n  },\n  data() {\n    return {\n      games: [],\n      quizList: [],\n      showQuizModal: false,\n      currentGameId: null,\n      searchType: 'all',\n      searchKeyword: '',\n      selectedQuizzes: [],\n      showQuizListModalFlag: false,\n      currentGameQuizzes: [],\n      selectedCurrentQuizzes: [],\n      currentGame: null,\n      quizListSearchType: 'all',\n      quizListSearchKeyword: '',\n      currentPage: 1,\n      itemsPerPage: 10,\n      totalItems: 0, // 총 퀴즈 수\n      quizListCurrentPage: 1,\n      quizListItemsPerPage: 10,\n      showGameModal: false,\n      newGame: {\n        gameName: '',\n        gamePassword: ''\n      },\n      quizAddSearchType: 'all',\n      quizAddSearchKeyword: '',\n      quizAddCurrentPage: 1,\n      quizAddItemsPerPage: 10,\n      quizAddTotalItems: 0,\n      bookmarks: [],\n      selectedQuiz: null,\n      comments: [],\n      memberNickname: localStorage.getItem(\"memberNickname\") || \"\",\n      showCommentsModal: false,\n    }\n  },\n  computed: {\n    filteredQuizzes() {\n      if (!this.quizList) return [];\n      if (!this.searchKeyword) return this.quizList;\n      \n      const keyword = this.searchKeyword.toLowerCase();\n      return this.quizList.filter(quiz => {\n        if (!quiz) return false;\n        \n        switch (this.searchType) {\n          case 'title':\n            return quiz.quizTitle?.toLowerCase().includes(keyword);\n          case 'category':\n            return quiz.quizCategory?.toLowerCase().includes(keyword);\n          case 'level':\n            return quiz.quizLevel?.toLowerCase().includes(keyword);\n          case 'all':\n            return (quiz.quizTitle?.toLowerCase().includes(keyword) ||\n                   quiz.quizCategory?.toLowerCase().includes(keyword) ||\n                   quiz.quizLevel?.toLowerCase().includes(keyword));\n          default:\n            return true;\n        }\n      });\n    },\n\n    selectAll: {\n      get() {\n        return this.quizList.length > 0 && this.selectedQuizzes.length === this.quizList.length;\n      },\n      set(value) {\n        this.selectedQuizzes = value ? [...this.quizList] : [];\n      }\n    },\n\n    selectAllCurrentQuizzes: {\n      get() {\n        return this.currentGameQuizzes.length === this.selectedCurrentQuizzes.length;\n      },\n      set(value) {\n        this.selectedCurrentQuizzes = value ? [...this.currentGameQuizzes] : [];\n      }\n    },\n\n    filteredCurrentGameQuizzes() {\n      if (!this.currentGameQuizzes) return [];\n      if (!this.quizListSearchKeyword) return this.currentGameQuizzes;\n      \n      const keyword = this.quizListSearchKeyword.toLowerCase();\n      return this.currentGameQuizzes.filter(quiz => {\n        if (!quiz) return false;\n        \n        switch (this.quizListSearchType) {\n          case 'title':\n            return quiz.quizTitle?.toLowerCase().includes(keyword);\n          case 'category':\n            return quiz.quizCategory?.toLowerCase().includes(keyword);\n          case 'level':\n            return quiz.quizLevel?.toLowerCase().includes(keyword);\n          case 'all':\n            return (quiz.quizTitle?.toLowerCase().includes(keyword) ||\n                   quiz.quizCategory?.toLowerCase().includes(keyword) ||\n                   quiz.quizLevel?.toLowerCase().includes(keyword));\n          default:\n            return true;\n        }\n      });\n    },\n\n    paginatedQuizzes() {\n      return this.quizList;\n    },\n\n    totalPages() {\n      return Math.ceil(this.totalItems / this.itemsPerPage);\n    },\n\n    paginatedCurrentGameQuizzes() {\n      if (!this.filteredCurrentGameQuizzes) return [];\n      \n      const start = (this.quizListCurrentPage - 1) * this.quizListItemsPerPage;\n      const end = start + this.quizListItemsPerPage;\n      return this.filteredCurrentGameQuizzes.slice(start, end);\n    },\n\n    quizListTotalPages() {\n      return Math.ceil(this.filteredCurrentGameQuizzes.length / this.quizListItemsPerPage);\n    },\n\n    pageDisplay() {\n      return `${this.currentPage}/${this.totalPages}`;\n    },\n\n    isValidGame() {\n      return this.newGame.gameName && this.newGame.gamePassword;\n    },\n\n    quizAddTotalPages() {\n      return Math.ceil(this.quizAddTotalItems / this.quizAddItemsPerPage);\n    },\n\n    filteredAddQuizzes() {\n      if (!this.quizList) return [];\n      if (!this.quizAddSearchKeyword) return this.quizList;\n      \n      const keyword = this.quizAddSearchKeyword.toLowerCase();\n      return this.quizList.filter(quiz => {\n        if (!quiz) return false;\n        \n        switch (this.quizAddSearchType) {\n          case 'title':\n            return quiz.quizTitle?.toLowerCase().includes(keyword);\n          case 'category':\n            return quiz.quizCategory?.toLowerCase().includes(keyword);\n          case 'level':\n            return quiz.quizLevel?.toLowerCase().includes(keyword);\n          case 'all':\n            return (quiz.quizTitle?.toLowerCase().includes(keyword) ||\n                   quiz.quizCategory?.toLowerCase().includes(keyword) ||\n                   quiz.quizLevel?.toLowerCase().includes(keyword));\n          default:\n            return true;\n        }\n      });\n    },\n\n    paginatedAddQuizzes() {\n      const start = (this.quizAddCurrentPage - 1) * this.quizAddItemsPerPage;\n      const end = start + this.quizAddItemsPerPage;\n      return this.filteredAddQuizzes.slice(start, end);\n    }\n  },\n  methods: {\n    // 내 게임 목록 조회\n    async fetchMyGames() {\n      const token = localStorage.getItem(\"jwtToken\");\n      const memberId = localStorage.getItem(\"memberId\");\n      \n      if (!token || !memberId) {\n        console.error(\"로그인이 필요합니다.\");\n        this.$router.push(\"/login\");\n        return;\n      }\n\n      try {\n        // /api/v1/games/member/{memberId} 엔드포인트로 변경\n        const response = await axios.get(\n          `${process.env.VUE_APP_BE_API_URL}/api/v1/games/member/${memberId}`, \n          {\n            headers: { Authorization: `Bearer ${token}` }\n          }\n        );\n\n        this.games = response.data;\n      } catch (error) {\n        console.error(\"게임 록 조회 실패:\", error);\n        alert(\"게임 목록을 오는데 실패했습니다.\");\n      }\n    },\n\n    // 전체 퀴즈 목록 조회\n    async fetchQuizList(page = this.currentPage - 1, size = this.itemsPerPage) {\n      const token = localStorage.getItem(\"jwtToken\");\n      const beUrl = process.env.VUE_APP_BE_API_URL;\n      \n      try {\n        // 현재 게임의 퀴즈 목록 가져오기\n        const currentGameResponse = await axios.get(\n          `${beUrl}/api/v1/teacher-quizzes/game/${this.currentGameId}`,\n          { headers: { Authorization: `Bearer ${token}` }}\n        );\n        \n        const existingQuizIds = currentGameResponse.data.map(quiz => quiz.quizId);\n\n        // 전체 퀴즈 목록을 한 번에 가져오기\n        const response = await axios.get(`${beUrl}/api/v1/quizs/all`, {\n          headers: { Authorization: `Bearer ${token}` },\n          params: { \n            page: 0,\n            size: 9999\n          }\n        });\n\n        // 이미 추가된 퀴즈를 제외한 전체 퀴즈\n        const availableQuizzes = response.data.content.filter(\n          quiz => !existingQuizIds.includes(quiz.quizId)\n        );\n\n        // 현재 페이지의 시작과 끝 인덱스 계산\n        const startIndex = page * size;\n        const endIndex = startIndex + size;\n\n        // 현재 페이지에 표시할 퀴즈\n        this.quizList = availableQuizzes.slice(startIndex, endIndex).map(quiz => ({\n          quizId: quiz.quizId,\n          memberNickname: quiz.memberNickname || '알 수 없음',\n          quizCategory: quiz.quizCategory,\n          quizTitle: quiz.quizTitle,\n          quizLevel: quiz.quizLevel,\n          quizAnswer: quiz.quizAnswer,\n          quizDescription: quiz.quizDescription,\n          date: quiz.date,\n          count: quiz.count || 0\n        }));\n\n        // 전체 사용 가능한 퀴즈 수\n        const totalAvailableQuizzes = availableQuizzes.length;\n        \n        // 페이지네이션 정보 업데이트 (전체 페이지 수는 처음 계산된 값을 유지)\n        if (!this.totalPages) {\n          this.totalPages = Math.ceil(totalAvailableQuizzes / this.itemsPerPage);\n        }\n        this.totalItems = totalAvailableQuizzes;\n\n      } catch (error) {\n        console.error(\"퀴즈 목록 조회 실패:\", error);\n        alert(\"퀴즈 목록을 불러오는 데 실패했습니다.\");\n      }\n    },\n\n    // 퀴즈  모달 표시\n    async showAddQuizModal(game) {\n      this.currentGameId = game.gameId;\n      this.currentGame = game;\n      this.currentPage = 1;\n      this.selectedQuizzes = [];\n      this.totalPages = null; // 모달이 열릴 때 totalPages 초기화\n      await this.fetchCurrentGameQuizzes();\n      await this.fetchQuizList(0);\n      this.showQuizModal = true;\n    },\n\n    async handleSearch() {\n      this.currentPage = 1;\n      await this.fetchQuizList();\n    },\n\n    // 퀴즈 선택 및 게임에 추가\n    async selectQuiz(quiz) {\n      if (!confirm(`\"${quiz.quizTitle}\" 퀴즈를 게임에 추가하시겠습니까?`)) return;\n\n      const token = localStorage.getItem(\"jwtToken\");\n      const memberId = Number(localStorage.getItem(\"memberId\"));\n\n      try {\n        const teacherQuizRequest = {\n          quizId: quiz.quizId,\n          gameId: this.currentGameId,\n          isStopped: 0\n        };\n\n        const teacherQuizResponse = await axios.post(\n          `${process.env.VUE_APP_BE_API_URL}/api/v1/teacher-quizzes/member/${memberId}`,\n          teacherQuizRequest,\n          { headers: { Authorization: `Bearer ${token}` }}\n        );\n\n        if (teacherQuizResponse.data) {\n          console.log('퀴즈 성으로 저장되었습니다:', teacherQuizResponse.data);\n          await this.fetchMyGames();\n          this.closeQuizModal();\n        }\n      } catch (error) {\n        console.error(\"퀴즈 추가 실패:\", error);\n        alert(\"퀴즈 추가에 실패습니다.\");\n      }\n    },\n\n    // 게임에서 퀴즈 제거\n    async removeQuizFromGame(gameId, quizId) {\n      if (!confirm('이 퀴즈를 게임에서 제거하시습니까?')) return;\n\n      const token = localStorage.getItem(\"jwtToken\");\n      try {\n        await axios.delete(\n          `${process.env.VUE_APP_BE_API_URL}/api/v1/games/${gameId}/quizzes/${quizId}`,\n          { headers: { Authorization: `Bearer ${token}` }}\n        );\n        \n        await this.fetchMyGames();\n        alert(\"퀴즈가 제거되었습니다.\");\n      } catch (error) {\n        console.error(\"퀴즈 제거 실패:\", error);\n        alert(\"퀴즈 제거 실패했습니다.\");\n      }\n    },\n\n    toggleSelectAll() {\n      this.selectAll = !this.selectAll;\n    },\n\n    async addSelectedQuizzes() {\n      if (!this.selectedQuizzes.length) {\n        alert('선택 퀴즈가 없습니다.');\n        return;\n      }\n\n      if (!confirm(`선택한 ${this.selectedQuizzes.length}개의 퀴즈를 추가하시겠습니까?`)) return;\n\n      const token = localStorage.getItem(\"jwtToken\");\n      const memberId = Number(localStorage.getItem(\"memberId\"));\n\n      try {\n        for (const quiz of this.selectedQuizzes) {\n          const teacherQuizRequest = {\n            quizId: quiz.quizId,\n            gameId: this.currentGameId,\n            isStopped: 0\n          };\n\n          await axios.post(\n            `${process.env.VUE_APP_BE_API_URL}/api/v1/teacher-quizzes/member/${memberId}`,\n            teacherQuizRequest,\n            { headers: { Authorization: `Bearer ${token}` }}\n          );\n        }\n\n        await this.fetchMyGames();\n        this.closeQuizModal();\n        alert('선택한 퀴즈가 성공적로 추가되었습니다.');\n      } catch (error) {\n        console.error(\"퀴즈 추가 실패:\", error);\n        alert(\"퀴즈 추가에 실패했습니다.\");\n      }\n    },\n\n    closeQuizModal() {\n      this.showQuizModal = false;\n      this.showCommentsModal = false;\n      this.selectedQuiz = null;\n      this.comments = [];\n      this.selectedQuizzes = [];\n      this.searchKeyword = '';\n    },\n\n    toggleQuizSelection(quiz) {\n      const index = this.selectedQuizzes.findIndex(q => q.quizId === quiz.quizId);\n      if (index === -1) {\n        this.selectedQuizzes.push(quiz);\n      } else {\n        this.selectedQuizzes.splice(index, 1);\n      }\n    },\n\n    async showQuizListModal(game) {\n      const token = localStorage.getItem(\"jwtToken\");\n      const beUrl = process.env.VUE_APP_BE_API_URL;\n      \n      try {\n        // TeacherQuiz 목록을 가져옴 (이미 memberNickname이 함되어 있음)\n        const teacherQuizResponse = await axios.get(\n          `${beUrl}/api/v1/teacher-quizzes/game/${game.gameId}`,\n          { headers: { Authorization: `Bearer ${token}` }}\n        );\n        \n        console.log('TeacherQuiz 응답:', teacherQuizResponse.data);\n\n        const quizzesWithDetails = await Promise.all(\n          teacherQuizResponse.data.map(async (teacherQuiz) => {\n            try {\n              // 1. quizId로 퀴즈 정보 조회\n              const quizResponse = await axios.get(\n                `${beUrl}/api/v1/quizs/${teacherQuiz.quizId}`,\n                { headers: { Authorization: `Bearer ${token}` }}\n              );\n              \n              const quiz = quizResponse.data;\n              console.log('퀴즈 정보:', quiz);\n\n              return {\n                teacherQuizId: teacherQuiz.teacherQuizId,\n                quizId: teacherQuiz.quizId,\n                gameId: teacherQuiz.gameId,\n                isStopped: teacherQuiz.isStopped,\n                quizTitle: quiz.quiz,\n                quizCategory: quiz.category,\n                quizLevel: quiz.level,\n                quizType: quiz.type,\n                quizAnswer: quiz.answer,\n                quizDescription: quiz.desc,\n                nickname: teacherQuiz.memberNickname,  // 백엔드에서 받은 memberNickname 사용\n                createdAt: quiz.createdAt || new Date().toISOString()\n              };\n            } catch (error) {\n              console.error(`퀴즈 정보 조회 실패 (ID: ${teacherQuiz.quizId}):`, error);\n              return null;\n            }\n          })\n        );\n\n        this.currentGameQuizzes = quizzesWithDetails.filter(quiz => quiz !== null);\n        this.currentGame = game;\n        this.showQuizListModalFlag = true;\n      } catch (error) {\n        console.error(\"퀴즈 목록 조회 실패:\", error);\n        alert(\"퀴즈 목록을 불러오는데 실패했습니다.\");\n      }\n    },\n\n    closeQuizListModal() {\n      this.showQuizListModalFlag = false;\n      this.showCommentsModal = false;\n      this.selectedQuiz = null;\n      this.comments = [];\n      this.selectedCurrentQuizzes = [];\n      this.currentGame = null;\n      this.quizListSearchType = 'all';\n      this.quizListSearchKeyword = '';\n    },\n\n    toggleCurrentQuizSelection(quiz) {\n      const index = this.selectedCurrentQuizzes.findIndex(q => q.quizId === quiz.quizId);\n      if (index === -1) {\n        this.selectedCurrentQuizzes.push(quiz);\n      } else {\n        this.selectedCurrentQuizzes.splice(index, 1);\n      }\n    },\n\n    toggleSelectAllCurrentQuizzes() {\n      this.selectAllCurrentQuizzes = !this.selectAllCurrentQuizzes;\n    },\n\n    async removeSelectedQuizzes() {\n      if (!this.selectedCurrentQuizzes.length) {\n        alert('선된 퀴즈가 없습니다.');\n        return;\n      }\n\n      if (!confirm(`선택한 ${this.selectedCurrentQuizzes.length}개의 퀴즈를 삭제하시겠습니까?`)) return;\n\n      const token = localStorage.getItem(\"jwtToken\");\n\n      try {\n        for (const quiz of this.selectedCurrentQuizzes) {\n          await axios.delete(\n            `${process.env.VUE_APP_BE_API_URL}/api/v1/teacher-quizzes/quiz/${quiz.teacherQuizId}`,\n            { headers: { Authorization: `Bearer ${token}` }}\n          );\n        }\n\n        // 현재 게임의 퀴 목록을 다시 불러옴\n        await this.showQuizListModal(this.currentGame);\n        this.selectedCurrentQuizzes = [];\n        alert('선택한 퀴즈가 성공적으로 삭제되었습니다.');\n      } catch (error) {\n        console.error(\"퀴즈 삭제 실패:\", error);\n        alert(\"퀴즈 삭제에 실패했습니다.\");\n      }\n    },\n\n    handleQuizListSearch() {\n      // 퀴즈 목록 보기 검색 처리\n    },\n\n    async nextPage() {\n      if (this.currentPage < this.totalPages) {\n        this.currentPage++;\n        await this.fetchQuizList();\n      }\n    },\n\n    async prevPage() {\n      if (this.currentPage > 1) {\n        this.currentPage--;\n        await this.fetchQuizList();\n      }\n    },\n\n    prevQuizListPage() {\n      if (this.quizListCurrentPage > 1) {\n        this.quizListCurrentPage--;\n      }\n    },\n\n    nextQuizListPage() {\n      if (this.quizListCurrentPage < this.quizListTotalPages) {\n        this.quizListCurrentPage++;\n      }\n    },\n\n    async fetchAvailableQuizzes(memberId, gameId) {\n      try {\n        const response = await axios.get(`/api/v1/teacher-quizzes/member/${memberId}/game/${gameId}`);\n        this.availableQuizzes = response.data;\n      } catch (error) {\n        console.error(\"퀴즈 목록 조회 실패:\", error);\n      }\n    },\n\n    async fetchCurrentGameQuizzes() {\n      const token = localStorage.getItem(\"jwtToken\");\n      const beUrl = process.env.VUE_APP_BE_API_URL;\n\n      try {\n        const response = await axios.get(`${beUrl}/api/v1/teacher-quizzes/game/${this.currentGameId}`, {\n          headers: { Authorization: `Bearer ${token}` }\n        });\n\n        this.currentGameQuizzes = response.data;\n      } catch (error) {\n        console.error(\"현재 게임의 퀴즈 목록 조회 실패:\", error);\n      }\n    },\n\n    showAddGameModal() {\n      this.showGameModal = true;\n      this.newGame = {\n        gameName: '',\n        gamePassword: ''\n      };\n    },\n\n    closeGameModal() {\n      this.showGameModal = false;\n    },\n\n    async createGame() {\n      const token = localStorage.getItem(\"jwtToken\");\n      const memberId = localStorage.getItem(\"memberId\");\n\n      try {\n        const response = await axios.post(\n          `${process.env.VUE_APP_BE_API_URL}/api/v1/games`,\n          {\n            memberId: Number(memberId),\n            gameName: this.newGame.gameName,\n            gamePassword: this.newGame.gamePassword\n          },\n          {\n            headers: { Authorization: `Bearer ${token}` }\n          }\n        );\n\n        if (response.data) {\n          await this.fetchMyGames();\n          this.closeGameModal();\n          alert('게임이 성공적으로 생성되었습니다.');\n        }\n      } catch (error) {\n        console.error(\"게임 생성 실패:\", error);\n        alert(\"게임 생성에 실패했습니다.\");\n      }\n    },\n\n    handleAddQuizSearch() {\n      this.quizAddCurrentPage = 1;\n    },\n\n    prevAddQuizPage() {\n      if (this.quizAddCurrentPage > 1) {\n        this.quizAddCurrentPage--;\n      }\n    },\n\n    nextAddQuizPage() {\n      if (this.quizAddCurrentPage < this.quizAddTotalPages) {\n        this.quizAddCurrentPage++;\n      }\n    },\n\n    // 북마크 상태 확인\n    isBookmarked(quizId) {\n      return this.bookmarks.some(bookmark => bookmark.quizId === quizId) || \n             localStorage.getItem(`bookmark_${quizId}`) === 'true';\n    },\n\n    // 북크 토글\n    async toggleBookmark(quizId) {\n      const token = localStorage.getItem(\"jwtToken\");\n      const memberId = localStorage.getItem(\"memberId\");\n      \n      if (!token || !memberId) return;\n\n      try {\n        const beUrl = process.env.VUE_APP_BE_API_URL;\n        const existingBookmark = this.bookmarks.find(b => b.quizId === quizId);\n\n        if (existingBookmark) {\n          await axios.delete(`${beUrl}/api/v1/bookmarks/${existingBookmark.bookmarkId}`, {\n            headers: { Authorization: `Bearer ${token}` }\n          });\n          this.bookmarks = this.bookmarks.filter(b => b.quizId !== quizId);\n          localStorage.removeItem(`bookmark_${quizId}`);\n        } else {\n          const response = await axios.post(\n            `${beUrl}/api/v1/bookmarks`,\n            {\n              memberId: Number(memberId),\n              quizId: Number(quizId)\n            },\n            { headers: { Authorization: `Bearer ${token}` }}\n          );\n          \n          if (response.data) {\n            this.bookmarks.push(response.data);\n            localStorage.setItem(`bookmark_${quizId}`, 'true');\n          }\n        }\n      } catch (error) {\n        console.error(\"북마크 처리 실패:\", error);\n        alert(\"북마크 처리에 실패했습니다.\");\n      }\n    },\n\n    // 북마크 목록 조회\n    async fetchBookmarks() {\n      const token = localStorage.getItem(\"jwtToken\");\n      const memberId = localStorage.getItem(\"memberId\");\n      \n      if (!token || !memberId) return;\n\n      try {\n        const beUrl = process.env.VUE_APP_BE_API_URL;\n        const response = await axios.get(`${beUrl}/api/v1/bookmarks/member/${memberId}`, {\n          headers: { Authorization: `Bearer ${token}` }\n        });\n        this.bookmarks = response.data;\n      } catch (error) {\n        console.error(\"북마크 목록 조회 실패:\", error);\n      }\n    },\n\n    async selectQuizForComments(quiz) {\n      this.selectedQuiz = quiz;\n      await this.fetchComments(quiz.quizId);\n      this.showCommentsModal = true;\n    },\n\n    closeCommentsModal() {\n      this.showCommentsModal = false;\n      this.selectedQuiz = null;\n      this.comments = [];\n    },\n\n    async fetchComments(quizId) {\n      const token = localStorage.getItem(\"jwtToken\");\n      if (!token) return;\n\n      try {\n        const beUrl = process.env.VUE_APP_BE_API_URL;\n        const response = await axios.get(`${beUrl}/api/v1/comments/quiz/${quizId}`, {\n          headers: { Authorization: `Bearer ${token}` }\n        });\n        \n        this.comments = response.data.map(comment => ({\n          ...comment,\n          isEditing: false,\n          editContent: comment.quizCommentContent\n        }));\n      } catch (error) {\n        console.error(\"댓글 조회 실패:\", error);\n      }\n    },\n\n    formatDate(date) {\n      if (!date) return '';\n      \n      try {\n        // Array 형식인 경우 (댓글 날짜)\n        if (Array.isArray(date)) {\n          const year = date[0];\n          const month = String(date[1]).padStart(2, '0');\n          const day = String(date[2]).padStart(2, '0');\n          const hours = String(date[3]).padStart(2, '0');\n          const minutes = String(date[4]).padStart(2, '0');\n          \n          return `${year}-${month}-${day} ${hours}:${minutes}`;\n        } \n        // ISO 문자열 형식인 경우\n        else {\n          const dateObj = new Date(date);\n          const year = dateObj.getFullYear();\n          const month = String(dateObj.getMonth() + 1).padStart(2, '0');\n          const day = String(dateObj.getDate()).padStart(2, '0');\n          const hours = String(dateObj.getHours()).padStart(2, '0');\n          const minutes = String(dateObj.getMinutes()).padStart(2, '0');\n          \n          return `${year}-${month}-${day} ${hours}:${minutes}`;\n        }\n      } catch (error) {\n        console.error('날짜 변환 에러:', error, date);\n        return '';\n      }\n    }\n  },\n  mounted() {\n    this.fetchMyGames();\n    this.fetchBookmarks(); // 북마크 목록 초기 로딩\n  }\n}\n</script>\n\n<style scoped>\n.my-page {\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n  background-color: #fff;\n  overflow: hidden; /* 전체 페이지 스크롤 방지 */\n}\n\n.content {\n  flex: 1;\n  padding: 20px;\n  max-width: 1200px;\n  margin: 0 auto;\n  width: 100%;\n  padding-top: 80px;\n  padding-bottom: 40px;\n  overflow-y: auto; /* 로 스크롤 활성화 */\n  height: calc(100vh - 120px); /* 헤더와 푸터를 제외한 높이 */\n}\n\n.games-section {\n  background-color: white;\n  border-radius: 8px;\n  padding: 20px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  overflow-y: auto; /* 세로 스크롤 활성화 */\n  max-height: calc(100vh - 160px); /* 헤더와 푸터를 제외한 높이 */\n}\n\n/* 스크롤바 숨기기 */\n.games-section::-webkit-scrollbar {\n  display: none; /* 웹킷 기반 브라우저에서 스크롤바 숨기기 */\n}\n\n.games-section {\n  -ms-overflow-style: none;  /* IE 및 Edge에서 스크롤 숨기기 */\n  scrollbar-width: none;  /* Firefox에서 스크롤바 숨기기 */\n}\n\n.games-list {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  gap: 30px;\n  margin-top: 20px;\n  padding: 10px;\n}\n\n.game-card {\n  border: 1px solid #ddd;\n  border-radius: 8px;\n  padding: 20px;\n  background: white;\n  display: flex;\n  flex-direction: column;\n  min-height: 200px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.game-header {\n  margin-bottom: 15px;\n  text-align: left;  /* 제목 왼쪽 정렬 */\n}\n\n.game-title {\n  font-size: 1.5rem;\n  margin: 0;\n  color: #333;\n}\n\n.quiz-list {\n  flex: 1;  /* 남은 공간 채우기 */\n  overflow-y: auto;  /* 내용이 많으면 스크롤 */\n  margin-bottom: 15px;  /* 버튼과의 간격 */\n}\n\n.game-footer {\n  margin-top: auto;  /* 하단에 고정 */\n  padding-top: 15px;\n  border-top: 1px solid #eee;\n}\n\n.game-buttons {\n  display: flex;\n  gap: 10px;\n  justify-content: center;  /* 버튼 중앙 정렬 */\n}\n\n.view-quiz-btn, .add-quiz-btn {\n  min-width: 120px;\n  height: 36px;\n  padding: 0 16px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 14px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  white-space: nowrap;\n}\n\n.view-quiz-btn {\n  background-color: #000000d6;\n  color: white;\n}\n\n.add-quiz-btn {\n  background-color: rgba(0, 0, 0, 0.865);\n  color: white;\n}\n\n/* 호버 효과 */\n.view-quiz-btn:hover, .add-quiz-btn:hover {\n  opacity: 0.9;\n}\n\n.remove-btn {\n  background-color: #f44336;\n  color: white;\n  border: none;\n  padding: 4px 8px;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.modal {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.modal-content {\n  background: white;\n  padding: 30px;\n  border-radius: 8px;\n  width: 90%;\n  max-width: 800px;\n  max-height: 80vh;\n  overflow-y: auto;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n}\n\n.search-area {\n  margin: 20px 0;\n}\n\n.search-container {\n  display: flex;\n  gap: 10px;\n  align-items: center;\n}\n\n.search-select {\n  padding: 8px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  min-width: 120px;\n}\n\n.search-input {\n  flex: 1;\n  padding: 8px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n}\n\n.search-button {\n  padding: 8px 16px;\n  background-color: rgba(0, 0, 0, 0.865);\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.quiz-table {\n  flex: 1;\n  overflow-y: auto;\n  border: 1px solid #eee;\n  border-radius: 4px;\n}\n\n.quiz-table table {\n  width: 100%;\n  table-layout: fixed;\n}\n\n.quiz-table th,\n.quiz-table td {\n  padding: 12px;\n  text-align: left;\n  border-bottom: 1px solid #eee;\n}\n\n.quiz-table th {\n  background-color: #f8f9fa;\n  position: sticky;\n  top: 0;\n  z-index: 1;\n}\n\n/* 각 열의 너비 조정 */\n.quiz-table th:nth-child(1),\n.quiz-table td:nth-child(1) { \n  width: 5%; \n}\n\n.quiz-table th:nth-child(2),\n.quiz-table td:nth-child(2) { \n  width: 45%; \n}\n\n.quiz-table th:nth-child(3),\n.quiz-table td:nth-child(3) { \n  width: 20%; \n}\n\n.quiz-table th:nth-child(4),\n.quiz-table td:nth-child(4) { \n  width: 20%; \n}\n\n.quiz-table th:nth-child(5),\n.quiz-table td:nth-child(5) { \n  width: 10%; \n  text-align: center;\n  vertical-align: middle;\n}\n\n.modal-buttons {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  gap: 10px;\n  padding-top: 20px;\n  margin-top: auto;\n}\n\n.pagination-buttons {\n  display: flex;\n  align-items: center;\n  gap: 15px;\n}\n\n.nav-btn {\n  min-width: 80px;\n  height: 36px;\n  padding: 0 16px;\n  border: 1px solid #e0e0e0;\n  background-color: white;\n  border-radius: 4px;\n  cursor: pointer;\n  font-weight: 500;\n  color: #333;\n  transition: all 0.2s;\n}\n\n.nav-btn:hover:not(:disabled) {\n  background-color: #f8f9fa;\n  border-color: #dee2e6;\n}\n\n.nav-btn:disabled {\n  background-color: #f5f5f5;\n  color: #aaa;\n  cursor: not-allowed;\n}\n\n.page-info {\n  min-width: 80px;\n  text-align: center;\n  font-weight: 500;\n  color: #666;\n}\n\n\n.add-selected-btn, .remove-selected-btn, .cancel-btn {\n  padding: 10px 20px;\n  border-radius: 4px;\n  border: none;\n  cursor: pointer;\n  font-weight: 500;\n}\n\n.add-selected-btn {\n  background-color: rgba(0, 0, 0, 0.865);\n  color: white;\n}\n\n.remove-selected-btn {\n  background-color: red;\n  color: white;\n}\n\n.add-selected-btn:disabled {\n  background-color: #cccccc;\n  cursor: not-allowed;\n}\n.remove-selected-btn:disabled {\n  background-color: #cccccc;\n  cursor: not-allowed;\n}\n\n.game-buttons button {\n  transition: opacity 0.2s;\n}\n\n.game-buttons button:hover {\n  opacity: 0.9;\n}\n\n/* 스크롤바 스타일링 */\n.content::-webkit-scrollbar {\n  width: 8px;\n}\n\n.content::-webkit-scrollbar-track {\n  background: #f1f1f1;\n  border-radius: 4px;\n}\n\n.content::-webkit-scrollbar-thumb {\n  background: #888;\n  border-radius: 4px;\n}\n\n.content::-webkit-scrollbar-thumb:hover {\n  background: #555;\n}\n\n/* 반응형 처리 */\n@media (max-height: 900px) {\n  .games-section {\n    height: auto;\n    margin-bottom: 20px;\n  }\n}\n\n/* 스크롤바 스타일링 */\n.games-section::-webkit-scrollbar {\n  width: 8px;\n}\n\n.games-section::-webkit-scrollbar-track {\n  background: #f1f1f1;\n  border-radius: 4px;\n}\n\n.games-section::-webkit-scrollbar-thumb {\n  background: #888;\n  border-radius: 4px;\n}\n\n.games-section::-webkit-scrollbar-thumb:hover {\n  background: #555;\n}\n\n.pagination {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  justify-content: center;\n  margin: 20px 0;\n}\n\n.pagination span {\n  min-width: 60px;\n  text-align: center;\n  font-size: 14px;\n}\n\n.pagination button {\n  padding: 5px 10px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  background-color: white;\n  cursor: pointer;\n}\n\n.pagination button:disabled {\n  background-color: #f5f5f5;\n  cursor: not-allowed;\n}\n\n.games-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n}\n\n.add-game-btn {\n  background-color: #000000;\n  color: white;\n  padding: 10px 20px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 14px;\n}\n\n.game-form {\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  margin: 20px 0;\n}\n\n.form-group {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n}\n\n.form-group label {\n  font-weight: 500;\n  color: #333;\n}\n\n.form-input {\n  padding: 8px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  font-size: 14px;\n}\n\n.create-btn {\n  background-color: #000000;\n  color: white;\n  padding: 10px 20px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.create-btn:disabled {\n  background-color: #cccccc;\n  cursor: not-allowed;\n}\n\n.bookmark-icon {\n  width: 18px;\n  height: 18px;\n  cursor: pointer;\n  vertical-align: middle;\n}\n\n.bookmark-icon:hover {\n  opacity: 0.5;\n}\n\n.bookmark-icon.bookmarked {\n  opacity: 1;\n  filter: invert(28%) sepia(67%) saturate(669%) hue-rotate(346deg) brightness(89%) contrast(83%);\n}\n\n/* 북마크 열 너비 조정 */\n.quiz-table td:nth-child(5) { \n  width: 5%; \n  text-align: center;\n}\n\n.quiz-list-container {\n  display: flex;\n  gap: 20px;\n}\n\n.quiz-table-section {\n  flex: 2;  /* 테이블 영역이 더 넓게 */\n}\n\n.comments-section {\n  flex: 1;  /* 댓글 영역은 더 좁게 */\n  padding-left: 20px;\n  border-left: 1px solid #ddd;\n  max-height: 400px;\n  overflow-y: auto;\n}\n\n.quiz-row {\n  cursor: pointer;\n}\n\n.quiz-row:hover {\n  background-color: #f5f5f5;\n}\n\n.quiz-row.selected {\n  background-color: #e9ecef;\n}\n\n.comment {\n  padding: 10px;\n  border-bottom: 1px solid #eee;\n}\n\n.comment-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 8px;\n  font-size: 13px;\n  color: #666;\n}\n\n.comment-author {\n  font-weight: bold;\n}\n\n.comment-date {\n  color: #888;\n}\n\n.comment-content {\n  font-size: 14px;\n  line-height: 1.4;\n  margin-bottom: 5px;\n}\n\n.comments-modal {\n  position: fixed;\n  top: 50%;\n  right: 80px;\n  transform: translateY(-50%);\n  width: 400px;\n  height: 600px;\n  background: white;\n  border-radius: 8px;\n  padding: 20px;\n  box-shadow: -2px 0 10px rgba(0, 0, 0, 0.1); /* 왼쪽에만 그림자 효과 */\n}\n\n.comments-content {\n  max-height: 500px;\n  overflow-y: auto;\n  padding: 20px;\n}\n\n.close-btn {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  background: none;\n  border: none;\n  cursor: pointer;\n  font-size: 14px;\n  color: #666;\n}\n\n.close-btn:hover {\n  color: #000;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}